// Compiled by ClojureScript 0.0-2760 {:elide-asserts true, :static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2760";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$102,cljs.core._STAR_flush_on_newline_STAR_,cljs.core.constant$keyword$103,cljs.core._STAR_print_readably_STAR_,cljs.core.constant$keyword$104,cljs.core._STAR_print_meta_STAR_,cljs.core.constant$keyword$105,cljs.core._STAR_print_dup_STAR_,cljs.core.constant$keyword$106,cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__30235__delegate = function (args){
return console.log.apply(console,(function (){var G__30234 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__30234) : cljs.core.into_array.call(null,G__30234));
})());
};
var G__30235 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__30236__i = 0, G__30236__a = new Array(arguments.length -  0);
while (G__30236__i < G__30236__a.length) {G__30236__a[G__30236__i] = arguments[G__30236__i + 0]; ++G__30236__i;}
  args = new cljs.core.IndexedSeq(G__30236__a,0);
} 
return G__30235__delegate.call(this,args);};
G__30235.cljs$lang$maxFixedArity = 0;
G__30235.cljs$lang$applyTo = (function (arglist__30237){
var args = cljs.core.seq(arglist__30237);
return G__30235__delegate(args);
});
G__30235.cljs$core$IFn$_invoke$arity$variadic = G__30235__delegate;
return G__30235;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__30239 = x;
return goog.isString(G__30239);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__30241 = x__$1;
return goog.typeOf(G__30241);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3764__auto__ = ty;
if(cljs.core.truth_(and__3764__auto__)){
return ty.cljs$lang$type;
} else {
return and__3764__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__30243 = obj;
return goog.typeOf(G__30243);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__30245 = Symbol;
return goog.typeOf(G__30245);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4663__auto___30247 = len;
var i_30248 = (0);
while(true){
if((i_30248 < n__4663__auto___30247)){
(new_arr[i_30248] = (arr[i_30248]));

var G__30249 = (i_30248 + (1));
i_30248 = G__30249;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__30250 = (i + (1));
i = G__30250;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__30259__delegate = function (array,i,idxs){
var G__30256 = aget;
var G__30257 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__30258 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__30256,G__30257,G__30258) : cljs.core.apply.call(null,G__30256,G__30257,G__30258));
};
var G__30259 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__30260__i = 0, G__30260__a = new Array(arguments.length -  2);
while (G__30260__i < G__30260__a.length) {G__30260__a[G__30260__i] = arguments[G__30260__i + 2]; ++G__30260__i;}
  idxs = new cljs.core.IndexedSeq(G__30260__a,0);
} 
return G__30259__delegate.call(this,array,i,idxs);};
G__30259.cljs$lang$maxFixedArity = 2;
G__30259.cljs$lang$applyTo = (function (arglist__30261){
var array = cljs.core.first(arglist__30261);
arglist__30261 = cljs.core.next(arglist__30261);
var i = cljs.core.first(arglist__30261);
var idxs = cljs.core.rest(arglist__30261);
return G__30259__delegate(array,i,idxs);
});
G__30259.cljs$core$IFn$_invoke$arity$variadic = G__30259__delegate;
return G__30259;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__30262 = null;
if (arguments.length > 2) {
var G__30263__i = 0, G__30263__a = new Array(arguments.length -  2);
while (G__30263__i < G__30263__a.length) {G__30263__a[G__30263__i] = arguments[G__30263__i + 2]; ++G__30263__i;}
G__30262 = new cljs.core.IndexedSeq(G__30263__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__30262);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__30272__delegate = function (array,idx,idx2,idxv){
var G__30268 = aset;
var G__30269 = (array[idx]);
var G__30270 = idx2;
var G__30271 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__30268,G__30269,G__30270,G__30271) : cljs.core.apply.call(null,G__30268,G__30269,G__30270,G__30271));
};
var G__30272 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__30273__i = 0, G__30273__a = new Array(arguments.length -  3);
while (G__30273__i < G__30273__a.length) {G__30273__a[G__30273__i] = arguments[G__30273__i + 3]; ++G__30273__i;}
  idxv = new cljs.core.IndexedSeq(G__30273__a,0);
} 
return G__30272__delegate.call(this,array,idx,idx2,idxv);};
G__30272.cljs$lang$maxFixedArity = 3;
G__30272.cljs$lang$applyTo = (function (arglist__30274){
var array = cljs.core.first(arglist__30274);
arglist__30274 = cljs.core.next(arglist__30274);
var idx = cljs.core.first(arglist__30274);
arglist__30274 = cljs.core.next(arglist__30274);
var idx2 = cljs.core.first(arglist__30274);
var idxv = cljs.core.rest(arglist__30274);
return G__30272__delegate(array,idx,idx2,idxv);
});
G__30272.cljs$core$IFn$_invoke$arity$variadic = G__30272__delegate;
return G__30272;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__30275 = null;
if (arguments.length > 3) {
var G__30276__i = 0, G__30276__a = new Array(arguments.length -  3);
while (G__30276__i < G__30276__a.length) {G__30276__a[G__30276__i] = arguments[G__30276__i + 3]; ++G__30276__i;}
G__30275 = new cljs.core.IndexedSeq(G__30276__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__30275);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__30282 = (function (a,x){
a.push(x);

return a;
});
var G__30283 = [];
var G__30284 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__30282,G__30283,G__30284) : cljs.core.reduce.call(null,G__30282,G__30283,G__30284));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__30285__i = 0, G__30285__a = new Array(arguments.length -  2);
while (G__30285__i < G__30285__a.length) {G__30285__a[G__30285__i] = arguments[G__30285__i + 2]; ++G__30285__i;}
  args = new cljs.core.IndexedSeq(G__30285__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__30286){
var obj = cljs.core.first(arglist__30286);
arglist__30286 = cljs.core.next(arglist__30286);
var s = cljs.core.first(arglist__30286);
var args = cljs.core.rest(arglist__30286);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj30288 = {};
return obj30288;
})();


cljs.core.IFn = (function (){var obj30290 = {};
return obj30290;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3764__auto__ = this$;
if(and__3764__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3764__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4420__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3776__auto__ = (cljs.core._invoke[(function (){var G__30336 = x__4420__auto__;
return goog.typeOf(G__30336);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._invoke["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3764__auto__ = this$;
if(and__3764__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3764__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4420__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3776__auto__ = (cljs.core._invoke[(function (){var G__30338 = x__4420__auto__;
return goog.typeOf(G__30338);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._invoke["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3764__auto__ = this$;
if(and__3764__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3764__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4420__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3776__auto__ = (cljs.core._invoke[(function (){var G__30340 = x__4420__auto__;
return goog.typeOf(G__30340);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._invoke["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3764__auto__ = this$;
if(and__3764__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3764__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4420__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3776__auto__ = (cljs.core._invoke[(function (){var G__30342 = x__4420__auto__;
return goog.typeOf(G__30342);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._invoke["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3764__auto__ = this$;
if(and__3764__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3764__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4420__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3776__auto__ = (cljs.core._invoke[(function (){var G__30344 = x__4420__auto__;
return goog.typeOf(G__30344);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._invoke["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3764__auto__ = this$;
if(and__3764__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3764__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4420__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3776__auto__ = (cljs.core._invoke[(function (){var G__30346 = x__4420__auto__;
return goog.typeOf(G__30346);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._invoke["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3764__auto__ = this$;
if(and__3764__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3764__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4420__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3776__auto__ = (cljs.core._invoke[(function (){var G__30348 = x__4420__auto__;
return goog.typeOf(G__30348);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._invoke["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3764__auto__ = this$;
if(and__3764__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3764__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4420__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3776__auto__ = (cljs.core._invoke[(function (){var G__30350 = x__4420__auto__;
return goog.typeOf(G__30350);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._invoke["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3764__auto__ = this$;
if(and__3764__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3764__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4420__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3776__auto__ = (cljs.core._invoke[(function (){var G__30352 = x__4420__auto__;
return goog.typeOf(G__30352);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._invoke["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3764__auto__ = this$;
if(and__3764__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3764__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4420__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3776__auto__ = (cljs.core._invoke[(function (){var G__30354 = x__4420__auto__;
return goog.typeOf(G__30354);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._invoke["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3764__auto__ = this$;
if(and__3764__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3764__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4420__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3776__auto__ = (cljs.core._invoke[(function (){var G__30356 = x__4420__auto__;
return goog.typeOf(G__30356);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._invoke["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3764__auto__ = this$;
if(and__3764__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3764__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4420__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3776__auto__ = (cljs.core._invoke[(function (){var G__30358 = x__4420__auto__;
return goog.typeOf(G__30358);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._invoke["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3764__auto__ = this$;
if(and__3764__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3764__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4420__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3776__auto__ = (cljs.core._invoke[(function (){var G__30360 = x__4420__auto__;
return goog.typeOf(G__30360);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._invoke["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3764__auto__ = this$;
if(and__3764__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3764__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4420__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3776__auto__ = (cljs.core._invoke[(function (){var G__30362 = x__4420__auto__;
return goog.typeOf(G__30362);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._invoke["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3764__auto__ = this$;
if(and__3764__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3764__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4420__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3776__auto__ = (cljs.core._invoke[(function (){var G__30364 = x__4420__auto__;
return goog.typeOf(G__30364);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._invoke["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3764__auto__ = this$;
if(and__3764__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3764__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4420__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3776__auto__ = (cljs.core._invoke[(function (){var G__30366 = x__4420__auto__;
return goog.typeOf(G__30366);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._invoke["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3764__auto__ = this$;
if(and__3764__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3764__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4420__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3776__auto__ = (cljs.core._invoke[(function (){var G__30368 = x__4420__auto__;
return goog.typeOf(G__30368);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._invoke["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3764__auto__ = this$;
if(and__3764__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3764__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4420__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3776__auto__ = (cljs.core._invoke[(function (){var G__30370 = x__4420__auto__;
return goog.typeOf(G__30370);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._invoke["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3764__auto__ = this$;
if(and__3764__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3764__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4420__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3776__auto__ = (cljs.core._invoke[(function (){var G__30372 = x__4420__auto__;
return goog.typeOf(G__30372);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._invoke["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3764__auto__ = this$;
if(and__3764__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3764__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4420__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3776__auto__ = (cljs.core._invoke[(function (){var G__30374 = x__4420__auto__;
return goog.typeOf(G__30374);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._invoke["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3764__auto__ = this$;
if(and__3764__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3764__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4420__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3776__auto__ = (cljs.core._invoke[(function (){var G__30376 = x__4420__auto__;
return goog.typeOf(G__30376);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._invoke["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3764__auto__ = this$;
if(and__3764__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3764__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4420__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3776__auto__ = (cljs.core._invoke[(function (){var G__30378 = x__4420__auto__;
return goog.typeOf(G__30378);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._invoke["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj30380 = {};
return obj30380;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3764__auto__ = value;
if(and__3764__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3764__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4420__auto__ = (((value == null))?null:value);
return (function (){var or__3776__auto__ = (cljs.core._clone[(function (){var G__30384 = x__4420__auto__;
return goog.typeOf(G__30384);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._clone["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj30386 = {};
return obj30386;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3764__auto__ = coll;
if(and__3764__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3764__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4420__auto__ = (((coll == null))?null:coll);
return (function (){var or__3776__auto__ = (cljs.core._count[(function (){var G__30390 = x__4420__auto__;
return goog.typeOf(G__30390);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._count["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj30392 = {};
return obj30392;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3764__auto__ = coll;
if(and__3764__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3764__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4420__auto__ = (((coll == null))?null:coll);
return (function (){var or__3776__auto__ = (cljs.core._empty[(function (){var G__30396 = x__4420__auto__;
return goog.typeOf(G__30396);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._empty["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj30398 = {};
return obj30398;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3764__auto__ = coll;
if(and__3764__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3764__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4420__auto__ = (((coll == null))?null:coll);
return (function (){var or__3776__auto__ = (cljs.core._conj[(function (){var G__30402 = x__4420__auto__;
return goog.typeOf(G__30402);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._conj["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj30404 = {};
return obj30404;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3764__auto__ = coll;
if(and__3764__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3764__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4420__auto__ = (((coll == null))?null:coll);
return (function (){var or__3776__auto__ = (cljs.core._nth[(function (){var G__30410 = x__4420__auto__;
return goog.typeOf(G__30410);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._nth["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3764__auto__ = coll;
if(and__3764__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3764__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4420__auto__ = (((coll == null))?null:coll);
return (function (){var or__3776__auto__ = (cljs.core._nth[(function (){var G__30412 = x__4420__auto__;
return goog.typeOf(G__30412);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._nth["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj30414 = {};
return obj30414;
})();


cljs.core.ISeq = (function (){var obj30416 = {};
return obj30416;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3764__auto__ = coll;
if(and__3764__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3764__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4420__auto__ = (((coll == null))?null:coll);
return (function (){var or__3776__auto__ = (cljs.core._first[(function (){var G__30420 = x__4420__auto__;
return goog.typeOf(G__30420);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._first["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3764__auto__ = coll;
if(and__3764__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3764__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4420__auto__ = (((coll == null))?null:coll);
return (function (){var or__3776__auto__ = (cljs.core._rest[(function (){var G__30424 = x__4420__auto__;
return goog.typeOf(G__30424);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._rest["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj30426 = {};
return obj30426;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3764__auto__ = coll;
if(and__3764__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3764__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4420__auto__ = (((coll == null))?null:coll);
return (function (){var or__3776__auto__ = (cljs.core._next[(function (){var G__30430 = x__4420__auto__;
return goog.typeOf(G__30430);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._next["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj30432 = {};
return obj30432;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3764__auto__ = o;
if(and__3764__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3764__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4420__auto__ = (((o == null))?null:o);
return (function (){var or__3776__auto__ = (cljs.core._lookup[(function (){var G__30438 = x__4420__auto__;
return goog.typeOf(G__30438);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._lookup["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3764__auto__ = o;
if(and__3764__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3764__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4420__auto__ = (((o == null))?null:o);
return (function (){var or__3776__auto__ = (cljs.core._lookup[(function (){var G__30440 = x__4420__auto__;
return goog.typeOf(G__30440);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._lookup["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj30442 = {};
return obj30442;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3764__auto__ = coll;
if(and__3764__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3764__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4420__auto__ = (((coll == null))?null:coll);
return (function (){var or__3776__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__30446 = x__4420__auto__;
return goog.typeOf(G__30446);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3764__auto__ = coll;
if(and__3764__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3764__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4420__auto__ = (((coll == null))?null:coll);
return (function (){var or__3776__auto__ = (cljs.core._assoc[(function (){var G__30450 = x__4420__auto__;
return goog.typeOf(G__30450);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._assoc["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj30452 = {};
return obj30452;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3764__auto__ = coll;
if(and__3764__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3764__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4420__auto__ = (((coll == null))?null:coll);
return (function (){var or__3776__auto__ = (cljs.core._dissoc[(function (){var G__30456 = x__4420__auto__;
return goog.typeOf(G__30456);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj30458 = {};
return obj30458;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3764__auto__ = coll;
if(and__3764__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3764__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4420__auto__ = (((coll == null))?null:coll);
return (function (){var or__3776__auto__ = (cljs.core._key[(function (){var G__30462 = x__4420__auto__;
return goog.typeOf(G__30462);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._key["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3764__auto__ = coll;
if(and__3764__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3764__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4420__auto__ = (((coll == null))?null:coll);
return (function (){var or__3776__auto__ = (cljs.core._val[(function (){var G__30466 = x__4420__auto__;
return goog.typeOf(G__30466);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._val["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj30468 = {};
return obj30468;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3764__auto__ = coll;
if(and__3764__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3764__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4420__auto__ = (((coll == null))?null:coll);
return (function (){var or__3776__auto__ = (cljs.core._disjoin[(function (){var G__30472 = x__4420__auto__;
return goog.typeOf(G__30472);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj30474 = {};
return obj30474;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3764__auto__ = coll;
if(and__3764__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3764__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4420__auto__ = (((coll == null))?null:coll);
return (function (){var or__3776__auto__ = (cljs.core._peek[(function (){var G__30478 = x__4420__auto__;
return goog.typeOf(G__30478);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._peek["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3764__auto__ = coll;
if(and__3764__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3764__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4420__auto__ = (((coll == null))?null:coll);
return (function (){var or__3776__auto__ = (cljs.core._pop[(function (){var G__30482 = x__4420__auto__;
return goog.typeOf(G__30482);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._pop["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj30484 = {};
return obj30484;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3764__auto__ = coll;
if(and__3764__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3764__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4420__auto__ = (((coll == null))?null:coll);
return (function (){var or__3776__auto__ = (cljs.core._assoc_n[(function (){var G__30488 = x__4420__auto__;
return goog.typeOf(G__30488);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj30490 = {};
return obj30490;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3764__auto__ = o;
if(and__3764__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3764__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4420__auto__ = (((o == null))?null:o);
return (function (){var or__3776__auto__ = (cljs.core._deref[(function (){var G__30494 = x__4420__auto__;
return goog.typeOf(G__30494);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._deref["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj30496 = {};
return obj30496;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3764__auto__ = o;
if(and__3764__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3764__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4420__auto__ = (((o == null))?null:o);
return (function (){var or__3776__auto__ = (cljs.core._deref_with_timeout[(function (){var G__30500 = x__4420__auto__;
return goog.typeOf(G__30500);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj30502 = {};
return obj30502;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3764__auto__ = o;
if(and__3764__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3764__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4420__auto__ = (((o == null))?null:o);
return (function (){var or__3776__auto__ = (cljs.core._meta[(function (){var G__30506 = x__4420__auto__;
return goog.typeOf(G__30506);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._meta["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj30508 = {};
return obj30508;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3764__auto__ = o;
if(and__3764__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3764__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4420__auto__ = (((o == null))?null:o);
return (function (){var or__3776__auto__ = (cljs.core._with_meta[(function (){var G__30512 = x__4420__auto__;
return goog.typeOf(G__30512);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj30514 = {};
return obj30514;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3764__auto__ = coll;
if(and__3764__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3764__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4420__auto__ = (((coll == null))?null:coll);
return (function (){var or__3776__auto__ = (cljs.core._reduce[(function (){var G__30520 = x__4420__auto__;
return goog.typeOf(G__30520);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._reduce["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3764__auto__ = coll;
if(and__3764__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3764__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4420__auto__ = (((coll == null))?null:coll);
return (function (){var or__3776__auto__ = (cljs.core._reduce[(function (){var G__30522 = x__4420__auto__;
return goog.typeOf(G__30522);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._reduce["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj30524 = {};
return obj30524;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3764__auto__ = coll;
if(and__3764__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3764__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4420__auto__ = (((coll == null))?null:coll);
return (function (){var or__3776__auto__ = (cljs.core._kv_reduce[(function (){var G__30528 = x__4420__auto__;
return goog.typeOf(G__30528);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj30530 = {};
return obj30530;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3764__auto__ = o;
if(and__3764__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3764__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4420__auto__ = (((o == null))?null:o);
return (function (){var or__3776__auto__ = (cljs.core._equiv[(function (){var G__30534 = x__4420__auto__;
return goog.typeOf(G__30534);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._equiv["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj30536 = {};
return obj30536;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3764__auto__ = o;
if(and__3764__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3764__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4420__auto__ = (((o == null))?null:o);
return (function (){var or__3776__auto__ = (cljs.core._hash[(function (){var G__30540 = x__4420__auto__;
return goog.typeOf(G__30540);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._hash["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj30542 = {};
return obj30542;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3764__auto__ = o;
if(and__3764__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3764__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4420__auto__ = (((o == null))?null:o);
return (function (){var or__3776__auto__ = (cljs.core._seq[(function (){var G__30546 = x__4420__auto__;
return goog.typeOf(G__30546);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._seq["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj30548 = {};
return obj30548;
})();


cljs.core.IList = (function (){var obj30550 = {};
return obj30550;
})();


cljs.core.IRecord = (function (){var obj30552 = {};
return obj30552;
})();


cljs.core.IReversible = (function (){var obj30554 = {};
return obj30554;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3764__auto__ = coll;
if(and__3764__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3764__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4420__auto__ = (((coll == null))?null:coll);
return (function (){var or__3776__auto__ = (cljs.core._rseq[(function (){var G__30558 = x__4420__auto__;
return goog.typeOf(G__30558);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._rseq["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj30560 = {};
return obj30560;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3764__auto__ = coll;
if(and__3764__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3764__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4420__auto__ = (((coll == null))?null:coll);
return (function (){var or__3776__auto__ = (cljs.core._sorted_seq[(function (){var G__30564 = x__4420__auto__;
return goog.typeOf(G__30564);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3764__auto__ = coll;
if(and__3764__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3764__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4420__auto__ = (((coll == null))?null:coll);
return (function (){var or__3776__auto__ = (cljs.core._sorted_seq_from[(function (){var G__30568 = x__4420__auto__;
return goog.typeOf(G__30568);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3764__auto__ = coll;
if(and__3764__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3764__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4420__auto__ = (((coll == null))?null:coll);
return (function (){var or__3776__auto__ = (cljs.core._entry_key[(function (){var G__30572 = x__4420__auto__;
return goog.typeOf(G__30572);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3764__auto__ = coll;
if(and__3764__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3764__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4420__auto__ = (((coll == null))?null:coll);
return (function (){var or__3776__auto__ = (cljs.core._comparator[(function (){var G__30576 = x__4420__auto__;
return goog.typeOf(G__30576);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._comparator["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj30578 = {};
return obj30578;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3764__auto__ = writer;
if(and__3764__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3764__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4420__auto__ = (((writer == null))?null:writer);
return (function (){var or__3776__auto__ = (cljs.core._write[(function (){var G__30582 = x__4420__auto__;
return goog.typeOf(G__30582);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._write["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3764__auto__ = writer;
if(and__3764__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3764__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4420__auto__ = (((writer == null))?null:writer);
return (function (){var or__3776__auto__ = (cljs.core._flush[(function (){var G__30586 = x__4420__auto__;
return goog.typeOf(G__30586);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._flush["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj30588 = {};
return obj30588;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3764__auto__ = o;
if(and__3764__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3764__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4420__auto__ = (((o == null))?null:o);
return (function (){var or__3776__auto__ = (cljs.core._pr_writer[(function (){var G__30592 = x__4420__auto__;
return goog.typeOf(G__30592);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj30594 = {};
return obj30594;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3764__auto__ = d;
if(and__3764__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3764__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4420__auto__ = (((d == null))?null:d);
return (function (){var or__3776__auto__ = (cljs.core._realized_QMARK_[(function (){var G__30598 = x__4420__auto__;
return goog.typeOf(G__30598);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj30600 = {};
return obj30600;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3764__auto__ = this$;
if(and__3764__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3764__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4420__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3776__auto__ = (cljs.core._notify_watches[(function (){var G__30604 = x__4420__auto__;
return goog.typeOf(G__30604);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3764__auto__ = this$;
if(and__3764__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3764__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4420__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3776__auto__ = (cljs.core._add_watch[(function (){var G__30608 = x__4420__auto__;
return goog.typeOf(G__30608);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3764__auto__ = this$;
if(and__3764__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3764__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4420__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3776__auto__ = (cljs.core._remove_watch[(function (){var G__30612 = x__4420__auto__;
return goog.typeOf(G__30612);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj30614 = {};
return obj30614;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3764__auto__ = coll;
if(and__3764__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3764__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4420__auto__ = (((coll == null))?null:coll);
return (function (){var or__3776__auto__ = (cljs.core._as_transient[(function (){var G__30618 = x__4420__auto__;
return goog.typeOf(G__30618);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj30620 = {};
return obj30620;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3764__auto__ = tcoll;
if(and__3764__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3764__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4420__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3776__auto__ = (cljs.core._conj_BANG_[(function (){var G__30624 = x__4420__auto__;
return goog.typeOf(G__30624);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3764__auto__ = tcoll;
if(and__3764__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3764__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4420__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3776__auto__ = (cljs.core._persistent_BANG_[(function (){var G__30628 = x__4420__auto__;
return goog.typeOf(G__30628);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj30630 = {};
return obj30630;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3764__auto__ = tcoll;
if(and__3764__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3764__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4420__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3776__auto__ = (cljs.core._assoc_BANG_[(function (){var G__30634 = x__4420__auto__;
return goog.typeOf(G__30634);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj30636 = {};
return obj30636;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3764__auto__ = tcoll;
if(and__3764__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3764__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4420__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3776__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__30640 = x__4420__auto__;
return goog.typeOf(G__30640);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj30642 = {};
return obj30642;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3764__auto__ = tcoll;
if(and__3764__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3764__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4420__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3776__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__30646 = x__4420__auto__;
return goog.typeOf(G__30646);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3764__auto__ = tcoll;
if(and__3764__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3764__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4420__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3776__auto__ = (cljs.core._pop_BANG_[(function (){var G__30650 = x__4420__auto__;
return goog.typeOf(G__30650);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj30652 = {};
return obj30652;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3764__auto__ = tcoll;
if(and__3764__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3764__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4420__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3776__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__30656 = x__4420__auto__;
return goog.typeOf(G__30656);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj30658 = {};
return obj30658;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3764__auto__ = x;
if(and__3764__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3764__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4420__auto__ = (((x == null))?null:x);
return (function (){var or__3776__auto__ = (cljs.core._compare[(function (){var G__30662 = x__4420__auto__;
return goog.typeOf(G__30662);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._compare["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj30664 = {};
return obj30664;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3764__auto__ = coll;
if(and__3764__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3764__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4420__auto__ = (((coll == null))?null:coll);
return (function (){var or__3776__auto__ = (cljs.core._drop_first[(function (){var G__30668 = x__4420__auto__;
return goog.typeOf(G__30668);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj30670 = {};
return obj30670;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3764__auto__ = coll;
if(and__3764__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3764__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4420__auto__ = (((coll == null))?null:coll);
return (function (){var or__3776__auto__ = (cljs.core._chunked_first[(function (){var G__30674 = x__4420__auto__;
return goog.typeOf(G__30674);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3764__auto__ = coll;
if(and__3764__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3764__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4420__auto__ = (((coll == null))?null:coll);
return (function (){var or__3776__auto__ = (cljs.core._chunked_rest[(function (){var G__30678 = x__4420__auto__;
return goog.typeOf(G__30678);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj30680 = {};
return obj30680;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3764__auto__ = coll;
if(and__3764__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3764__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4420__auto__ = (((coll == null))?null:coll);
return (function (){var or__3776__auto__ = (cljs.core._chunked_next[(function (){var G__30684 = x__4420__auto__;
return goog.typeOf(G__30684);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj30686 = {};
return obj30686;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3764__auto__ = x;
if(and__3764__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3764__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4420__auto__ = (((x == null))?null:x);
return (function (){var or__3776__auto__ = (cljs.core._name[(function (){var G__30690 = x__4420__auto__;
return goog.typeOf(G__30690);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._name["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3764__auto__ = x;
if(and__3764__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3764__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4420__auto__ = (((x == null))?null:x);
return (function (){var or__3776__auto__ = (cljs.core._namespace[(function (){var G__30694 = x__4420__auto__;
return goog.typeOf(G__30694);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._namespace["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj30696 = {};
return obj30696;
})();


cljs.core.IReset = (function (){var obj30698 = {};
return obj30698;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3764__auto__ = o;
if(and__3764__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3764__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4420__auto__ = (((o == null))?null:o);
return (function (){var or__3776__auto__ = (cljs.core._reset_BANG_[(function (){var G__30702 = x__4420__auto__;
return goog.typeOf(G__30702);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj30704 = {};
return obj30704;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3764__auto__ = o;
if(and__3764__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3764__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4420__auto__ = (((o == null))?null:o);
return (function (){var or__3776__auto__ = (cljs.core._swap_BANG_[(function (){var G__30714 = x__4420__auto__;
return goog.typeOf(G__30714);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3764__auto__ = o;
if(and__3764__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3764__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4420__auto__ = (((o == null))?null:o);
return (function (){var or__3776__auto__ = (cljs.core._swap_BANG_[(function (){var G__30716 = x__4420__auto__;
return goog.typeOf(G__30716);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3764__auto__ = o;
if(and__3764__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3764__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4420__auto__ = (((o == null))?null:o);
return (function (){var or__3776__auto__ = (cljs.core._swap_BANG_[(function (){var G__30718 = x__4420__auto__;
return goog.typeOf(G__30718);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3764__auto__ = o;
if(and__3764__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3764__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4420__auto__ = (((o == null))?null:o);
return (function (){var or__3776__auto__ = (cljs.core._swap_BANG_[(function (){var G__30720 = x__4420__auto__;
return goog.typeOf(G__30720);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj30722 = {};
return obj30722;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3764__auto__ = o;
if(and__3764__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3764__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4420__auto__ = (((o == null))?null:o);
return (function (){var or__3776__auto__ = (cljs.core._vreset_BANG_[(function (){var G__30726 = x__4420__auto__;
return goog.typeOf(G__30726);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj30728 = {};
return obj30728;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3764__auto__ = coll;
if(and__3764__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3764__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4420__auto__ = (((coll == null))?null:coll);
return (function (){var or__3776__auto__ = (cljs.core._iterator[(function (){var G__30732 = x__4420__auto__;
return goog.typeOf(G__30732);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._iterator["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__30735 = (4294967295);
var G__30736 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__30735,G__30736) : Math.imul.call(null,G__30735,G__30736));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__30739 = a;
var G__30740 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__30739,G__30740) : Math.imul.call(null,G__30739,G__30740));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__30741 = (i + (2));
var G__30742 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__30741;
h1 = G__30742;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj30744 = {};
return obj30744;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__30745 = (i + (1));
var G__30746 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__30745;
hash = G__30746;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj30750 = {};
return obj30750;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__30753 = o;
if(G__30753){
var bit__4450__auto__ = (G__30753.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4450__auto__) || (G__30753.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__30754 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__30754) : Math.floor.call(null,G__30754));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3764__auto__ = cljs.core.not(a.ns);
if(and__3764__auto__){
return b.ns;
} else {
return and__3764__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__30761 = a.ns;
var G__30762 = b.ns;
return goog.array.defaultCompare(G__30761,G__30762);
})();
if(((0) === nsc)){
var G__30763 = a.name;
var G__30764 = b.name;
return goog.array.defaultCompare(G__30763,G__30764);
} else {
return nsc;
}
}
} else {
var G__30765 = a.name;
var G__30766 = b.name;
return goog.array.defaultCompare(G__30765,G__30766);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4197__auto__ = self__._hash;
if(!((h__4197__auto__ == null))){
return h__4197__auto__;
} else {
var h__4197__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4197__auto____$1;

return h__4197__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__30768 = null;
var G__30768__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__30768__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__30768 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__30768__2.call(this,self__,coll);
case 3:
return G__30768__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30768.cljs$core$IFn$_invoke$arity$2 = G__30768__2;
G__30768.cljs$core$IFn$_invoke$arity$3 = G__30768__3;
return G__30768;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args30767){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args30767)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__30816 = null;
var G__30816__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__30816__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__30816__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__30816__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__30816__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__30816__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__30816__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__30816__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__30816__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__30816__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__30816__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__30816__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__30816__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__30816__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__30816__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__30816__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__30816__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__30816__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__30816__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__30816__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__30816__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__30816__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30772 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__30773 = a;
var G__30774 = b;
var G__30775 = c;
var G__30776 = d;
var G__30777 = e;
var G__30778 = f;
var G__30779 = g;
var G__30780 = h;
var G__30781 = i;
var G__30782 = j;
var G__30783 = k;
var G__30784 = l;
var G__30785 = m;
var G__30786 = n;
var G__30787 = o;
var G__30788 = p;
var G__30789 = q;
var G__30790 = r;
var G__30791 = s;
var G__30792 = t;
var G__30793 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__30772,G__30773,G__30774,G__30775,G__30776,G__30777,G__30778,G__30779,G__30780,G__30781,G__30782,G__30783,G__30784,G__30785,G__30786,G__30787,G__30788,G__30789,G__30790,G__30791,G__30792,G__30793) : cljs.core.apply.call(null,G__30772,G__30773,G__30774,G__30775,G__30776,G__30777,G__30778,G__30779,G__30780,G__30781,G__30782,G__30783,G__30784,G__30785,G__30786,G__30787,G__30788,G__30789,G__30790,G__30791,G__30792,G__30793));
});
G__30816 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__30816__1.call(this,self__);
case 2:
return G__30816__2.call(this,self__,a);
case 3:
return G__30816__3.call(this,self__,a,b);
case 4:
return G__30816__4.call(this,self__,a,b,c);
case 5:
return G__30816__5.call(this,self__,a,b,c,d);
case 6:
return G__30816__6.call(this,self__,a,b,c,d,e);
case 7:
return G__30816__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__30816__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__30816__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__30816__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__30816__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__30816__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__30816__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__30816__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__30816__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__30816__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__30816__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__30816__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__30816__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__30816__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__30816__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__30816__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30816.cljs$core$IFn$_invoke$arity$1 = G__30816__1;
G__30816.cljs$core$IFn$_invoke$arity$2 = G__30816__2;
G__30816.cljs$core$IFn$_invoke$arity$3 = G__30816__3;
G__30816.cljs$core$IFn$_invoke$arity$4 = G__30816__4;
G__30816.cljs$core$IFn$_invoke$arity$5 = G__30816__5;
G__30816.cljs$core$IFn$_invoke$arity$6 = G__30816__6;
G__30816.cljs$core$IFn$_invoke$arity$7 = G__30816__7;
G__30816.cljs$core$IFn$_invoke$arity$8 = G__30816__8;
G__30816.cljs$core$IFn$_invoke$arity$9 = G__30816__9;
G__30816.cljs$core$IFn$_invoke$arity$10 = G__30816__10;
G__30816.cljs$core$IFn$_invoke$arity$11 = G__30816__11;
G__30816.cljs$core$IFn$_invoke$arity$12 = G__30816__12;
G__30816.cljs$core$IFn$_invoke$arity$13 = G__30816__13;
G__30816.cljs$core$IFn$_invoke$arity$14 = G__30816__14;
G__30816.cljs$core$IFn$_invoke$arity$15 = G__30816__15;
G__30816.cljs$core$IFn$_invoke$arity$16 = G__30816__16;
G__30816.cljs$core$IFn$_invoke$arity$17 = G__30816__17;
G__30816.cljs$core$IFn$_invoke$arity$18 = G__30816__18;
G__30816.cljs$core$IFn$_invoke$arity$19 = G__30816__19;
G__30816.cljs$core$IFn$_invoke$arity$20 = G__30816__20;
G__30816.cljs$core$IFn$_invoke$arity$21 = G__30816__21;
G__30816.cljs$core$IFn$_invoke$arity$22 = G__30816__22;
return G__30816;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args30771){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args30771)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__30794 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__30795 = a;
var G__30796 = b;
var G__30797 = c;
var G__30798 = d;
var G__30799 = e;
var G__30800 = f;
var G__30801 = g;
var G__30802 = h;
var G__30803 = i;
var G__30804 = j;
var G__30805 = k;
var G__30806 = l;
var G__30807 = m;
var G__30808 = n;
var G__30809 = o;
var G__30810 = p;
var G__30811 = q;
var G__30812 = r;
var G__30813 = s;
var G__30814 = t;
var G__30815 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__30794,G__30795,G__30796,G__30797,G__30798,G__30799,G__30800,G__30801,G__30802,G__30803,G__30804,G__30805,G__30806,G__30807,G__30808,G__30809,G__30810,G__30811,G__30812,G__30813,G__30814,G__30815) : cljs.core.apply.call(null,G__30794,G__30795,G__30796,G__30797,G__30798,G__30799,G__30800,G__30801,G__30802,G__30803,G__30804,G__30805,G__30806,G__30807,G__30808,G__30809,G__30810,G__30811,G__30812,G__30813,G__30814,G__30815));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__30818 = x;
if(G__30818){
var bit__4457__auto__ = null;
if(cljs.core.truth_((function (){var or__3776__auto__ = bit__4457__auto__;
if(cljs.core.truth_(or__3776__auto__)){
return or__3776__auto__;
} else {
return G__30818.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__30818.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__30818);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__30818);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__30820 = value;
if(G__30820){
var bit__4457__auto__ = (G__30820.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4457__auto__) || (G__30820.cljs$core$ICloneable$)){
return true;
} else {
if((!G__30820.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__30820);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__30820);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__30822 = coll;
if(G__30822){
var bit__4450__auto__ = (G__30822.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4450__auto__) || (G__30822.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__30824 = coll;
if(G__30824){
var bit__4450__auto__ = (G__30824.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4450__auto__) || (G__30824.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__30826 = coll;
if(G__30826){
var bit__4450__auto__ = (G__30826.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4450__auto__) || (G__30826.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__30828 = coll;
if(G__30828){
var bit__4450__auto__ = (G__30828.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4450__auto__) || (G__30828.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__30833__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__30834 = y;
var G__30835 = cljs.core.first(more);
var G__30836 = cljs.core.next(more);
x = G__30834;
y = G__30835;
more = G__30836;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__30833 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30837__i = 0, G__30837__a = new Array(arguments.length -  2);
while (G__30837__i < G__30837__a.length) {G__30837__a[G__30837__i] = arguments[G__30837__i + 2]; ++G__30837__i;}
  more = new cljs.core.IndexedSeq(G__30837__a,0);
} 
return G__30833__delegate.call(this,x,y,more);};
G__30833.cljs$lang$maxFixedArity = 2;
G__30833.cljs$lang$applyTo = (function (arglist__30838){
var x = cljs.core.first(arglist__30838);
arglist__30838 = cljs.core.next(arglist__30838);
var y = cljs.core.first(arglist__30838);
var more = cljs.core.rest(arglist__30838);
return G__30833__delegate(x,y,more);
});
G__30833.cljs$core$IFn$_invoke$arity$variadic = G__30833__delegate;
return G__30833;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__30839 = null;
if (arguments.length > 2) {
var G__30840__i = 0, G__30840__a = new Array(arguments.length -  2);
while (G__30840__i < G__30840__a.length) {G__30840__a[G__30840__i] = arguments[G__30840__i + 2]; ++G__30840__i;}
G__30839 = new cljs.core.IndexedSeq(G__30840__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30839);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__30841 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__30841) : cljs.core.es6_iterator_seq.call(null,G__30841));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__30842 = (n + (1));
var G__30843 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__30844 = cljs.core.next(coll__$1);
n = G__30842;
hash_code = G__30843;
coll__$1 = G__30844;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__30845 = (n + (1));
var G__30846 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__30847 = cljs.core.next(coll__$1);
n = G__30845;
hash_code = G__30846;
coll__$1 = G__30847;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__30848 = o;
return goog.getUid(G__30848);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__30850 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30850) : cljs.core.deref.call(null,G__30850));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__30857 = val;
var G__30858 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30857,G__30858) : f.call(null,G__30857,G__30858));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__30863 = nval;
var G__30864 = (n + (1));
val = G__30863;
n = G__30864;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__30859 = val__$1;
var G__30860 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30859,G__30860) : f.call(null,G__30859,G__30860));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__30865 = nval;
var G__30866 = (n + (1));
val__$1 = G__30865;
n = G__30866;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__30861 = val__$1;
var G__30862 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30861,G__30862) : f.call(null,G__30861,G__30862));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__30867 = nval;
var G__30868 = (n + (1));
val__$1 = G__30867;
n = G__30868;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__30875 = val;
var G__30876 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30875,G__30876) : f.call(null,G__30875,G__30876));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__30881 = nval;
var G__30882 = (n + (1));
val = G__30881;
n = G__30882;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__30877 = val__$1;
var G__30878 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30877,G__30878) : f.call(null,G__30877,G__30878));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__30883 = nval;
var G__30884 = (n + (1));
val__$1 = G__30883;
n = G__30884;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__30879 = val__$1;
var G__30880 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30879,G__30880) : f.call(null,G__30879,G__30880));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__30885 = nval;
var G__30886 = (n + (1));
val__$1 = G__30885;
n = G__30886;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__30888 = x;
if(G__30888){
var bit__4457__auto__ = (G__30888.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4457__auto__) || (G__30888.cljs$core$ICounted$)){
return true;
} else {
if((!G__30888.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__30888);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__30888);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__30890 = x;
if(G__30890){
var bit__4457__auto__ = (G__30890.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4457__auto__) || (G__30890.cljs$core$IIndexed$)){
return true;
} else {
if((!G__30890.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__30890);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__30890);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__30891 = coll__$1;
var G__30892 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__30891,G__30892) : cljs.core.equiv_sequential.call(null,G__30891,G__30892));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__30893 = o;
var G__30894 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__30893,G__30894) : cljs.core.cons.call(null,G__30893,G__30894));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4754__auto__ = this;
return cljs.core.es6_iterator(this__4754__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__30897 = coll__$1;
var G__30898 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__30897,G__30898) : cljs.core.equiv_sequential.call(null,G__30897,G__30898));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__30899 = cljs.core.List.EMPTY;
var G__30900 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__30899,G__30900) : cljs.core.with_meta.call(null,G__30899,G__30900));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__30901 = f;
var G__30902 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__30901,G__30902) : cljs.core.seq_reduce.call(null,G__30901,G__30902));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__30903 = f;
var G__30904 = start;
var G__30905 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__30903,G__30904,G__30905) : cljs.core.seq_reduce.call(null,G__30903,G__30904,G__30905));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__30906 = o;
var G__30907 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__30906,G__30907) : cljs.core.cons.call(null,G__30906,G__30907));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4754__auto__ = this;
return cljs.core.es6_iterator(this__4754__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__30908 = sn;
s = G__30908;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__30913__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__30914 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__30915 = cljs.core.first(xs);
var G__30916 = cljs.core.next(xs);
coll = G__30914;
x = G__30915;
xs = G__30916;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__30913 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__30917__i = 0, G__30917__a = new Array(arguments.length -  2);
while (G__30917__i < G__30917__a.length) {G__30917__a[G__30917__i] = arguments[G__30917__i + 2]; ++G__30917__i;}
  xs = new cljs.core.IndexedSeq(G__30917__a,0);
} 
return G__30913__delegate.call(this,coll,x,xs);};
G__30913.cljs$lang$maxFixedArity = 2;
G__30913.cljs$lang$applyTo = (function (arglist__30918){
var coll = cljs.core.first(arglist__30918);
arglist__30918 = cljs.core.next(arglist__30918);
var x = cljs.core.first(arglist__30918);
var xs = cljs.core.rest(arglist__30918);
return G__30913__delegate(coll,x,xs);
});
G__30913.cljs$core$IFn$_invoke$arity$variadic = G__30913__delegate;
return G__30913;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__30919 = null;
if (arguments.length > 2) {
var G__30920__i = 0, G__30920__a = new Array(arguments.length -  2);
while (G__30920__i < G__30920__a.length) {G__30920__a[G__30920__i] = arguments[G__30920__i + 2]; ++G__30920__i;}
G__30919 = new cljs.core.IndexedSeq(G__30920__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__30919);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__30921 = cljs.core.next(s);
var G__30922 = (acc + (1));
s = G__30921;
acc = G__30922;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__30924 = coll;
if(G__30924){
var bit__4450__auto__ = (G__30924.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4450__auto__) || (G__30924.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__30925 = cljs.core.next(coll);
var G__30926 = (n - (1));
coll = G__30925;
n = G__30926;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__30927 = cljs.core.next(coll);
var G__30928 = (n - (1));
var G__30929 = not_found;
coll = G__30927;
n = G__30928;
not_found = G__30929;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__30934 = coll;
if(G__30934){
var bit__4450__auto__ = (G__30934.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4450__auto__) || (G__30934.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__30935 = coll;
if(G__30935){
var bit__4457__auto__ = (G__30935.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4457__auto__) || (G__30935.cljs$core$ISeq$)){
return true;
} else {
if((!G__30935.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__30935);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__30935);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__30936 = coll;
if(G__30936){
var bit__4450__auto__ = (G__30936.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4450__auto__) || (G__30936.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__30937 = coll;
if(G__30937){
var bit__4457__auto__ = (G__30937.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4457__auto__) || (G__30937.cljs$core$ISeq$)){
return true;
} else {
if((!G__30937.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__30937);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__30937);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__30938 = (n__$1 - (1));
var G__30939 = cljs.core.rest(xs);
n__$1 = G__30938;
xs = G__30939;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__30942 = o;
if(G__30942){
var bit__4450__auto__ = (G__30942.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4450__auto__) || (G__30942.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__30943 = o;
if(G__30943){
var bit__4450__auto__ = (G__30943.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4450__auto__) || (G__30943.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__30947__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__30948 = ret;
var G__30949 = cljs.core.first(kvs);
var G__30950 = cljs.core.second(kvs);
var G__30951 = cljs.core.nnext(kvs);
coll = G__30948;
k = G__30949;
v = G__30950;
kvs = G__30951;
continue;
} else {
return ret;
}
break;
}
};
var G__30947 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__30952__i = 0, G__30952__a = new Array(arguments.length -  3);
while (G__30952__i < G__30952__a.length) {G__30952__a[G__30952__i] = arguments[G__30952__i + 3]; ++G__30952__i;}
  kvs = new cljs.core.IndexedSeq(G__30952__a,0);
} 
return G__30947__delegate.call(this,coll,k,v,kvs);};
G__30947.cljs$lang$maxFixedArity = 3;
G__30947.cljs$lang$applyTo = (function (arglist__30953){
var coll = cljs.core.first(arglist__30953);
arglist__30953 = cljs.core.next(arglist__30953);
var k = cljs.core.first(arglist__30953);
arglist__30953 = cljs.core.next(arglist__30953);
var v = cljs.core.first(arglist__30953);
var kvs = cljs.core.rest(arglist__30953);
return G__30947__delegate(coll,k,v,kvs);
});
G__30947.cljs$core$IFn$_invoke$arity$variadic = G__30947__delegate;
return G__30947;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__30954 = null;
if (arguments.length > 3) {
var G__30955__i = 0, G__30955__a = new Array(arguments.length -  3);
while (G__30955__i < G__30955__a.length) {G__30955__a[G__30955__i] = arguments[G__30955__i + 3]; ++G__30955__i;}
G__30954 = new cljs.core.IndexedSeq(G__30955__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__30954);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__30958__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__30959 = ret;
var G__30960 = cljs.core.first(ks);
var G__30961 = cljs.core.next(ks);
coll = G__30959;
k = G__30960;
ks = G__30961;
continue;
} else {
return ret;
}
}
break;
}
};
var G__30958 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__30962__i = 0, G__30962__a = new Array(arguments.length -  2);
while (G__30962__i < G__30962__a.length) {G__30962__a[G__30962__i] = arguments[G__30962__i + 2]; ++G__30962__i;}
  ks = new cljs.core.IndexedSeq(G__30962__a,0);
} 
return G__30958__delegate.call(this,coll,k,ks);};
G__30958.cljs$lang$maxFixedArity = 2;
G__30958.cljs$lang$applyTo = (function (arglist__30963){
var coll = cljs.core.first(arglist__30963);
arglist__30963 = cljs.core.next(arglist__30963);
var k = cljs.core.first(arglist__30963);
var ks = cljs.core.rest(arglist__30963);
return G__30958__delegate(coll,k,ks);
});
G__30958.cljs$core$IFn$_invoke$arity$variadic = G__30958__delegate;
return G__30958;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__30964 = null;
if (arguments.length > 2) {
var G__30965__i = 0, G__30965__a = new Array(arguments.length -  2);
while (G__30965__i < G__30965__a.length) {G__30965__a[G__30965__i] = arguments[G__30965__i + 2]; ++G__30965__i;}
G__30964 = new cljs.core.IndexedSeq(G__30965__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__30964);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3776__auto__ = (function (){var G__30970 = f;
return goog.isFunction(G__30970);
})();
if(cljs.core.truth_(or__3776__auto__)){
return or__3776__auto__;
} else {
var G__30971 = f;
if(G__30971){
var bit__4457__auto__ = null;
if(cljs.core.truth_((function (){var or__3776__auto____$1 = bit__4457__auto__;
if(cljs.core.truth_(or__3776__auto____$1)){
return or__3776__auto____$1;
} else {
return G__30971.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__30971.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__30971);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__30971);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__31437 = null;
var G__31437__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__31437__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30973 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__30973) : self__.afn.call(null,G__30973));
});
var G__31437__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30974 = a;
var G__30975 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__30974,G__30975) : self__.afn.call(null,G__30974,G__30975));
});
var G__31437__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30976 = a;
var G__30977 = b;
var G__30978 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__30976,G__30977,G__30978) : self__.afn.call(null,G__30976,G__30977,G__30978));
});
var G__31437__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30979 = a;
var G__30980 = b;
var G__30981 = c;
var G__30982 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__30979,G__30980,G__30981,G__30982) : self__.afn.call(null,G__30979,G__30980,G__30981,G__30982));
});
var G__31437__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30983 = a;
var G__30984 = b;
var G__30985 = c;
var G__30986 = d;
var G__30987 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__30983,G__30984,G__30985,G__30986,G__30987) : self__.afn.call(null,G__30983,G__30984,G__30985,G__30986,G__30987));
});
var G__31437__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30988 = a;
var G__30989 = b;
var G__30990 = c;
var G__30991 = d;
var G__30992 = e;
var G__30993 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__30988,G__30989,G__30990,G__30991,G__30992,G__30993) : self__.afn.call(null,G__30988,G__30989,G__30990,G__30991,G__30992,G__30993));
});
var G__31437__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__30994 = a;
var G__30995 = b;
var G__30996 = c;
var G__30997 = d;
var G__30998 = e;
var G__30999 = f;
var G__31000 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__30994,G__30995,G__30996,G__30997,G__30998,G__30999,G__31000) : self__.afn.call(null,G__30994,G__30995,G__30996,G__30997,G__30998,G__30999,G__31000));
});
var G__31437__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31001 = a;
var G__31002 = b;
var G__31003 = c;
var G__31004 = d;
var G__31005 = e;
var G__31006 = f;
var G__31007 = g;
var G__31008 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__31001,G__31002,G__31003,G__31004,G__31005,G__31006,G__31007,G__31008) : self__.afn.call(null,G__31001,G__31002,G__31003,G__31004,G__31005,G__31006,G__31007,G__31008));
});
var G__31437__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31009 = a;
var G__31010 = b;
var G__31011 = c;
var G__31012 = d;
var G__31013 = e;
var G__31014 = f;
var G__31015 = g;
var G__31016 = h;
var G__31017 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__31009,G__31010,G__31011,G__31012,G__31013,G__31014,G__31015,G__31016,G__31017) : self__.afn.call(null,G__31009,G__31010,G__31011,G__31012,G__31013,G__31014,G__31015,G__31016,G__31017));
});
var G__31437__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31018 = a;
var G__31019 = b;
var G__31020 = c;
var G__31021 = d;
var G__31022 = e;
var G__31023 = f;
var G__31024 = g;
var G__31025 = h;
var G__31026 = i;
var G__31027 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__31018,G__31019,G__31020,G__31021,G__31022,G__31023,G__31024,G__31025,G__31026,G__31027) : self__.afn.call(null,G__31018,G__31019,G__31020,G__31021,G__31022,G__31023,G__31024,G__31025,G__31026,G__31027));
});
var G__31437__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31028 = a;
var G__31029 = b;
var G__31030 = c;
var G__31031 = d;
var G__31032 = e;
var G__31033 = f;
var G__31034 = g;
var G__31035 = h;
var G__31036 = i;
var G__31037 = j;
var G__31038 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__31028,G__31029,G__31030,G__31031,G__31032,G__31033,G__31034,G__31035,G__31036,G__31037,G__31038) : self__.afn.call(null,G__31028,G__31029,G__31030,G__31031,G__31032,G__31033,G__31034,G__31035,G__31036,G__31037,G__31038));
});
var G__31437__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31039 = a;
var G__31040 = b;
var G__31041 = c;
var G__31042 = d;
var G__31043 = e;
var G__31044 = f;
var G__31045 = g;
var G__31046 = h;
var G__31047 = i;
var G__31048 = j;
var G__31049 = k;
var G__31050 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__31039,G__31040,G__31041,G__31042,G__31043,G__31044,G__31045,G__31046,G__31047,G__31048,G__31049,G__31050) : self__.afn.call(null,G__31039,G__31040,G__31041,G__31042,G__31043,G__31044,G__31045,G__31046,G__31047,G__31048,G__31049,G__31050));
});
var G__31437__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31051 = a;
var G__31052 = b;
var G__31053 = c;
var G__31054 = d;
var G__31055 = e;
var G__31056 = f;
var G__31057 = g;
var G__31058 = h;
var G__31059 = i;
var G__31060 = j;
var G__31061 = k;
var G__31062 = l;
var G__31063 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__31051,G__31052,G__31053,G__31054,G__31055,G__31056,G__31057,G__31058,G__31059,G__31060,G__31061,G__31062,G__31063) : self__.afn.call(null,G__31051,G__31052,G__31053,G__31054,G__31055,G__31056,G__31057,G__31058,G__31059,G__31060,G__31061,G__31062,G__31063));
});
var G__31437__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31064 = a;
var G__31065 = b;
var G__31066 = c;
var G__31067 = d;
var G__31068 = e;
var G__31069 = f;
var G__31070 = g;
var G__31071 = h;
var G__31072 = i;
var G__31073 = j;
var G__31074 = k;
var G__31075 = l;
var G__31076 = m;
var G__31077 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__31064,G__31065,G__31066,G__31067,G__31068,G__31069,G__31070,G__31071,G__31072,G__31073,G__31074,G__31075,G__31076,G__31077) : self__.afn.call(null,G__31064,G__31065,G__31066,G__31067,G__31068,G__31069,G__31070,G__31071,G__31072,G__31073,G__31074,G__31075,G__31076,G__31077));
});
var G__31437__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31078 = a;
var G__31079 = b;
var G__31080 = c;
var G__31081 = d;
var G__31082 = e;
var G__31083 = f;
var G__31084 = g;
var G__31085 = h;
var G__31086 = i;
var G__31087 = j;
var G__31088 = k;
var G__31089 = l;
var G__31090 = m;
var G__31091 = n;
var G__31092 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__31078,G__31079,G__31080,G__31081,G__31082,G__31083,G__31084,G__31085,G__31086,G__31087,G__31088,G__31089,G__31090,G__31091,G__31092) : self__.afn.call(null,G__31078,G__31079,G__31080,G__31081,G__31082,G__31083,G__31084,G__31085,G__31086,G__31087,G__31088,G__31089,G__31090,G__31091,G__31092));
});
var G__31437__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31093 = a;
var G__31094 = b;
var G__31095 = c;
var G__31096 = d;
var G__31097 = e;
var G__31098 = f;
var G__31099 = g;
var G__31100 = h;
var G__31101 = i;
var G__31102 = j;
var G__31103 = k;
var G__31104 = l;
var G__31105 = m;
var G__31106 = n;
var G__31107 = o;
var G__31108 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__31093,G__31094,G__31095,G__31096,G__31097,G__31098,G__31099,G__31100,G__31101,G__31102,G__31103,G__31104,G__31105,G__31106,G__31107,G__31108) : self__.afn.call(null,G__31093,G__31094,G__31095,G__31096,G__31097,G__31098,G__31099,G__31100,G__31101,G__31102,G__31103,G__31104,G__31105,G__31106,G__31107,G__31108));
});
var G__31437__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31109 = a;
var G__31110 = b;
var G__31111 = c;
var G__31112 = d;
var G__31113 = e;
var G__31114 = f;
var G__31115 = g;
var G__31116 = h;
var G__31117 = i;
var G__31118 = j;
var G__31119 = k;
var G__31120 = l;
var G__31121 = m;
var G__31122 = n;
var G__31123 = o;
var G__31124 = p;
var G__31125 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__31109,G__31110,G__31111,G__31112,G__31113,G__31114,G__31115,G__31116,G__31117,G__31118,G__31119,G__31120,G__31121,G__31122,G__31123,G__31124,G__31125) : self__.afn.call(null,G__31109,G__31110,G__31111,G__31112,G__31113,G__31114,G__31115,G__31116,G__31117,G__31118,G__31119,G__31120,G__31121,G__31122,G__31123,G__31124,G__31125));
});
var G__31437__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31126 = a;
var G__31127 = b;
var G__31128 = c;
var G__31129 = d;
var G__31130 = e;
var G__31131 = f;
var G__31132 = g;
var G__31133 = h;
var G__31134 = i;
var G__31135 = j;
var G__31136 = k;
var G__31137 = l;
var G__31138 = m;
var G__31139 = n;
var G__31140 = o;
var G__31141 = p;
var G__31142 = q;
var G__31143 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__31126,G__31127,G__31128,G__31129,G__31130,G__31131,G__31132,G__31133,G__31134,G__31135,G__31136,G__31137,G__31138,G__31139,G__31140,G__31141,G__31142,G__31143) : self__.afn.call(null,G__31126,G__31127,G__31128,G__31129,G__31130,G__31131,G__31132,G__31133,G__31134,G__31135,G__31136,G__31137,G__31138,G__31139,G__31140,G__31141,G__31142,G__31143));
});
var G__31437__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31144 = a;
var G__31145 = b;
var G__31146 = c;
var G__31147 = d;
var G__31148 = e;
var G__31149 = f;
var G__31150 = g;
var G__31151 = h;
var G__31152 = i;
var G__31153 = j;
var G__31154 = k;
var G__31155 = l;
var G__31156 = m;
var G__31157 = n;
var G__31158 = o;
var G__31159 = p;
var G__31160 = q;
var G__31161 = r;
var G__31162 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__31144,G__31145,G__31146,G__31147,G__31148,G__31149,G__31150,G__31151,G__31152,G__31153,G__31154,G__31155,G__31156,G__31157,G__31158,G__31159,G__31160,G__31161,G__31162) : self__.afn.call(null,G__31144,G__31145,G__31146,G__31147,G__31148,G__31149,G__31150,G__31151,G__31152,G__31153,G__31154,G__31155,G__31156,G__31157,G__31158,G__31159,G__31160,G__31161,G__31162));
});
var G__31437__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31163 = a;
var G__31164 = b;
var G__31165 = c;
var G__31166 = d;
var G__31167 = e;
var G__31168 = f;
var G__31169 = g;
var G__31170 = h;
var G__31171 = i;
var G__31172 = j;
var G__31173 = k;
var G__31174 = l;
var G__31175 = m;
var G__31176 = n;
var G__31177 = o;
var G__31178 = p;
var G__31179 = q;
var G__31180 = r;
var G__31181 = s;
var G__31182 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__31163,G__31164,G__31165,G__31166,G__31167,G__31168,G__31169,G__31170,G__31171,G__31172,G__31173,G__31174,G__31175,G__31176,G__31177,G__31178,G__31179,G__31180,G__31181,G__31182) : self__.afn.call(null,G__31163,G__31164,G__31165,G__31166,G__31167,G__31168,G__31169,G__31170,G__31171,G__31172,G__31173,G__31174,G__31175,G__31176,G__31177,G__31178,G__31179,G__31180,G__31181,G__31182));
});
var G__31437__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31183 = self__.afn;
var G__31184 = a;
var G__31185 = b;
var G__31186 = c;
var G__31187 = d;
var G__31188 = e;
var G__31189 = f;
var G__31190 = g;
var G__31191 = h;
var G__31192 = i;
var G__31193 = j;
var G__31194 = k;
var G__31195 = l;
var G__31196 = m;
var G__31197 = n;
var G__31198 = o;
var G__31199 = p;
var G__31200 = q;
var G__31201 = r;
var G__31202 = s;
var G__31203 = t;
var G__31204 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__31183,G__31184,G__31185,G__31186,G__31187,G__31188,G__31189,G__31190,G__31191,G__31192,G__31193,G__31194,G__31195,G__31196,G__31197,G__31198,G__31199,G__31200,G__31201,G__31202,G__31203,G__31204) : cljs.core.apply.call(null,G__31183,G__31184,G__31185,G__31186,G__31187,G__31188,G__31189,G__31190,G__31191,G__31192,G__31193,G__31194,G__31195,G__31196,G__31197,G__31198,G__31199,G__31200,G__31201,G__31202,G__31203,G__31204));
});
G__31437 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__31437__1.call(this,self__);
case 2:
return G__31437__2.call(this,self__,a);
case 3:
return G__31437__3.call(this,self__,a,b);
case 4:
return G__31437__4.call(this,self__,a,b,c);
case 5:
return G__31437__5.call(this,self__,a,b,c,d);
case 6:
return G__31437__6.call(this,self__,a,b,c,d,e);
case 7:
return G__31437__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__31437__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__31437__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__31437__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__31437__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__31437__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__31437__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__31437__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__31437__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__31437__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__31437__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__31437__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__31437__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__31437__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__31437__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__31437__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31437.cljs$core$IFn$_invoke$arity$1 = G__31437__1;
G__31437.cljs$core$IFn$_invoke$arity$2 = G__31437__2;
G__31437.cljs$core$IFn$_invoke$arity$3 = G__31437__3;
G__31437.cljs$core$IFn$_invoke$arity$4 = G__31437__4;
G__31437.cljs$core$IFn$_invoke$arity$5 = G__31437__5;
G__31437.cljs$core$IFn$_invoke$arity$6 = G__31437__6;
G__31437.cljs$core$IFn$_invoke$arity$7 = G__31437__7;
G__31437.cljs$core$IFn$_invoke$arity$8 = G__31437__8;
G__31437.cljs$core$IFn$_invoke$arity$9 = G__31437__9;
G__31437.cljs$core$IFn$_invoke$arity$10 = G__31437__10;
G__31437.cljs$core$IFn$_invoke$arity$11 = G__31437__11;
G__31437.cljs$core$IFn$_invoke$arity$12 = G__31437__12;
G__31437.cljs$core$IFn$_invoke$arity$13 = G__31437__13;
G__31437.cljs$core$IFn$_invoke$arity$14 = G__31437__14;
G__31437.cljs$core$IFn$_invoke$arity$15 = G__31437__15;
G__31437.cljs$core$IFn$_invoke$arity$16 = G__31437__16;
G__31437.cljs$core$IFn$_invoke$arity$17 = G__31437__17;
G__31437.cljs$core$IFn$_invoke$arity$18 = G__31437__18;
G__31437.cljs$core$IFn$_invoke$arity$19 = G__31437__19;
G__31437.cljs$core$IFn$_invoke$arity$20 = G__31437__20;
G__31437.cljs$core$IFn$_invoke$arity$21 = G__31437__21;
G__31437.cljs$core$IFn$_invoke$arity$22 = G__31437__22;
return G__31437;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args30972){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args30972)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__31205 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__31205) : self__.afn.call(null,G__31205));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__31206 = a;
var G__31207 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__31206,G__31207) : self__.afn.call(null,G__31206,G__31207));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__31208 = a;
var G__31209 = b;
var G__31210 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__31208,G__31209,G__31210) : self__.afn.call(null,G__31208,G__31209,G__31210));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__31211 = a;
var G__31212 = b;
var G__31213 = c;
var G__31214 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__31211,G__31212,G__31213,G__31214) : self__.afn.call(null,G__31211,G__31212,G__31213,G__31214));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__31215 = a;
var G__31216 = b;
var G__31217 = c;
var G__31218 = d;
var G__31219 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__31215,G__31216,G__31217,G__31218,G__31219) : self__.afn.call(null,G__31215,G__31216,G__31217,G__31218,G__31219));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__31220 = a;
var G__31221 = b;
var G__31222 = c;
var G__31223 = d;
var G__31224 = e;
var G__31225 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__31220,G__31221,G__31222,G__31223,G__31224,G__31225) : self__.afn.call(null,G__31220,G__31221,G__31222,G__31223,G__31224,G__31225));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__31226 = a;
var G__31227 = b;
var G__31228 = c;
var G__31229 = d;
var G__31230 = e;
var G__31231 = f;
var G__31232 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__31226,G__31227,G__31228,G__31229,G__31230,G__31231,G__31232) : self__.afn.call(null,G__31226,G__31227,G__31228,G__31229,G__31230,G__31231,G__31232));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__31233 = a;
var G__31234 = b;
var G__31235 = c;
var G__31236 = d;
var G__31237 = e;
var G__31238 = f;
var G__31239 = g;
var G__31240 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__31233,G__31234,G__31235,G__31236,G__31237,G__31238,G__31239,G__31240) : self__.afn.call(null,G__31233,G__31234,G__31235,G__31236,G__31237,G__31238,G__31239,G__31240));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__31241 = a;
var G__31242 = b;
var G__31243 = c;
var G__31244 = d;
var G__31245 = e;
var G__31246 = f;
var G__31247 = g;
var G__31248 = h;
var G__31249 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__31241,G__31242,G__31243,G__31244,G__31245,G__31246,G__31247,G__31248,G__31249) : self__.afn.call(null,G__31241,G__31242,G__31243,G__31244,G__31245,G__31246,G__31247,G__31248,G__31249));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__31250 = a;
var G__31251 = b;
var G__31252 = c;
var G__31253 = d;
var G__31254 = e;
var G__31255 = f;
var G__31256 = g;
var G__31257 = h;
var G__31258 = i;
var G__31259 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__31250,G__31251,G__31252,G__31253,G__31254,G__31255,G__31256,G__31257,G__31258,G__31259) : self__.afn.call(null,G__31250,G__31251,G__31252,G__31253,G__31254,G__31255,G__31256,G__31257,G__31258,G__31259));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__31260 = a;
var G__31261 = b;
var G__31262 = c;
var G__31263 = d;
var G__31264 = e;
var G__31265 = f;
var G__31266 = g;
var G__31267 = h;
var G__31268 = i;
var G__31269 = j;
var G__31270 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__31260,G__31261,G__31262,G__31263,G__31264,G__31265,G__31266,G__31267,G__31268,G__31269,G__31270) : self__.afn.call(null,G__31260,G__31261,G__31262,G__31263,G__31264,G__31265,G__31266,G__31267,G__31268,G__31269,G__31270));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__31271 = a;
var G__31272 = b;
var G__31273 = c;
var G__31274 = d;
var G__31275 = e;
var G__31276 = f;
var G__31277 = g;
var G__31278 = h;
var G__31279 = i;
var G__31280 = j;
var G__31281 = k;
var G__31282 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__31271,G__31272,G__31273,G__31274,G__31275,G__31276,G__31277,G__31278,G__31279,G__31280,G__31281,G__31282) : self__.afn.call(null,G__31271,G__31272,G__31273,G__31274,G__31275,G__31276,G__31277,G__31278,G__31279,G__31280,G__31281,G__31282));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__31283 = a;
var G__31284 = b;
var G__31285 = c;
var G__31286 = d;
var G__31287 = e;
var G__31288 = f;
var G__31289 = g;
var G__31290 = h;
var G__31291 = i;
var G__31292 = j;
var G__31293 = k;
var G__31294 = l;
var G__31295 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__31283,G__31284,G__31285,G__31286,G__31287,G__31288,G__31289,G__31290,G__31291,G__31292,G__31293,G__31294,G__31295) : self__.afn.call(null,G__31283,G__31284,G__31285,G__31286,G__31287,G__31288,G__31289,G__31290,G__31291,G__31292,G__31293,G__31294,G__31295));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__31296 = a;
var G__31297 = b;
var G__31298 = c;
var G__31299 = d;
var G__31300 = e;
var G__31301 = f;
var G__31302 = g;
var G__31303 = h;
var G__31304 = i;
var G__31305 = j;
var G__31306 = k;
var G__31307 = l;
var G__31308 = m;
var G__31309 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__31296,G__31297,G__31298,G__31299,G__31300,G__31301,G__31302,G__31303,G__31304,G__31305,G__31306,G__31307,G__31308,G__31309) : self__.afn.call(null,G__31296,G__31297,G__31298,G__31299,G__31300,G__31301,G__31302,G__31303,G__31304,G__31305,G__31306,G__31307,G__31308,G__31309));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__31310 = a;
var G__31311 = b;
var G__31312 = c;
var G__31313 = d;
var G__31314 = e;
var G__31315 = f;
var G__31316 = g;
var G__31317 = h;
var G__31318 = i;
var G__31319 = j;
var G__31320 = k;
var G__31321 = l;
var G__31322 = m;
var G__31323 = n;
var G__31324 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__31310,G__31311,G__31312,G__31313,G__31314,G__31315,G__31316,G__31317,G__31318,G__31319,G__31320,G__31321,G__31322,G__31323,G__31324) : self__.afn.call(null,G__31310,G__31311,G__31312,G__31313,G__31314,G__31315,G__31316,G__31317,G__31318,G__31319,G__31320,G__31321,G__31322,G__31323,G__31324));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__31325 = a;
var G__31326 = b;
var G__31327 = c;
var G__31328 = d;
var G__31329 = e;
var G__31330 = f;
var G__31331 = g;
var G__31332 = h;
var G__31333 = i;
var G__31334 = j;
var G__31335 = k;
var G__31336 = l;
var G__31337 = m;
var G__31338 = n;
var G__31339 = o;
var G__31340 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__31325,G__31326,G__31327,G__31328,G__31329,G__31330,G__31331,G__31332,G__31333,G__31334,G__31335,G__31336,G__31337,G__31338,G__31339,G__31340) : self__.afn.call(null,G__31325,G__31326,G__31327,G__31328,G__31329,G__31330,G__31331,G__31332,G__31333,G__31334,G__31335,G__31336,G__31337,G__31338,G__31339,G__31340));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__31341 = a;
var G__31342 = b;
var G__31343 = c;
var G__31344 = d;
var G__31345 = e;
var G__31346 = f;
var G__31347 = g;
var G__31348 = h;
var G__31349 = i;
var G__31350 = j;
var G__31351 = k;
var G__31352 = l;
var G__31353 = m;
var G__31354 = n;
var G__31355 = o;
var G__31356 = p;
var G__31357 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__31341,G__31342,G__31343,G__31344,G__31345,G__31346,G__31347,G__31348,G__31349,G__31350,G__31351,G__31352,G__31353,G__31354,G__31355,G__31356,G__31357) : self__.afn.call(null,G__31341,G__31342,G__31343,G__31344,G__31345,G__31346,G__31347,G__31348,G__31349,G__31350,G__31351,G__31352,G__31353,G__31354,G__31355,G__31356,G__31357));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__31358 = a;
var G__31359 = b;
var G__31360 = c;
var G__31361 = d;
var G__31362 = e;
var G__31363 = f;
var G__31364 = g;
var G__31365 = h;
var G__31366 = i;
var G__31367 = j;
var G__31368 = k;
var G__31369 = l;
var G__31370 = m;
var G__31371 = n;
var G__31372 = o;
var G__31373 = p;
var G__31374 = q;
var G__31375 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__31358,G__31359,G__31360,G__31361,G__31362,G__31363,G__31364,G__31365,G__31366,G__31367,G__31368,G__31369,G__31370,G__31371,G__31372,G__31373,G__31374,G__31375) : self__.afn.call(null,G__31358,G__31359,G__31360,G__31361,G__31362,G__31363,G__31364,G__31365,G__31366,G__31367,G__31368,G__31369,G__31370,G__31371,G__31372,G__31373,G__31374,G__31375));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__31376 = a;
var G__31377 = b;
var G__31378 = c;
var G__31379 = d;
var G__31380 = e;
var G__31381 = f;
var G__31382 = g;
var G__31383 = h;
var G__31384 = i;
var G__31385 = j;
var G__31386 = k;
var G__31387 = l;
var G__31388 = m;
var G__31389 = n;
var G__31390 = o;
var G__31391 = p;
var G__31392 = q;
var G__31393 = r;
var G__31394 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__31376,G__31377,G__31378,G__31379,G__31380,G__31381,G__31382,G__31383,G__31384,G__31385,G__31386,G__31387,G__31388,G__31389,G__31390,G__31391,G__31392,G__31393,G__31394) : self__.afn.call(null,G__31376,G__31377,G__31378,G__31379,G__31380,G__31381,G__31382,G__31383,G__31384,G__31385,G__31386,G__31387,G__31388,G__31389,G__31390,G__31391,G__31392,G__31393,G__31394));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__31395 = a;
var G__31396 = b;
var G__31397 = c;
var G__31398 = d;
var G__31399 = e;
var G__31400 = f;
var G__31401 = g;
var G__31402 = h;
var G__31403 = i;
var G__31404 = j;
var G__31405 = k;
var G__31406 = l;
var G__31407 = m;
var G__31408 = n;
var G__31409 = o;
var G__31410 = p;
var G__31411 = q;
var G__31412 = r;
var G__31413 = s;
var G__31414 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__31395,G__31396,G__31397,G__31398,G__31399,G__31400,G__31401,G__31402,G__31403,G__31404,G__31405,G__31406,G__31407,G__31408,G__31409,G__31410,G__31411,G__31412,G__31413,G__31414) : self__.afn.call(null,G__31395,G__31396,G__31397,G__31398,G__31399,G__31400,G__31401,G__31402,G__31403,G__31404,G__31405,G__31406,G__31407,G__31408,G__31409,G__31410,G__31411,G__31412,G__31413,G__31414));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__31415 = self__.afn;
var G__31416 = a;
var G__31417 = b;
var G__31418 = c;
var G__31419 = d;
var G__31420 = e;
var G__31421 = f;
var G__31422 = g;
var G__31423 = h;
var G__31424 = i;
var G__31425 = j;
var G__31426 = k;
var G__31427 = l;
var G__31428 = m;
var G__31429 = n;
var G__31430 = o;
var G__31431 = p;
var G__31432 = q;
var G__31433 = r;
var G__31434 = s;
var G__31435 = t;
var G__31436 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__31415,G__31416,G__31417,G__31418,G__31419,G__31420,G__31421,G__31422,G__31423,G__31424,G__31425,G__31426,G__31427,G__31428,G__31429,G__31430,G__31431,G__31432,G__31433,G__31434,G__31435,G__31436) : cljs.core.apply.call(null,G__31415,G__31416,G__31417,G__31418,G__31419,G__31420,G__31421,G__31422,G__31423,G__31424,G__31425,G__31426,G__31427,G__31428,G__31429,G__31430,G__31431,G__31432,G__31433,G__31434,G__31435,G__31436));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__31441 = o;
if(G__31441){
var bit__4457__auto__ = (G__31441.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4457__auto__) || (G__31441.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__31441.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__31441);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__31441);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3764__auto__ = !((o == null));
if(and__3764__auto__){
var G__31445 = o;
if(G__31445){
var bit__4457__auto__ = (G__31445.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4457__auto__) || (G__31445.cljs$core$IMeta$)){
return true;
} else {
if((!G__31445.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__31445);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__31445);
}
} else {
return and__3764__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__31448__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__31449 = ret;
var G__31450 = cljs.core.first(ks);
var G__31451 = cljs.core.next(ks);
coll = G__31449;
k = G__31450;
ks = G__31451;
continue;
} else {
return ret;
}
}
break;
}
};
var G__31448 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__31452__i = 0, G__31452__a = new Array(arguments.length -  2);
while (G__31452__i < G__31452__a.length) {G__31452__a[G__31452__i] = arguments[G__31452__i + 2]; ++G__31452__i;}
  ks = new cljs.core.IndexedSeq(G__31452__a,0);
} 
return G__31448__delegate.call(this,coll,k,ks);};
G__31448.cljs$lang$maxFixedArity = 2;
G__31448.cljs$lang$applyTo = (function (arglist__31453){
var coll = cljs.core.first(arglist__31453);
arglist__31453 = cljs.core.next(arglist__31453);
var k = cljs.core.first(arglist__31453);
var ks = cljs.core.rest(arglist__31453);
return G__31448__delegate(coll,k,ks);
});
G__31448.cljs$core$IFn$_invoke$arity$variadic = G__31448__delegate;
return G__31448;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__31454 = null;
if (arguments.length > 2) {
var G__31455__i = 0, G__31455__a = new Array(arguments.length -  2);
while (G__31455__i < G__31455__a.length) {G__31455__a[G__31455__i] = arguments[G__31455__i + 2]; ++G__31455__i;}
G__31454 = new cljs.core.IndexedSeq(G__31455__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__31454);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__31457 = x;
if(G__31457){
var bit__4457__auto__ = (G__31457.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4457__auto__) || (G__31457.cljs$core$ICollection$)){
return true;
} else {
if((!G__31457.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__31457);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__31457);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__31459 = x;
if(G__31459){
var bit__4457__auto__ = (G__31459.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4457__auto__) || (G__31459.cljs$core$ISet$)){
return true;
} else {
if((!G__31459.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__31459);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__31459);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__31461 = x;
if(G__31461){
var bit__4457__auto__ = (G__31461.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4457__auto__) || (G__31461.cljs$core$IAssociative$)){
return true;
} else {
if((!G__31461.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__31461);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__31461);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__31463 = x;
if(G__31463){
var bit__4457__auto__ = (G__31463.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4457__auto__) || (G__31463.cljs$core$ISequential$)){
return true;
} else {
if((!G__31463.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__31463);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__31463);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__31465 = x;
if(G__31465){
var bit__4457__auto__ = (G__31465.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4457__auto__) || (G__31465.cljs$core$ISorted$)){
return true;
} else {
if((!G__31465.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__31465);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__31465);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__31467 = x;
if(G__31467){
var bit__4457__auto__ = (G__31467.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4457__auto__) || (G__31467.cljs$core$IReduce$)){
return true;
} else {
if((!G__31467.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__31467);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__31467);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__31469 = x;
if(G__31469){
var bit__4457__auto__ = (G__31469.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4457__auto__) || (G__31469.cljs$core$IMap$)){
return true;
} else {
if((!G__31469.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__31469);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__31469);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__31471 = x;
if(G__31471){
var bit__4457__auto__ = (G__31471.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4457__auto__) || (G__31471.cljs$core$IVector$)){
return true;
} else {
if((!G__31471.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__31471);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__31471);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__31473 = x;
if(G__31473){
var bit__4450__auto__ = (G__31473.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4450__auto__) || (G__31473.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj31479 = {};
return obj31479;
});
var js_obj__1 = (function() { 
var G__31482__delegate = function (keyvals){
var G__31480 = goog.object.create;
var G__31481 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__31480,G__31481) : cljs.core.apply.call(null,G__31480,G__31481));
};
var G__31482 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__31483__i = 0, G__31483__a = new Array(arguments.length -  0);
while (G__31483__i < G__31483__a.length) {G__31483__a[G__31483__i] = arguments[G__31483__i + 0]; ++G__31483__i;}
  keyvals = new cljs.core.IndexedSeq(G__31483__a,0);
} 
return G__31482__delegate.call(this,keyvals);};
G__31482.cljs$lang$maxFixedArity = 0;
G__31482.cljs$lang$applyTo = (function (arglist__31484){
var keyvals = cljs.core.seq(arglist__31484);
return G__31482__delegate(keyvals);
});
G__31482.cljs$core$IFn$_invoke$arity$variadic = G__31482__delegate;
return G__31482;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__31485 = null;
if (arguments.length > 0) {
var G__31486__i = 0, G__31486__a = new Array(arguments.length -  0);
while (G__31486__i < G__31486__a.length) {G__31486__a[G__31486__i] = arguments[G__31486__i + 0]; ++G__31486__i;}
G__31485 = new cljs.core.IndexedSeq(G__31486__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__31485);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__31489_31491 = obj;
var G__31490_31492 = ((function (G__31489_31491,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__31489_31491,keys))
;
goog.object.forEach(G__31489_31491,G__31490_31492);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__31493 = (i__$1 + (1));
var G__31494 = (j__$1 + (1));
var G__31495 = (len__$1 - (1));
i__$1 = G__31493;
j__$1 = G__31494;
len__$1 = G__31495;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__31496 = (i__$1 - (1));
var G__31497 = (j__$1 - (1));
var G__31498 = (len__$1 - (1));
i__$1 = G__31496;
j__$1 = G__31497;
len__$1 = G__31498;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj31500 = {};
return obj31500;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__31502 = s;
if(G__31502){
var bit__4457__auto__ = (G__31502.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4457__auto__) || (G__31502.cljs$core$ISeq$)){
return true;
} else {
if((!G__31502.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__31502);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__31502);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__31504 = s;
if(G__31504){
var bit__4457__auto__ = (G__31504.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4457__auto__) || (G__31504.cljs$core$ISeqable$)){
return true;
} else {
if((!G__31504.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__31504);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__31504);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3776__auto__ = cljs.core.fn_QMARK_(f);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var G__31508 = f;
if(G__31508){
var bit__4457__auto__ = (G__31508.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4457__auto__) || (G__31508.cljs$core$IFn$)){
return true;
} else {
if((!G__31508.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__31508);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__31508);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__31521 = n;
return isNaN(G__31521);
})())) && (!((n === Infinity))) && (((function (){var G__31522 = n;
return parseFloat(G__31522);
})() === (function (){var G__31523 = n;
var G__31524 = (10);
return parseInt(G__31523,G__31524);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__31525__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__31526 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__31527 = etc;
s = G__31526;
xs = G__31527;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__31525 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31528__i = 0, G__31528__a = new Array(arguments.length -  2);
while (G__31528__i < G__31528__a.length) {G__31528__a[G__31528__i] = arguments[G__31528__i + 2]; ++G__31528__i;}
  more = new cljs.core.IndexedSeq(G__31528__a,0);
} 
return G__31525__delegate.call(this,x,y,more);};
G__31525.cljs$lang$maxFixedArity = 2;
G__31525.cljs$lang$applyTo = (function (arglist__31529){
var x = cljs.core.first(arglist__31529);
arglist__31529 = cljs.core.next(arglist__31529);
var y = cljs.core.first(arglist__31529);
var more = cljs.core.rest(arglist__31529);
return G__31525__delegate(x,y,more);
});
G__31525.cljs$core$IFn$_invoke$arity$variadic = G__31525__delegate;
return G__31525;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__31530 = null;
if (arguments.length > 2) {
var G__31531__i = 0, G__31531__a = new Array(arguments.length -  2);
while (G__31531__i < G__31531__a.length) {G__31531__a[G__31531__i] = arguments[G__31531__i + 2]; ++G__31531__i;}
G__31530 = new cljs.core.IndexedSeq(G__31531__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31530);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__31535 = x;
if(G__31535){
var bit__4450__auto__ = (G__31535.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4450__auto__) || (G__31535.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__31536 = x;
var G__31537 = y;
return goog.array.defaultCompare(G__31536,G__31537);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__31542 = xs;
var G__31543 = ys;
var G__31544 = len;
var G__31545 = (n + (1));
xs = G__31542;
ys = G__31543;
len = G__31544;
n = G__31545;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__31550 = x;
var G__31551 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31550,G__31551) : f.call(null,G__31550,G__31551));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__31552 = y;
var G__31553 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31552,G__31553) : f.call(null,G__31552,G__31553));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__31559 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__31559) : cljs.core.to_array.call(null,G__31559));
})();
var G__31560_31562 = a;
var G__31561_31563 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__31560_31562,G__31561_31563);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__31569 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__31569) : keyfn.call(null,G__31569));
})(),(function (){var G__31570 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__31570) : keyfn.call(null,G__31570));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__31576 = f;
var G__31577 = cljs.core.first(s);
var G__31578 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__31576,G__31577,G__31578) : cljs.core.reduce.call(null,G__31576,G__31577,G__31578));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__31579 = val__$1;
var G__31580 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31579,G__31580) : f.call(null,G__31579,G__31580));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__31581 = nval;
var G__31582 = cljs.core.next(coll__$1);
val__$1 = G__31581;
coll__$1 = G__31582;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__31586 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__31586) : cljs.core.to_array.call(null,G__31586));
})();
var G__31587_31589 = a;
goog.array.shuffle(G__31587_31589);

var G__31588 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__31588) : cljs.core.vec.call(null,G__31588));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__31592 = coll;
if(G__31592){
var bit__4450__auto__ = (G__31592.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4450__auto__) || (G__31592.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__31593 = coll;
if(G__31593){
var bit__4450__auto__ = (G__31593.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4450__auto__) || (G__31593.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__31602 = null;
var G__31602__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__31602__1 = (function (x){
var G__31599 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__31599) : cf.call(null,G__31599));
});
var G__31602__2 = (function (x,y){
var G__31600 = x;
var G__31601 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31600,G__31601) : f.call(null,G__31600,G__31601));
});
G__31602 = function(x,y){
switch(arguments.length){
case 0:
return G__31602__0.call(this);
case 1:
return G__31602__1.call(this,x);
case 2:
return G__31602__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31602.cljs$core$IFn$_invoke$arity$0 = G__31602__0;
G__31602.cljs$core$IFn$_invoke$arity$1 = G__31602__1;
G__31602.cljs$core$IFn$_invoke$arity$2 = G__31602__2;
return G__31602;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__31609 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__31609) : xform.call(null,G__31609));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__31610 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__31610) : f__$1.call(null,G__31610));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__31611__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__31611 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31612__i = 0, G__31612__a = new Array(arguments.length -  2);
while (G__31612__i < G__31612__a.length) {G__31612__a[G__31612__i] = arguments[G__31612__i + 2]; ++G__31612__i;}
  more = new cljs.core.IndexedSeq(G__31612__a,0);
} 
return G__31611__delegate.call(this,x,y,more);};
G__31611.cljs$lang$maxFixedArity = 2;
G__31611.cljs$lang$applyTo = (function (arglist__31613){
var x = cljs.core.first(arglist__31613);
arglist__31613 = cljs.core.next(arglist__31613);
var y = cljs.core.first(arglist__31613);
var more = cljs.core.rest(arglist__31613);
return G__31611__delegate(x,y,more);
});
G__31611.cljs$core$IFn$_invoke$arity$variadic = G__31611__delegate;
return G__31611;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__31614 = null;
if (arguments.length > 2) {
var G__31615__i = 0, G__31615__a = new Array(arguments.length -  2);
while (G__31615__i < G__31615__a.length) {G__31615__a[G__31615__i] = arguments[G__31615__i + 2]; ++G__31615__i;}
G__31614 = new cljs.core.IndexedSeq(G__31615__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31614);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__31616__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__31616 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31617__i = 0, G__31617__a = new Array(arguments.length -  2);
while (G__31617__i < G__31617__a.length) {G__31617__a[G__31617__i] = arguments[G__31617__i + 2]; ++G__31617__i;}
  more = new cljs.core.IndexedSeq(G__31617__a,0);
} 
return G__31616__delegate.call(this,x,y,more);};
G__31616.cljs$lang$maxFixedArity = 2;
G__31616.cljs$lang$applyTo = (function (arglist__31618){
var x = cljs.core.first(arglist__31618);
arglist__31618 = cljs.core.next(arglist__31618);
var y = cljs.core.first(arglist__31618);
var more = cljs.core.rest(arglist__31618);
return G__31616__delegate(x,y,more);
});
G__31616.cljs$core$IFn$_invoke$arity$variadic = G__31616__delegate;
return G__31616;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__31619 = null;
if (arguments.length > 2) {
var G__31620__i = 0, G__31620__a = new Array(arguments.length -  2);
while (G__31620__i < G__31620__a.length) {G__31620__a[G__31620__i] = arguments[G__31620__i + 2]; ++G__31620__i;}
G__31619 = new cljs.core.IndexedSeq(G__31620__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31619);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__31621__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__31621 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31622__i = 0, G__31622__a = new Array(arguments.length -  2);
while (G__31622__i < G__31622__a.length) {G__31622__a[G__31622__i] = arguments[G__31622__i + 2]; ++G__31622__i;}
  more = new cljs.core.IndexedSeq(G__31622__a,0);
} 
return G__31621__delegate.call(this,x,y,more);};
G__31621.cljs$lang$maxFixedArity = 2;
G__31621.cljs$lang$applyTo = (function (arglist__31623){
var x = cljs.core.first(arglist__31623);
arglist__31623 = cljs.core.next(arglist__31623);
var y = cljs.core.first(arglist__31623);
var more = cljs.core.rest(arglist__31623);
return G__31621__delegate(x,y,more);
});
G__31621.cljs$core$IFn$_invoke$arity$variadic = G__31621__delegate;
return G__31621;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__31624 = null;
if (arguments.length > 2) {
var G__31625__i = 0, G__31625__a = new Array(arguments.length -  2);
while (G__31625__i < G__31625__a.length) {G__31625__a[G__31625__i] = arguments[G__31625__i + 2]; ++G__31625__i;}
G__31624 = new cljs.core.IndexedSeq(G__31625__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31624);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__31630__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__31630 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31631__i = 0, G__31631__a = new Array(arguments.length -  2);
while (G__31631__i < G__31631__a.length) {G__31631__a[G__31631__i] = arguments[G__31631__i + 2]; ++G__31631__i;}
  more = new cljs.core.IndexedSeq(G__31631__a,0);
} 
return G__31630__delegate.call(this,x,y,more);};
G__31630.cljs$lang$maxFixedArity = 2;
G__31630.cljs$lang$applyTo = (function (arglist__31632){
var x = cljs.core.first(arglist__31632);
arglist__31632 = cljs.core.next(arglist__31632);
var y = cljs.core.first(arglist__31632);
var more = cljs.core.rest(arglist__31632);
return G__31630__delegate(x,y,more);
});
G__31630.cljs$core$IFn$_invoke$arity$variadic = G__31630__delegate;
return G__31630;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__31633 = null;
if (arguments.length > 2) {
var G__31634__i = 0, G__31634__a = new Array(arguments.length -  2);
while (G__31634__i < G__31634__a.length) {G__31634__a[G__31634__i] = arguments[G__31634__i + 2]; ++G__31634__i;}
G__31633 = new cljs.core.IndexedSeq(G__31634__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31633);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__31635__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__31636 = y;
var G__31637 = cljs.core.first(more);
var G__31638 = cljs.core.next(more);
x = G__31636;
y = G__31637;
more = G__31638;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__31635 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31639__i = 0, G__31639__a = new Array(arguments.length -  2);
while (G__31639__i < G__31639__a.length) {G__31639__a[G__31639__i] = arguments[G__31639__i + 2]; ++G__31639__i;}
  more = new cljs.core.IndexedSeq(G__31639__a,0);
} 
return G__31635__delegate.call(this,x,y,more);};
G__31635.cljs$lang$maxFixedArity = 2;
G__31635.cljs$lang$applyTo = (function (arglist__31640){
var x = cljs.core.first(arglist__31640);
arglist__31640 = cljs.core.next(arglist__31640);
var y = cljs.core.first(arglist__31640);
var more = cljs.core.rest(arglist__31640);
return G__31635__delegate(x,y,more);
});
G__31635.cljs$core$IFn$_invoke$arity$variadic = G__31635__delegate;
return G__31635;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__31641 = null;
if (arguments.length > 2) {
var G__31642__i = 0, G__31642__a = new Array(arguments.length -  2);
while (G__31642__i < G__31642__a.length) {G__31642__a[G__31642__i] = arguments[G__31642__i + 2]; ++G__31642__i;}
G__31641 = new cljs.core.IndexedSeq(G__31642__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31641);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__31643__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__31644 = y;
var G__31645 = cljs.core.first(more);
var G__31646 = cljs.core.next(more);
x = G__31644;
y = G__31645;
more = G__31646;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__31643 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31647__i = 0, G__31647__a = new Array(arguments.length -  2);
while (G__31647__i < G__31647__a.length) {G__31647__a[G__31647__i] = arguments[G__31647__i + 2]; ++G__31647__i;}
  more = new cljs.core.IndexedSeq(G__31647__a,0);
} 
return G__31643__delegate.call(this,x,y,more);};
G__31643.cljs$lang$maxFixedArity = 2;
G__31643.cljs$lang$applyTo = (function (arglist__31648){
var x = cljs.core.first(arglist__31648);
arglist__31648 = cljs.core.next(arglist__31648);
var y = cljs.core.first(arglist__31648);
var more = cljs.core.rest(arglist__31648);
return G__31643__delegate(x,y,more);
});
G__31643.cljs$core$IFn$_invoke$arity$variadic = G__31643__delegate;
return G__31643;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__31649 = null;
if (arguments.length > 2) {
var G__31650__i = 0, G__31650__a = new Array(arguments.length -  2);
while (G__31650__i < G__31650__a.length) {G__31650__a[G__31650__i] = arguments[G__31650__i + 2]; ++G__31650__i;}
G__31649 = new cljs.core.IndexedSeq(G__31650__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31649);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__31651__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__31652 = y;
var G__31653 = cljs.core.first(more);
var G__31654 = cljs.core.next(more);
x = G__31652;
y = G__31653;
more = G__31654;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__31651 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31655__i = 0, G__31655__a = new Array(arguments.length -  2);
while (G__31655__i < G__31655__a.length) {G__31655__a[G__31655__i] = arguments[G__31655__i + 2]; ++G__31655__i;}
  more = new cljs.core.IndexedSeq(G__31655__a,0);
} 
return G__31651__delegate.call(this,x,y,more);};
G__31651.cljs$lang$maxFixedArity = 2;
G__31651.cljs$lang$applyTo = (function (arglist__31656){
var x = cljs.core.first(arglist__31656);
arglist__31656 = cljs.core.next(arglist__31656);
var y = cljs.core.first(arglist__31656);
var more = cljs.core.rest(arglist__31656);
return G__31651__delegate(x,y,more);
});
G__31651.cljs$core$IFn$_invoke$arity$variadic = G__31651__delegate;
return G__31651;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__31657 = null;
if (arguments.length > 2) {
var G__31658__i = 0, G__31658__a = new Array(arguments.length -  2);
while (G__31658__i < G__31658__a.length) {G__31658__a[G__31658__i] = arguments[G__31658__i + 2]; ++G__31658__i;}
G__31657 = new cljs.core.IndexedSeq(G__31658__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31657);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__31659__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__31660 = y;
var G__31661 = cljs.core.first(more);
var G__31662 = cljs.core.next(more);
x = G__31660;
y = G__31661;
more = G__31662;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__31659 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31663__i = 0, G__31663__a = new Array(arguments.length -  2);
while (G__31663__i < G__31663__a.length) {G__31663__a[G__31663__i] = arguments[G__31663__i + 2]; ++G__31663__i;}
  more = new cljs.core.IndexedSeq(G__31663__a,0);
} 
return G__31659__delegate.call(this,x,y,more);};
G__31659.cljs$lang$maxFixedArity = 2;
G__31659.cljs$lang$applyTo = (function (arglist__31664){
var x = cljs.core.first(arglist__31664);
arglist__31664 = cljs.core.next(arglist__31664);
var y = cljs.core.first(arglist__31664);
var more = cljs.core.rest(arglist__31664);
return G__31659__delegate(x,y,more);
});
G__31659.cljs$core$IFn$_invoke$arity$variadic = G__31659__delegate;
return G__31659;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__31665 = null;
if (arguments.length > 2) {
var G__31666__i = 0, G__31666__a = new Array(arguments.length -  2);
while (G__31666__i < G__31666__a.length) {G__31666__a[G__31666__i] = arguments[G__31666__i + 2]; ++G__31666__i;}
G__31665 = new cljs.core.IndexedSeq(G__31666__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31665);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4093__auto__ = x;
var y__4094__auto__ = y;
return ((x__4093__auto__ > y__4094__auto__) ? x__4093__auto__ : y__4094__auto__);
});
var max__3 = (function() { 
var G__31667__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4093__auto__ = x;
var y__4094__auto__ = y;
return ((x__4093__auto__ > y__4094__auto__) ? x__4093__auto__ : y__4094__auto__);
})(),more);
};
var G__31667 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31668__i = 0, G__31668__a = new Array(arguments.length -  2);
while (G__31668__i < G__31668__a.length) {G__31668__a[G__31668__i] = arguments[G__31668__i + 2]; ++G__31668__i;}
  more = new cljs.core.IndexedSeq(G__31668__a,0);
} 
return G__31667__delegate.call(this,x,y,more);};
G__31667.cljs$lang$maxFixedArity = 2;
G__31667.cljs$lang$applyTo = (function (arglist__31669){
var x = cljs.core.first(arglist__31669);
arglist__31669 = cljs.core.next(arglist__31669);
var y = cljs.core.first(arglist__31669);
var more = cljs.core.rest(arglist__31669);
return G__31667__delegate(x,y,more);
});
G__31667.cljs$core$IFn$_invoke$arity$variadic = G__31667__delegate;
return G__31667;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__31670 = null;
if (arguments.length > 2) {
var G__31671__i = 0, G__31671__a = new Array(arguments.length -  2);
while (G__31671__i < G__31671__a.length) {G__31671__a[G__31671__i] = arguments[G__31671__i + 2]; ++G__31671__i;}
G__31670 = new cljs.core.IndexedSeq(G__31671__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31670);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4100__auto__ = x;
var y__4101__auto__ = y;
return ((x__4100__auto__ < y__4101__auto__) ? x__4100__auto__ : y__4101__auto__);
});
var min__3 = (function() { 
var G__31672__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4100__auto__ = x;
var y__4101__auto__ = y;
return ((x__4100__auto__ < y__4101__auto__) ? x__4100__auto__ : y__4101__auto__);
})(),more);
};
var G__31672 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31673__i = 0, G__31673__a = new Array(arguments.length -  2);
while (G__31673__i < G__31673__a.length) {G__31673__a[G__31673__i] = arguments[G__31673__i + 2]; ++G__31673__i;}
  more = new cljs.core.IndexedSeq(G__31673__a,0);
} 
return G__31672__delegate.call(this,x,y,more);};
G__31672.cljs$lang$maxFixedArity = 2;
G__31672.cljs$lang$applyTo = (function (arglist__31674){
var x = cljs.core.first(arglist__31674);
arglist__31674 = cljs.core.next(arglist__31674);
var y = cljs.core.first(arglist__31674);
var more = cljs.core.rest(arglist__31674);
return G__31672__delegate(x,y,more);
});
G__31672.cljs$core$IFn$_invoke$arity$variadic = G__31672__delegate;
return G__31672;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__31675 = null;
if (arguments.length > 2) {
var G__31676__i = 0, G__31676__a = new Array(arguments.length -  2);
while (G__31676__i < G__31676__a.length) {G__31676__a[G__31676__i] = arguments[G__31676__i + 2]; ++G__31676__i;}
G__31675 = new cljs.core.IndexedSeq(G__31676__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31675);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__31677__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__31677 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31678__i = 0, G__31678__a = new Array(arguments.length -  2);
while (G__31678__i < G__31678__a.length) {G__31678__a[G__31678__i] = arguments[G__31678__i + 2]; ++G__31678__i;}
  more = new cljs.core.IndexedSeq(G__31678__a,0);
} 
return G__31677__delegate.call(this,x,y,more);};
G__31677.cljs$lang$maxFixedArity = 2;
G__31677.cljs$lang$applyTo = (function (arglist__31679){
var x = cljs.core.first(arglist__31679);
arglist__31679 = cljs.core.next(arglist__31679);
var y = cljs.core.first(arglist__31679);
var more = cljs.core.rest(arglist__31679);
return G__31677__delegate(x,y,more);
});
G__31677.cljs$core$IFn$_invoke$arity$variadic = G__31677__delegate;
return G__31677;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__31680 = null;
if (arguments.length > 2) {
var G__31681__i = 0, G__31681__a = new Array(arguments.length -  2);
while (G__31681__i < G__31681__a.length) {G__31681__a[G__31681__i] = arguments[G__31681__i + 2]; ++G__31681__i;}
G__31680 = new cljs.core.IndexedSeq(G__31681__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31680);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__31682__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__31682 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31683__i = 0, G__31683__a = new Array(arguments.length -  2);
while (G__31683__i < G__31683__a.length) {G__31683__a[G__31683__i] = arguments[G__31683__i + 2]; ++G__31683__i;}
  more = new cljs.core.IndexedSeq(G__31683__a,0);
} 
return G__31682__delegate.call(this,x,y,more);};
G__31682.cljs$lang$maxFixedArity = 2;
G__31682.cljs$lang$applyTo = (function (arglist__31684){
var x = cljs.core.first(arglist__31684);
arglist__31684 = cljs.core.next(arglist__31684);
var y = cljs.core.first(arglist__31684);
var more = cljs.core.rest(arglist__31684);
return G__31682__delegate(x,y,more);
});
G__31682.cljs$core$IFn$_invoke$arity$variadic = G__31682__delegate;
return G__31682;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__31685 = null;
if (arguments.length > 2) {
var G__31686__i = 0, G__31686__a = new Array(arguments.length -  2);
while (G__31686__i < G__31686__a.length) {G__31686__a[G__31686__i] = arguments[G__31686__i + 2]; ++G__31686__i;}
G__31685 = new cljs.core.IndexedSeq(G__31686__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31685);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__31691__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__31691 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31692__i = 0, G__31692__a = new Array(arguments.length -  2);
while (G__31692__i < G__31692__a.length) {G__31692__a[G__31692__i] = arguments[G__31692__i + 2]; ++G__31692__i;}
  more = new cljs.core.IndexedSeq(G__31692__a,0);
} 
return G__31691__delegate.call(this,x,y,more);};
G__31691.cljs$lang$maxFixedArity = 2;
G__31691.cljs$lang$applyTo = (function (arglist__31693){
var x = cljs.core.first(arglist__31693);
arglist__31693 = cljs.core.next(arglist__31693);
var y = cljs.core.first(arglist__31693);
var more = cljs.core.rest(arglist__31693);
return G__31691__delegate(x,y,more);
});
G__31691.cljs$core$IFn$_invoke$arity$variadic = G__31691__delegate;
return G__31691;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__31694 = null;
if (arguments.length > 2) {
var G__31695__i = 0, G__31695__a = new Array(arguments.length -  2);
while (G__31695__i < G__31695__a.length) {G__31695__a[G__31695__i] = arguments[G__31695__i + 2]; ++G__31695__i;}
G__31694 = new cljs.core.IndexedSeq(G__31695__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31694);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__31696__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__31696 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31697__i = 0, G__31697__a = new Array(arguments.length -  2);
while (G__31697__i < G__31697__a.length) {G__31697__a[G__31697__i] = arguments[G__31697__i + 2]; ++G__31697__i;}
  more = new cljs.core.IndexedSeq(G__31697__a,0);
} 
return G__31696__delegate.call(this,x,y,more);};
G__31696.cljs$lang$maxFixedArity = 2;
G__31696.cljs$lang$applyTo = (function (arglist__31698){
var x = cljs.core.first(arglist__31698);
arglist__31698 = cljs.core.next(arglist__31698);
var y = cljs.core.first(arglist__31698);
var more = cljs.core.rest(arglist__31698);
return G__31696__delegate(x,y,more);
});
G__31696.cljs$core$IFn$_invoke$arity$variadic = G__31696__delegate;
return G__31696;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__31699 = null;
if (arguments.length > 2) {
var G__31700__i = 0, G__31700__a = new Array(arguments.length -  2);
while (G__31700__i < G__31700__a.length) {G__31700__a[G__31700__i] = arguments[G__31700__i + 2]; ++G__31700__i;}
G__31699 = new cljs.core.IndexedSeq(G__31700__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31699);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__31701__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__31701 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31702__i = 0, G__31702__a = new Array(arguments.length -  2);
while (G__31702__i < G__31702__a.length) {G__31702__a[G__31702__i] = arguments[G__31702__i + 2]; ++G__31702__i;}
  more = new cljs.core.IndexedSeq(G__31702__a,0);
} 
return G__31701__delegate.call(this,x,y,more);};
G__31701.cljs$lang$maxFixedArity = 2;
G__31701.cljs$lang$applyTo = (function (arglist__31703){
var x = cljs.core.first(arglist__31703);
arglist__31703 = cljs.core.next(arglist__31703);
var y = cljs.core.first(arglist__31703);
var more = cljs.core.rest(arglist__31703);
return G__31701__delegate(x,y,more);
});
G__31701.cljs$core$IFn$_invoke$arity$variadic = G__31701__delegate;
return G__31701;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__31704 = null;
if (arguments.length > 2) {
var G__31705__i = 0, G__31705__a = new Array(arguments.length -  2);
while (G__31705__i < G__31705__a.length) {G__31705__a[G__31705__i] = arguments[G__31705__i + 2]; ++G__31705__i;}
G__31704 = new cljs.core.IndexedSeq(G__31705__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31704);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__31708 = x;
var G__31709 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__31708,G__31709) : cljs.core.mod.call(null,G__31708,G__31709));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__31710__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__31710 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31711__i = 0, G__31711__a = new Array(arguments.length -  2);
while (G__31711__i < G__31711__a.length) {G__31711__a[G__31711__i] = arguments[G__31711__i + 2]; ++G__31711__i;}
  more = new cljs.core.IndexedSeq(G__31711__a,0);
} 
return G__31710__delegate.call(this,x,y,more);};
G__31710.cljs$lang$maxFixedArity = 2;
G__31710.cljs$lang$applyTo = (function (arglist__31712){
var x = cljs.core.first(arglist__31712);
arglist__31712 = cljs.core.next(arglist__31712);
var y = cljs.core.first(arglist__31712);
var more = cljs.core.rest(arglist__31712);
return G__31710__delegate(x,y,more);
});
G__31710.cljs$core$IFn$_invoke$arity$variadic = G__31710__delegate;
return G__31710;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__31713 = null;
if (arguments.length > 2) {
var G__31714__i = 0, G__31714__a = new Array(arguments.length -  2);
while (G__31714__i < G__31714__a.length) {G__31714__a[G__31714__i] = arguments[G__31714__i + 2]; ++G__31714__i;}
G__31713 = new cljs.core.IndexedSeq(G__31714__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31713);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__31715__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__31715 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31716__i = 0, G__31716__a = new Array(arguments.length -  2);
while (G__31716__i < G__31716__a.length) {G__31716__a[G__31716__i] = arguments[G__31716__i + 2]; ++G__31716__i;}
  more = new cljs.core.IndexedSeq(G__31716__a,0);
} 
return G__31715__delegate.call(this,x,y,more);};
G__31715.cljs$lang$maxFixedArity = 2;
G__31715.cljs$lang$applyTo = (function (arglist__31717){
var x = cljs.core.first(arglist__31717);
arglist__31717 = cljs.core.next(arglist__31717);
var y = cljs.core.first(arglist__31717);
var more = cljs.core.rest(arglist__31717);
return G__31715__delegate(x,y,more);
});
G__31715.cljs$core$IFn$_invoke$arity$variadic = G__31715__delegate;
return G__31715;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__31718 = null;
if (arguments.length > 2) {
var G__31719__i = 0, G__31719__a = new Array(arguments.length -  2);
while (G__31719__i < G__31719__a.length) {G__31719__a[G__31719__i] = arguments[G__31719__i + 2]; ++G__31719__i;}
G__31718 = new cljs.core.IndexedSeq(G__31719__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31718);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__31722 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__31722) : Math.floor.call(null,G__31722));
} else {
var G__31723 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__31723) : Math.ceil.call(null,G__31723));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__31724__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__31724 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31725__i = 0, G__31725__a = new Array(arguments.length -  2);
while (G__31725__i < G__31725__a.length) {G__31725__a[G__31725__i] = arguments[G__31725__i + 2]; ++G__31725__i;}
  more = new cljs.core.IndexedSeq(G__31725__a,0);
} 
return G__31724__delegate.call(this,x,y,more);};
G__31724.cljs$lang$maxFixedArity = 2;
G__31724.cljs$lang$applyTo = (function (arglist__31726){
var x = cljs.core.first(arglist__31726);
arglist__31726 = cljs.core.next(arglist__31726);
var y = cljs.core.first(arglist__31726);
var more = cljs.core.rest(arglist__31726);
return G__31724__delegate(x,y,more);
});
G__31724.cljs$core$IFn$_invoke$arity$variadic = G__31724__delegate;
return G__31724;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__31727 = null;
if (arguments.length > 2) {
var G__31728__i = 0, G__31728__a = new Array(arguments.length -  2);
while (G__31728__i < G__31728__a.length) {G__31728__a[G__31728__i] = arguments[G__31728__i + 2]; ++G__31728__i;}
G__31727 = new cljs.core.IndexedSeq(G__31728__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31727);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__31729__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__31729 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31730__i = 0, G__31730__a = new Array(arguments.length -  2);
while (G__31730__i < G__31730__a.length) {G__31730__a[G__31730__i] = arguments[G__31730__i + 2]; ++G__31730__i;}
  more = new cljs.core.IndexedSeq(G__31730__a,0);
} 
return G__31729__delegate.call(this,x,y,more);};
G__31729.cljs$lang$maxFixedArity = 2;
G__31729.cljs$lang$applyTo = (function (arglist__31731){
var x = cljs.core.first(arglist__31731);
arglist__31731 = cljs.core.next(arglist__31731);
var y = cljs.core.first(arglist__31731);
var more = cljs.core.rest(arglist__31731);
return G__31729__delegate(x,y,more);
});
G__31729.cljs$core$IFn$_invoke$arity$variadic = G__31729__delegate;
return G__31729;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__31732 = null;
if (arguments.length > 2) {
var G__31733__i = 0, G__31733__a = new Array(arguments.length -  2);
while (G__31733__i < G__31733__a.length) {G__31733__a[G__31733__i] = arguments[G__31733__i + 2]; ++G__31733__i;}
G__31732 = new cljs.core.IndexedSeq(G__31733__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31732);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__31734__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__31734 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31735__i = 0, G__31735__a = new Array(arguments.length -  2);
while (G__31735__i < G__31735__a.length) {G__31735__a[G__31735__i] = arguments[G__31735__i + 2]; ++G__31735__i;}
  more = new cljs.core.IndexedSeq(G__31735__a,0);
} 
return G__31734__delegate.call(this,x,y,more);};
G__31734.cljs$lang$maxFixedArity = 2;
G__31734.cljs$lang$applyTo = (function (arglist__31736){
var x = cljs.core.first(arglist__31736);
arglist__31736 = cljs.core.next(arglist__31736);
var y = cljs.core.first(arglist__31736);
var more = cljs.core.rest(arglist__31736);
return G__31734__delegate(x,y,more);
});
G__31734.cljs$core$IFn$_invoke$arity$variadic = G__31734__delegate;
return G__31734;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__31737 = null;
if (arguments.length > 2) {
var G__31738__i = 0, G__31738__a = new Array(arguments.length -  2);
while (G__31738__i < G__31738__a.length) {G__31738__a[G__31738__i] = arguments[G__31738__i + 2]; ++G__31738__i;}
G__31737 = new cljs.core.IndexedSeq(G__31738__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31737);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__31739__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__31739 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31740__i = 0, G__31740__a = new Array(arguments.length -  2);
while (G__31740__i < G__31740__a.length) {G__31740__a[G__31740__i] = arguments[G__31740__i + 2]; ++G__31740__i;}
  more = new cljs.core.IndexedSeq(G__31740__a,0);
} 
return G__31739__delegate.call(this,x,y,more);};
G__31739.cljs$lang$maxFixedArity = 2;
G__31739.cljs$lang$applyTo = (function (arglist__31741){
var x = cljs.core.first(arglist__31741);
arglist__31741 = cljs.core.next(arglist__31741);
var y = cljs.core.first(arglist__31741);
var more = cljs.core.rest(arglist__31741);
return G__31739__delegate(x,y,more);
});
G__31739.cljs$core$IFn$_invoke$arity$variadic = G__31739__delegate;
return G__31739;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__31742 = null;
if (arguments.length > 2) {
var G__31743__i = 0, G__31743__a = new Array(arguments.length -  2);
while (G__31743__i < G__31743__a.length) {G__31743__a[G__31743__i] = arguments[G__31743__i + 2]; ++G__31743__i;}
G__31742 = new cljs.core.IndexedSeq(G__31743__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31742);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__31748__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__31749 = y;
var G__31750 = cljs.core.first(more);
var G__31751 = cljs.core.next(more);
x = G__31749;
y = G__31750;
more = G__31751;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__31748 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31752__i = 0, G__31752__a = new Array(arguments.length -  2);
while (G__31752__i < G__31752__a.length) {G__31752__a[G__31752__i] = arguments[G__31752__i + 2]; ++G__31752__i;}
  more = new cljs.core.IndexedSeq(G__31752__a,0);
} 
return G__31748__delegate.call(this,x,y,more);};
G__31748.cljs$lang$maxFixedArity = 2;
G__31748.cljs$lang$applyTo = (function (arglist__31753){
var x = cljs.core.first(arglist__31753);
arglist__31753 = cljs.core.next(arglist__31753);
var y = cljs.core.first(arglist__31753);
var more = cljs.core.rest(arglist__31753);
return G__31748__delegate(x,y,more);
});
G__31748.cljs$core$IFn$_invoke$arity$variadic = G__31748__delegate;
return G__31748;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__31754 = null;
if (arguments.length > 2) {
var G__31755__i = 0, G__31755__a = new Array(arguments.length -  2);
while (G__31755__i < G__31755__a.length) {G__31755__a[G__31755__i] = arguments[G__31755__i + 2]; ++G__31755__i;}
G__31754 = new cljs.core.IndexedSeq(G__31755__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31754);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__31756 = (n__$1 - (1));
var G__31757 = cljs.core.next(xs);
n__$1 = G__31756;
xs = G__31757;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__31761 = x;
return goog.string.buildString(G__31761);
}
});
var str__2 = (function() { 
var G__31762__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__31763 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__31764 = cljs.core.next(more);
sb = G__31763;
more = G__31764;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__31762 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__31765__i = 0, G__31765__a = new Array(arguments.length -  1);
while (G__31765__i < G__31765__a.length) {G__31765__a[G__31765__i] = arguments[G__31765__i + 1]; ++G__31765__i;}
  ys = new cljs.core.IndexedSeq(G__31765__a,0);
} 
return G__31762__delegate.call(this,x,ys);};
G__31762.cljs$lang$maxFixedArity = 1;
G__31762.cljs$lang$applyTo = (function (arglist__31766){
var x = cljs.core.first(arglist__31766);
var ys = cljs.core.rest(arglist__31766);
return G__31762__delegate(x,ys);
});
G__31762.cljs$core$IFn$_invoke$arity$variadic = G__31762__delegate;
return G__31762;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__31767 = null;
if (arguments.length > 1) {
var G__31768__i = 0, G__31768__a = new Array(arguments.length -  1);
while (G__31768__i < G__31768__a.length) {G__31768__a[G__31768__i] = arguments[G__31768__i + 1]; ++G__31768__i;}
G__31767 = new cljs.core.IndexedSeq(G__31768__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__31767);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__31769 = cljs.core.next(xs);
var G__31770 = cljs.core.next(ys);
xs = G__31769;
ys = G__31770;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__31771 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__31772 = cljs.core.next(s);
res = G__31771;
s = G__31772;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__31777 = ((h + (cljs.core.hash((function (){var G__31775 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__31775) : cljs.core.key.call(null,G__31775));
})()) ^ cljs.core.hash((function (){var G__31776 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__31776) : cljs.core.val.call(null,G__31776));
})()))) % (4503599627370496));
var G__31778 = cljs.core.next(s);
h = G__31777;
s = G__31778;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__31779 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__31780 = cljs.core.next(s__$1);
h = G__31779;
s__$1 = G__31780;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__31791_31801 = cljs.core.seq(fn_map);
var chunk__31792_31802 = null;
var count__31793_31803 = (0);
var i__31794_31804 = (0);
while(true){
if((i__31794_31804 < count__31793_31803)){
var vec__31795_31805 = chunk__31792_31802.cljs$core$IIndexed$_nth$arity$2(null,i__31794_31804);
var key_name_31806 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31795_31805,(0),null);
var f_31807 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31795_31805,(1),null);
var str_name_31808 = (function (){var G__31796 = key_name_31806;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__31796) : cljs.core.name.call(null,G__31796));
})();
(obj[str_name_31808] = f_31807);

var G__31809 = seq__31791_31801;
var G__31810 = chunk__31792_31802;
var G__31811 = count__31793_31803;
var G__31812 = (i__31794_31804 + (1));
seq__31791_31801 = G__31809;
chunk__31792_31802 = G__31810;
count__31793_31803 = G__31811;
i__31794_31804 = G__31812;
continue;
} else {
var temp__4126__auto___31813 = cljs.core.seq(seq__31791_31801);
if(temp__4126__auto___31813){
var seq__31791_31814__$1 = temp__4126__auto___31813;
if(cljs.core.chunked_seq_QMARK_(seq__31791_31814__$1)){
var c__4563__auto___31815 = (function (){var G__31797 = seq__31791_31814__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__31797) : cljs.core.chunk_first.call(null,G__31797));
})();
var G__31816 = (function (){var G__31798 = seq__31791_31814__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__31798) : cljs.core.chunk_rest.call(null,G__31798));
})();
var G__31817 = c__4563__auto___31815;
var G__31818 = cljs.core.count(c__4563__auto___31815);
var G__31819 = (0);
seq__31791_31801 = G__31816;
chunk__31792_31802 = G__31817;
count__31793_31803 = G__31818;
i__31794_31804 = G__31819;
continue;
} else {
var vec__31799_31820 = cljs.core.first(seq__31791_31814__$1);
var key_name_31821 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31799_31820,(0),null);
var f_31822 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31799_31820,(1),null);
var str_name_31823 = (function (){var G__31800 = key_name_31821;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__31800) : cljs.core.name.call(null,G__31800));
})();
(obj[str_name_31823] = f_31822);

var G__31824 = cljs.core.next(seq__31791_31814__$1);
var G__31825 = null;
var G__31826 = (0);
var G__31827 = (0);
seq__31791_31801 = G__31824;
chunk__31792_31802 = G__31825;
count__31793_31803 = G__31826;
i__31794_31804 = G__31827;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4197__auto__ = self__.__hash;
if(!((h__4197__auto__ == null))){
return h__4197__auto__;
} else {
var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4197__auto____$1;

return h__4197__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4754__auto__ = this;
return cljs.core.es6_iterator(this__4754__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4754__auto__ = this;
return cljs.core.es6_iterator(this__4754__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__31829 = coll;
if(G__31829){
var bit__4457__auto__ = (G__31829.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4457__auto__) || (G__31829.cljs$core$IReversible$)){
return true;
} else {
if((!G__31829.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__31829);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__31829);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__31830 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__31830;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__31831 = (i - (1));
var G__31832 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__31831;
r = G__31832;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__31833__i = 0, G__31833__a = new Array(arguments.length -  0);
while (G__31833__i < G__31833__a.length) {G__31833__a[G__31833__i] = arguments[G__31833__i + 0]; ++G__31833__i;}
  xs = new cljs.core.IndexedSeq(G__31833__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__31834){
var xs = cljs.core.seq(arglist__31834);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4197__auto__ = self__.__hash;
if(!((h__4197__auto__ == null))){
return h__4197__auto__;
} else {
var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4197__auto____$1;

return h__4197__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4754__auto__ = this;
return cljs.core.es6_iterator(this__4754__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3776__auto__ = (coll == null);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var G__31838 = coll;
if(G__31838){
var bit__4450__auto__ = (G__31838.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4450__auto__) || (G__31838.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__31840 = x;
if(G__31840){
var bit__4457__auto__ = (G__31840.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4457__auto__) || (G__31840.cljs$core$IList$)){
return true;
} else {
if((!G__31840.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__31840);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__31840);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3764__auto__ = cljs.core.not(a.ns);
if(and__3764__auto__){
return b.ns;
} else {
return and__3764__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__31847 = a.ns;
var G__31848 = b.ns;
return goog.array.defaultCompare(G__31847,G__31848);
})();
if(((0) === nsc)){
var G__31849 = a.name;
var G__31850 = b.name;
return goog.array.defaultCompare(G__31849,G__31850);
} else {
return nsc;
}
}
} else {
var G__31851 = a.name;
var G__31852 = b.name;
return goog.array.defaultCompare(G__31851,G__31852);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4197__auto__ = self__._hash;
if(!((h__4197__auto__ == null))){
return h__4197__auto__;
} else {
var h__4197__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4197__auto____$1;

return h__4197__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__31854 = null;
var G__31854__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__31854__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__31854 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__31854__2.call(this,self__,coll);
case 3:
return G__31854__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31854.cljs$core$IFn$_invoke$arity$2 = G__31854__2;
G__31854.cljs$core$IFn$_invoke$arity$3 = G__31854__3;
return G__31854;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args31853){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31853)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__31856 = x;
if(G__31856){
var bit__4450__auto__ = (G__31856.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4450__auto__) || (G__31856.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__31858 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__31858) : cljs.core.name.call(null,G__31858));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4197__auto__ = self__.__hash;
if(!((h__4197__auto__ == null))){
return h__4197__auto__;
} else {
var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4197__auto____$1;

return h__4197__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__31859 = ls.sval();
ls = G__31859;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4754__auto__ = this;
return cljs.core.es6_iterator(this__4754__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4197__auto__ = self__.__hash;
if(!((h__4197__auto__ == null))){
return h__4197__auto__;
} else {
var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4197__auto____$1;

return h__4197__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4754__auto__ = this;
return cljs.core.es6_iterator(this__4754__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__31861 = s;
if(G__31861){
var bit__4450__auto__ = (G__31861.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4450__auto__) || (G__31861.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__31862 = cljs.core.next(s__$1);
s__$1 = G__31862;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_31863 = (0);
var xs_31864 = cljs.core.seq(coll);
while(true){
if(xs_31864){
(ret[i_31863] = cljs.core.to_array(cljs.core.first(xs_31864)));

var G__31865 = (i_31863 + (1));
var G__31866 = cljs.core.next(xs_31864);
i_31863 = G__31865;
xs_31864 = G__31866;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__31869 = (i + (1));
var G__31870 = cljs.core.next(s__$1);
i = G__31869;
s__$1 = G__31870;
continue;
} else {
return a;
}
break;
}
} else {
var n__4663__auto___31871 = size;
var i_31872 = (0);
while(true){
if((i_31872 < n__4663__auto___31871)){
(a[i_31872] = init_val_or_seq);

var G__31873 = (i_31872 + (1));
i_31872 = G__31873;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__31876 = (i + (1));
var G__31877 = cljs.core.next(s__$1);
i = G__31876;
s__$1 = G__31877;
continue;
} else {
return a;
}
break;
}
} else {
var n__4663__auto___31878 = size;
var i_31879 = (0);
while(true){
if((i_31879 < n__4663__auto___31878)){
(a[i_31879] = init_val_or_seq);

var G__31880 = (i_31879 + (1));
i_31879 = G__31880;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__31883 = (i + (1));
var G__31884 = cljs.core.next(s__$1);
i = G__31883;
s__$1 = G__31884;
continue;
} else {
return a;
}
break;
}
} else {
var n__4663__auto___31885 = size;
var i_31886 = (0);
while(true){
if((i_31886 < n__4663__auto___31885)){
(a[i_31886] = init_val_or_seq);

var G__31887 = (i_31886 + (1));
i_31886 = G__31887;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__31890 = (i + (1));
var G__31891 = cljs.core.next(s__$1);
i = G__31890;
s__$1 = G__31891;
continue;
} else {
return a;
}
break;
}
} else {
var n__4663__auto___31892 = size;
var i_31893 = (0);
while(true){
if((i_31893 < n__4663__auto___31892)){
(a[i_31893] = init_val_or_seq);

var G__31894 = (i_31893 + (1));
i_31893 = G__31894;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__31895 = cljs.core.next(s__$1);
var G__31896 = (i - (1));
var G__31897 = (sum + (1));
s__$1 = G__31895;
i = G__31896;
sum = G__31897;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__31917__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__31917 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__31918__i = 0, G__31918__a = new Array(arguments.length -  2);
while (G__31918__i < G__31918__a.length) {G__31918__a[G__31918__i] = arguments[G__31918__i + 2]; ++G__31918__i;}
  zs = new cljs.core.IndexedSeq(G__31918__a,0);
} 
return G__31917__delegate.call(this,x,y,zs);};
G__31917.cljs$lang$maxFixedArity = 2;
G__31917.cljs$lang$applyTo = (function (arglist__31919){
var x = cljs.core.first(arglist__31919);
arglist__31919 = cljs.core.next(arglist__31919);
var y = cljs.core.first(arglist__31919);
var zs = cljs.core.rest(arglist__31919);
return G__31917__delegate(x,y,zs);
});
G__31917.cljs$core$IFn$_invoke$arity$variadic = G__31917__delegate;
return G__31917;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__31920 = null;
if (arguments.length > 2) {
var G__31921__i = 0, G__31921__a = new Array(arguments.length -  2);
while (G__31921__i < G__31921__a.length) {G__31921__a[G__31921__i] = arguments[G__31921__i + 2]; ++G__31921__i;}
G__31920 = new cljs.core.IndexedSeq(G__31921__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31920);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__31922__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__31922 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__31923__i = 0, G__31923__a = new Array(arguments.length -  4);
while (G__31923__i < G__31923__a.length) {G__31923__a[G__31923__i] = arguments[G__31923__i + 4]; ++G__31923__i;}
  more = new cljs.core.IndexedSeq(G__31923__a,0);
} 
return G__31922__delegate.call(this,a,b,c,d,more);};
G__31922.cljs$lang$maxFixedArity = 4;
G__31922.cljs$lang$applyTo = (function (arglist__31924){
var a = cljs.core.first(arglist__31924);
arglist__31924 = cljs.core.next(arglist__31924);
var b = cljs.core.first(arglist__31924);
arglist__31924 = cljs.core.next(arglist__31924);
var c = cljs.core.first(arglist__31924);
arglist__31924 = cljs.core.next(arglist__31924);
var d = cljs.core.first(arglist__31924);
var more = cljs.core.rest(arglist__31924);
return G__31922__delegate(a,b,c,d,more);
});
G__31922.cljs$core$IFn$_invoke$arity$variadic = G__31922__delegate;
return G__31922;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__31925 = null;
if (arguments.length > 4) {
var G__31926__i = 0, G__31926__a = new Array(arguments.length -  4);
while (G__31926__i < G__31926__a.length) {G__31926__a[G__31926__i] = arguments[G__31926__i + 4]; ++G__31926__i;}
G__31925 = new cljs.core.IndexedSeq(G__31926__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__31925);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__31927__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__31928 = ntcoll;
var G__31929 = cljs.core.first(vals);
var G__31930 = cljs.core.next(vals);
tcoll = G__31928;
val = G__31929;
vals = G__31930;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__31927 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__31931__i = 0, G__31931__a = new Array(arguments.length -  2);
while (G__31931__i < G__31931__a.length) {G__31931__a[G__31931__i] = arguments[G__31931__i + 2]; ++G__31931__i;}
  vals = new cljs.core.IndexedSeq(G__31931__a,0);
} 
return G__31927__delegate.call(this,tcoll,val,vals);};
G__31927.cljs$lang$maxFixedArity = 2;
G__31927.cljs$lang$applyTo = (function (arglist__31932){
var tcoll = cljs.core.first(arglist__31932);
arglist__31932 = cljs.core.next(arglist__31932);
var val = cljs.core.first(arglist__31932);
var vals = cljs.core.rest(arglist__31932);
return G__31927__delegate(tcoll,val,vals);
});
G__31927.cljs$core$IFn$_invoke$arity$variadic = G__31927__delegate;
return G__31927;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__31933 = null;
if (arguments.length > 2) {
var G__31934__i = 0, G__31934__a = new Array(arguments.length -  2);
while (G__31934__i < G__31934__a.length) {G__31934__a[G__31934__i] = arguments[G__31934__i + 2]; ++G__31934__i;}
G__31933 = new cljs.core.IndexedSeq(G__31934__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__31933);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__31935__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__31936 = ntcoll;
var G__31937 = cljs.core.first(kvs);
var G__31938 = cljs.core.second(kvs);
var G__31939 = cljs.core.nnext(kvs);
tcoll = G__31936;
key = G__31937;
val = G__31938;
kvs = G__31939;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__31935 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__31940__i = 0, G__31940__a = new Array(arguments.length -  3);
while (G__31940__i < G__31940__a.length) {G__31940__a[G__31940__i] = arguments[G__31940__i + 3]; ++G__31940__i;}
  kvs = new cljs.core.IndexedSeq(G__31940__a,0);
} 
return G__31935__delegate.call(this,tcoll,key,val,kvs);};
G__31935.cljs$lang$maxFixedArity = 3;
G__31935.cljs$lang$applyTo = (function (arglist__31941){
var tcoll = cljs.core.first(arglist__31941);
arglist__31941 = cljs.core.next(arglist__31941);
var key = cljs.core.first(arglist__31941);
arglist__31941 = cljs.core.next(arglist__31941);
var val = cljs.core.first(arglist__31941);
var kvs = cljs.core.rest(arglist__31941);
return G__31935__delegate(tcoll,key,val,kvs);
});
G__31935.cljs$core$IFn$_invoke$arity$variadic = G__31935__delegate;
return G__31935;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__31942 = null;
if (arguments.length > 3) {
var G__31943__i = 0, G__31943__a = new Array(arguments.length -  3);
while (G__31943__i < G__31943__a.length) {G__31943__a[G__31943__i] = arguments[G__31943__i + 3]; ++G__31943__i;}
G__31942 = new cljs.core.IndexedSeq(G__31943__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__31942);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__31944__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__31945 = ntcoll;
var G__31946 = cljs.core.first(ks);
var G__31947 = cljs.core.next(ks);
tcoll = G__31945;
key = G__31946;
ks = G__31947;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__31944 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__31948__i = 0, G__31948__a = new Array(arguments.length -  2);
while (G__31948__i < G__31948__a.length) {G__31948__a[G__31948__i] = arguments[G__31948__i + 2]; ++G__31948__i;}
  ks = new cljs.core.IndexedSeq(G__31948__a,0);
} 
return G__31944__delegate.call(this,tcoll,key,ks);};
G__31944.cljs$lang$maxFixedArity = 2;
G__31944.cljs$lang$applyTo = (function (arglist__31949){
var tcoll = cljs.core.first(arglist__31949);
arglist__31949 = cljs.core.next(arglist__31949);
var key = cljs.core.first(arglist__31949);
var ks = cljs.core.rest(arglist__31949);
return G__31944__delegate(tcoll,key,ks);
});
G__31944.cljs$core$IFn$_invoke$arity$variadic = G__31944__delegate;
return G__31944;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__31950 = null;
if (arguments.length > 2) {
var G__31951__i = 0, G__31951__a = new Array(arguments.length -  2);
while (G__31951__i < G__31951__a.length) {G__31951__a[G__31951__i] = arguments[G__31951__i + 2]; ++G__31951__i;}
G__31950 = new cljs.core.IndexedSeq(G__31951__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__31950);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__31952__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__31953 = ntcoll;
var G__31954 = cljs.core.first(vals);
var G__31955 = cljs.core.next(vals);
tcoll = G__31953;
val = G__31954;
vals = G__31955;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__31952 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__31956__i = 0, G__31956__a = new Array(arguments.length -  2);
while (G__31956__i < G__31956__a.length) {G__31956__a[G__31956__i] = arguments[G__31956__i + 2]; ++G__31956__i;}
  vals = new cljs.core.IndexedSeq(G__31956__a,0);
} 
return G__31952__delegate.call(this,tcoll,val,vals);};
G__31952.cljs$lang$maxFixedArity = 2;
G__31952.cljs$lang$applyTo = (function (arglist__31957){
var tcoll = cljs.core.first(arglist__31957);
arglist__31957 = cljs.core.next(arglist__31957);
var val = cljs.core.first(arglist__31957);
var vals = cljs.core.rest(arglist__31957);
return G__31952__delegate(tcoll,val,vals);
});
G__31952.cljs$core$IFn$_invoke$arity$variadic = G__31952__delegate;
return G__31952;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__31958 = null;
if (arguments.length > 2) {
var G__31959__i = 0, G__31959__a = new Array(arguments.length -  2);
while (G__31959__i < G__31959__a.length) {G__31959__a[G__31959__i] = arguments[G__31959__i + 2]; ++G__31959__i;}
G__31958 = new cljs.core.IndexedSeq(G__31959__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__31958);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4707 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4707);
} else {
var G__32170 = a4707;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32170) : f.call(null,G__32170));
}
} else {
var b4708 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4707,b4708);
} else {
var G__32171 = a4707;
var G__32172 = b4708;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32171,G__32172) : f.call(null,G__32171,G__32172));
}
} else {
var c4709 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4707,b4708,c4709);
} else {
var G__32173 = a4707;
var G__32174 = b4708;
var G__32175 = c4709;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__32173,G__32174,G__32175) : f.call(null,G__32173,G__32174,G__32175));
}
} else {
var d4710 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4707,b4708,c4709,d4710);
} else {
var G__32176 = a4707;
var G__32177 = b4708;
var G__32178 = c4709;
var G__32179 = d4710;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__32176,G__32177,G__32178,G__32179) : f.call(null,G__32176,G__32177,G__32178,G__32179));
}
} else {
var e4711 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4707,b4708,c4709,d4710,e4711);
} else {
var G__32180 = a4707;
var G__32181 = b4708;
var G__32182 = c4709;
var G__32183 = d4710;
var G__32184 = e4711;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__32180,G__32181,G__32182,G__32183,G__32184) : f.call(null,G__32180,G__32181,G__32182,G__32183,G__32184));
}
} else {
var f4712 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4707,b4708,c4709,d4710,e4711,f4712);
} else {
var G__32185 = a4707;
var G__32186 = b4708;
var G__32187 = c4709;
var G__32188 = d4710;
var G__32189 = e4711;
var G__32190 = f4712;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__32185,G__32186,G__32187,G__32188,G__32189,G__32190) : f.call(null,G__32185,G__32186,G__32187,G__32188,G__32189,G__32190));
}
} else {
var g4713 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4707,b4708,c4709,d4710,e4711,f4712,g4713);
} else {
var G__32191 = a4707;
var G__32192 = b4708;
var G__32193 = c4709;
var G__32194 = d4710;
var G__32195 = e4711;
var G__32196 = f4712;
var G__32197 = g4713;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__32191,G__32192,G__32193,G__32194,G__32195,G__32196,G__32197) : f.call(null,G__32191,G__32192,G__32193,G__32194,G__32195,G__32196,G__32197));
}
} else {
var h4714 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4707,b4708,c4709,d4710,e4711,f4712,g4713,h4714);
} else {
var G__32198 = a4707;
var G__32199 = b4708;
var G__32200 = c4709;
var G__32201 = d4710;
var G__32202 = e4711;
var G__32203 = f4712;
var G__32204 = g4713;
var G__32205 = h4714;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__32198,G__32199,G__32200,G__32201,G__32202,G__32203,G__32204,G__32205) : f.call(null,G__32198,G__32199,G__32200,G__32201,G__32202,G__32203,G__32204,G__32205));
}
} else {
var i4715 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4707,b4708,c4709,d4710,e4711,f4712,g4713,h4714,i4715);
} else {
var G__32206 = a4707;
var G__32207 = b4708;
var G__32208 = c4709;
var G__32209 = d4710;
var G__32210 = e4711;
var G__32211 = f4712;
var G__32212 = g4713;
var G__32213 = h4714;
var G__32214 = i4715;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__32206,G__32207,G__32208,G__32209,G__32210,G__32211,G__32212,G__32213,G__32214) : f.call(null,G__32206,G__32207,G__32208,G__32209,G__32210,G__32211,G__32212,G__32213,G__32214));
}
} else {
var j4716 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4707,b4708,c4709,d4710,e4711,f4712,g4713,h4714,i4715,j4716);
} else {
var G__32215 = a4707;
var G__32216 = b4708;
var G__32217 = c4709;
var G__32218 = d4710;
var G__32219 = e4711;
var G__32220 = f4712;
var G__32221 = g4713;
var G__32222 = h4714;
var G__32223 = i4715;
var G__32224 = j4716;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__32215,G__32216,G__32217,G__32218,G__32219,G__32220,G__32221,G__32222,G__32223,G__32224) : f.call(null,G__32215,G__32216,G__32217,G__32218,G__32219,G__32220,G__32221,G__32222,G__32223,G__32224));
}
} else {
var k4717 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4707,b4708,c4709,d4710,e4711,f4712,g4713,h4714,i4715,j4716,k4717);
} else {
var G__32225 = a4707;
var G__32226 = b4708;
var G__32227 = c4709;
var G__32228 = d4710;
var G__32229 = e4711;
var G__32230 = f4712;
var G__32231 = g4713;
var G__32232 = h4714;
var G__32233 = i4715;
var G__32234 = j4716;
var G__32235 = k4717;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__32225,G__32226,G__32227,G__32228,G__32229,G__32230,G__32231,G__32232,G__32233,G__32234,G__32235) : f.call(null,G__32225,G__32226,G__32227,G__32228,G__32229,G__32230,G__32231,G__32232,G__32233,G__32234,G__32235));
}
} else {
var l4718 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4707,b4708,c4709,d4710,e4711,f4712,g4713,h4714,i4715,j4716,k4717,l4718);
} else {
var G__32236 = a4707;
var G__32237 = b4708;
var G__32238 = c4709;
var G__32239 = d4710;
var G__32240 = e4711;
var G__32241 = f4712;
var G__32242 = g4713;
var G__32243 = h4714;
var G__32244 = i4715;
var G__32245 = j4716;
var G__32246 = k4717;
var G__32247 = l4718;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__32236,G__32237,G__32238,G__32239,G__32240,G__32241,G__32242,G__32243,G__32244,G__32245,G__32246,G__32247) : f.call(null,G__32236,G__32237,G__32238,G__32239,G__32240,G__32241,G__32242,G__32243,G__32244,G__32245,G__32246,G__32247));
}
} else {
var m4719 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4707,b4708,c4709,d4710,e4711,f4712,g4713,h4714,i4715,j4716,k4717,l4718,m4719);
} else {
var G__32248 = a4707;
var G__32249 = b4708;
var G__32250 = c4709;
var G__32251 = d4710;
var G__32252 = e4711;
var G__32253 = f4712;
var G__32254 = g4713;
var G__32255 = h4714;
var G__32256 = i4715;
var G__32257 = j4716;
var G__32258 = k4717;
var G__32259 = l4718;
var G__32260 = m4719;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__32248,G__32249,G__32250,G__32251,G__32252,G__32253,G__32254,G__32255,G__32256,G__32257,G__32258,G__32259,G__32260) : f.call(null,G__32248,G__32249,G__32250,G__32251,G__32252,G__32253,G__32254,G__32255,G__32256,G__32257,G__32258,G__32259,G__32260));
}
} else {
var n4720 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4707,b4708,c4709,d4710,e4711,f4712,g4713,h4714,i4715,j4716,k4717,l4718,m4719,n4720);
} else {
var G__32261 = a4707;
var G__32262 = b4708;
var G__32263 = c4709;
var G__32264 = d4710;
var G__32265 = e4711;
var G__32266 = f4712;
var G__32267 = g4713;
var G__32268 = h4714;
var G__32269 = i4715;
var G__32270 = j4716;
var G__32271 = k4717;
var G__32272 = l4718;
var G__32273 = m4719;
var G__32274 = n4720;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__32261,G__32262,G__32263,G__32264,G__32265,G__32266,G__32267,G__32268,G__32269,G__32270,G__32271,G__32272,G__32273,G__32274) : f.call(null,G__32261,G__32262,G__32263,G__32264,G__32265,G__32266,G__32267,G__32268,G__32269,G__32270,G__32271,G__32272,G__32273,G__32274));
}
} else {
var o4721 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4707,b4708,c4709,d4710,e4711,f4712,g4713,h4714,i4715,j4716,k4717,l4718,m4719,n4720,o4721);
} else {
var G__32275 = a4707;
var G__32276 = b4708;
var G__32277 = c4709;
var G__32278 = d4710;
var G__32279 = e4711;
var G__32280 = f4712;
var G__32281 = g4713;
var G__32282 = h4714;
var G__32283 = i4715;
var G__32284 = j4716;
var G__32285 = k4717;
var G__32286 = l4718;
var G__32287 = m4719;
var G__32288 = n4720;
var G__32289 = o4721;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__32275,G__32276,G__32277,G__32278,G__32279,G__32280,G__32281,G__32282,G__32283,G__32284,G__32285,G__32286,G__32287,G__32288,G__32289) : f.call(null,G__32275,G__32276,G__32277,G__32278,G__32279,G__32280,G__32281,G__32282,G__32283,G__32284,G__32285,G__32286,G__32287,G__32288,G__32289));
}
} else {
var p4722 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4707,b4708,c4709,d4710,e4711,f4712,g4713,h4714,i4715,j4716,k4717,l4718,m4719,n4720,o4721,p4722);
} else {
var G__32290 = a4707;
var G__32291 = b4708;
var G__32292 = c4709;
var G__32293 = d4710;
var G__32294 = e4711;
var G__32295 = f4712;
var G__32296 = g4713;
var G__32297 = h4714;
var G__32298 = i4715;
var G__32299 = j4716;
var G__32300 = k4717;
var G__32301 = l4718;
var G__32302 = m4719;
var G__32303 = n4720;
var G__32304 = o4721;
var G__32305 = p4722;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__32290,G__32291,G__32292,G__32293,G__32294,G__32295,G__32296,G__32297,G__32298,G__32299,G__32300,G__32301,G__32302,G__32303,G__32304,G__32305) : f.call(null,G__32290,G__32291,G__32292,G__32293,G__32294,G__32295,G__32296,G__32297,G__32298,G__32299,G__32300,G__32301,G__32302,G__32303,G__32304,G__32305));
}
} else {
var q4723 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4707,b4708,c4709,d4710,e4711,f4712,g4713,h4714,i4715,j4716,k4717,l4718,m4719,n4720,o4721,p4722,q4723);
} else {
var G__32306 = a4707;
var G__32307 = b4708;
var G__32308 = c4709;
var G__32309 = d4710;
var G__32310 = e4711;
var G__32311 = f4712;
var G__32312 = g4713;
var G__32313 = h4714;
var G__32314 = i4715;
var G__32315 = j4716;
var G__32316 = k4717;
var G__32317 = l4718;
var G__32318 = m4719;
var G__32319 = n4720;
var G__32320 = o4721;
var G__32321 = p4722;
var G__32322 = q4723;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__32306,G__32307,G__32308,G__32309,G__32310,G__32311,G__32312,G__32313,G__32314,G__32315,G__32316,G__32317,G__32318,G__32319,G__32320,G__32321,G__32322) : f.call(null,G__32306,G__32307,G__32308,G__32309,G__32310,G__32311,G__32312,G__32313,G__32314,G__32315,G__32316,G__32317,G__32318,G__32319,G__32320,G__32321,G__32322));
}
} else {
var r4724 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4707,b4708,c4709,d4710,e4711,f4712,g4713,h4714,i4715,j4716,k4717,l4718,m4719,n4720,o4721,p4722,q4723,r4724);
} else {
var G__32323 = a4707;
var G__32324 = b4708;
var G__32325 = c4709;
var G__32326 = d4710;
var G__32327 = e4711;
var G__32328 = f4712;
var G__32329 = g4713;
var G__32330 = h4714;
var G__32331 = i4715;
var G__32332 = j4716;
var G__32333 = k4717;
var G__32334 = l4718;
var G__32335 = m4719;
var G__32336 = n4720;
var G__32337 = o4721;
var G__32338 = p4722;
var G__32339 = q4723;
var G__32340 = r4724;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__32323,G__32324,G__32325,G__32326,G__32327,G__32328,G__32329,G__32330,G__32331,G__32332,G__32333,G__32334,G__32335,G__32336,G__32337,G__32338,G__32339,G__32340) : f.call(null,G__32323,G__32324,G__32325,G__32326,G__32327,G__32328,G__32329,G__32330,G__32331,G__32332,G__32333,G__32334,G__32335,G__32336,G__32337,G__32338,G__32339,G__32340));
}
} else {
var s4725 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4707,b4708,c4709,d4710,e4711,f4712,g4713,h4714,i4715,j4716,k4717,l4718,m4719,n4720,o4721,p4722,q4723,r4724,s4725);
} else {
var G__32341 = a4707;
var G__32342 = b4708;
var G__32343 = c4709;
var G__32344 = d4710;
var G__32345 = e4711;
var G__32346 = f4712;
var G__32347 = g4713;
var G__32348 = h4714;
var G__32349 = i4715;
var G__32350 = j4716;
var G__32351 = k4717;
var G__32352 = l4718;
var G__32353 = m4719;
var G__32354 = n4720;
var G__32355 = o4721;
var G__32356 = p4722;
var G__32357 = q4723;
var G__32358 = r4724;
var G__32359 = s4725;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__32341,G__32342,G__32343,G__32344,G__32345,G__32346,G__32347,G__32348,G__32349,G__32350,G__32351,G__32352,G__32353,G__32354,G__32355,G__32356,G__32357,G__32358,G__32359) : f.call(null,G__32341,G__32342,G__32343,G__32344,G__32345,G__32346,G__32347,G__32348,G__32349,G__32350,G__32351,G__32352,G__32353,G__32354,G__32355,G__32356,G__32357,G__32358,G__32359));
}
} else {
var t4726 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4707,b4708,c4709,d4710,e4711,f4712,g4713,h4714,i4715,j4716,k4717,l4718,m4719,n4720,o4721,p4722,q4723,r4724,s4725,t4726);
} else {
var G__32360 = a4707;
var G__32361 = b4708;
var G__32362 = c4709;
var G__32363 = d4710;
var G__32364 = e4711;
var G__32365 = f4712;
var G__32366 = g4713;
var G__32367 = h4714;
var G__32368 = i4715;
var G__32369 = j4716;
var G__32370 = k4717;
var G__32371 = l4718;
var G__32372 = m4719;
var G__32373 = n4720;
var G__32374 = o4721;
var G__32375 = p4722;
var G__32376 = q4723;
var G__32377 = r4724;
var G__32378 = s4725;
var G__32379 = t4726;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__32360,G__32361,G__32362,G__32363,G__32364,G__32365,G__32366,G__32367,G__32368,G__32369,G__32370,G__32371,G__32372,G__32373,G__32374,G__32375,G__32376,G__32377,G__32378,G__32379) : f.call(null,G__32360,G__32361,G__32362,G__32363,G__32364,G__32365,G__32366,G__32367,G__32368,G__32369,G__32370,G__32371,G__32372,G__32373,G__32374,G__32375,G__32376,G__32377,G__32378,G__32379));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__32380__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__32380 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__32381__i = 0, G__32381__a = new Array(arguments.length -  5);
while (G__32381__i < G__32381__a.length) {G__32381__a[G__32381__i] = arguments[G__32381__i + 5]; ++G__32381__i;}
  args = new cljs.core.IndexedSeq(G__32381__a,0);
} 
return G__32380__delegate.call(this,f,a,b,c,d,args);};
G__32380.cljs$lang$maxFixedArity = 5;
G__32380.cljs$lang$applyTo = (function (arglist__32382){
var f = cljs.core.first(arglist__32382);
arglist__32382 = cljs.core.next(arglist__32382);
var a = cljs.core.first(arglist__32382);
arglist__32382 = cljs.core.next(arglist__32382);
var b = cljs.core.first(arglist__32382);
arglist__32382 = cljs.core.next(arglist__32382);
var c = cljs.core.first(arglist__32382);
arglist__32382 = cljs.core.next(arglist__32382);
var d = cljs.core.first(arglist__32382);
var args = cljs.core.rest(arglist__32382);
return G__32380__delegate(f,a,b,c,d,args);
});
G__32380.cljs$core$IFn$_invoke$arity$variadic = G__32380__delegate;
return G__32380;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__32383 = null;
if (arguments.length > 5) {
var G__32384__i = 0, G__32384__a = new Array(arguments.length -  5);
while (G__32384__i < G__32384__a.length) {G__32384__a[G__32384__i] = arguments[G__32384__i + 5]; ++G__32384__i;}
G__32383 = new cljs.core.IndexedSeq(G__32384__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__32383);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__32400 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32400) : f.call(null,G__32400));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__32401 = cljs.core.meta(obj);
var G__32402 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32401,G__32402) : f.call(null,G__32401,G__32402));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__32403 = cljs.core.meta(obj);
var G__32404 = a;
var G__32405 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__32403,G__32404,G__32405) : f.call(null,G__32403,G__32404,G__32405));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__32406 = cljs.core.meta(obj);
var G__32407 = a;
var G__32408 = b;
var G__32409 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__32406,G__32407,G__32408,G__32409) : f.call(null,G__32406,G__32407,G__32408,G__32409));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__32410 = cljs.core.meta(obj);
var G__32411 = a;
var G__32412 = b;
var G__32413 = c;
var G__32414 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__32410,G__32411,G__32412,G__32413,G__32414) : f.call(null,G__32410,G__32411,G__32412,G__32413,G__32414));
})());
});
var vary_meta__7 = (function() { 
var G__32415__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__32415 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__32416__i = 0, G__32416__a = new Array(arguments.length -  6);
while (G__32416__i < G__32416__a.length) {G__32416__a[G__32416__i] = arguments[G__32416__i + 6]; ++G__32416__i;}
  args = new cljs.core.IndexedSeq(G__32416__a,0);
} 
return G__32415__delegate.call(this,obj,f,a,b,c,d,args);};
G__32415.cljs$lang$maxFixedArity = 6;
G__32415.cljs$lang$applyTo = (function (arglist__32417){
var obj = cljs.core.first(arglist__32417);
arglist__32417 = cljs.core.next(arglist__32417);
var f = cljs.core.first(arglist__32417);
arglist__32417 = cljs.core.next(arglist__32417);
var a = cljs.core.first(arglist__32417);
arglist__32417 = cljs.core.next(arglist__32417);
var b = cljs.core.first(arglist__32417);
arglist__32417 = cljs.core.next(arglist__32417);
var c = cljs.core.first(arglist__32417);
arglist__32417 = cljs.core.next(arglist__32417);
var d = cljs.core.first(arglist__32417);
var args = cljs.core.rest(arglist__32417);
return G__32415__delegate(obj,f,a,b,c,d,args);
});
G__32415.cljs$core$IFn$_invoke$arity$variadic = G__32415__delegate;
return G__32415;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__32418 = null;
if (arguments.length > 6) {
var G__32419__i = 0, G__32419__a = new Array(arguments.length -  6);
while (G__32419__i < G__32419__a.length) {G__32419__a[G__32419__i] = arguments[G__32419__i + 6]; ++G__32419__i;}
G__32418 = new cljs.core.IndexedSeq(G__32419__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__32418);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__32420__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__32420 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32421__i = 0, G__32421__a = new Array(arguments.length -  2);
while (G__32421__i < G__32421__a.length) {G__32421__a[G__32421__i] = arguments[G__32421__i + 2]; ++G__32421__i;}
  more = new cljs.core.IndexedSeq(G__32421__a,0);
} 
return G__32420__delegate.call(this,x,y,more);};
G__32420.cljs$lang$maxFixedArity = 2;
G__32420.cljs$lang$applyTo = (function (arglist__32422){
var x = cljs.core.first(arglist__32422);
arglist__32422 = cljs.core.next(arglist__32422);
var y = cljs.core.first(arglist__32422);
var more = cljs.core.rest(arglist__32422);
return G__32420__delegate(x,y,more);
});
G__32420.cljs$core$IFn$_invoke$arity$variadic = G__32420__delegate;
return G__32420;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__32423 = null;
if (arguments.length > 2) {
var G__32424__i = 0, G__32424__a = new Array(arguments.length -  2);
while (G__32424__i < G__32424__a.length) {G__32424__a[G__32424__i] = arguments[G__32424__i + 2]; ++G__32424__i;}
G__32423 = new cljs.core.IndexedSeq(G__32424__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32423);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t32428 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t32428 = (function (nil_iter,meta32429){
this.nil_iter = nil_iter;
this.meta32429 = meta32429;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t32428.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t32428.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t32428.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t32428.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_32430){
var self__ = this;
var _32430__$1 = this;
return self__.meta32429;
});

cljs.core.t32428.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_32430,meta32429__$1){
var self__ = this;
var _32430__$1 = this;
return (new cljs.core.t32428(self__.nil_iter,meta32429__$1));
});

cljs.core.t32428.cljs$lang$type = true;

cljs.core.t32428.cljs$lang$ctorStr = "cljs.core/t32428";

cljs.core.t32428.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/t32428");
});

cljs.core.__GT_t32428 = (function __GT_t32428(nil_iter__$1,meta32429){
return (new cljs.core.t32428(nil_iter__$1,meta32429));
});

}

return (new cljs.core.t32428(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$109,54,cljs.core.constant$keyword$110,3063,cljs.core.constant$keyword$111,3,cljs.core.constant$keyword$112,3059,cljs.core.constant$keyword$113,"/Users/rchaves/Dropbox/Apresentac\u0327o\u0303es/single-state-atom-apps/om/out-adv/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3764__auto__ = !((lt.stepper == null));
if(and__3764__auto__){
return self__.iter.hasNext();
} else {
return and__3764__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__32431 = lt;
var G__32432 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__32431,G__32432) : self__.xform.call(null,G__32431,G__32432));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__32433 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__32433) : self__.xform.call(null,G__32433));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__32435 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__32435) : xform.call(null,G__32435));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__32437 = cljs.core.next(iters__$1);
iters__$1 = G__32437;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4663__auto___32438 = self__.iters.length;
var i_32439 = (0);
while(true){
if((i_32439 < n__4663__auto___32438)){
(self__.nexts[i_32439] = (self__.iters[i_32439]).next());

var G__32440 = (i_32439 + (1));
i_32439 = G__32440;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3764__auto__ = !((lt.stepper == null));
if(and__3764__auto__){
return this$.hasNext();
} else {
return and__3764__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__32436 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__32436) : self__.xform.call(null,G__32436));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__32445 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__32445) : xform.call(null,G__32445));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4754__auto__ = this;
return cljs.core.es6_iterator(this__4754__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__32446_32450 = cljs.core.seq(colls);
var chunk__32447_32451 = null;
var count__32448_32452 = (0);
var i__32449_32453 = (0);
while(true){
if((i__32449_32453 < count__32448_32452)){
var coll_32454 = chunk__32447_32451.cljs$core$IIndexed$_nth$arity$2(null,i__32449_32453);
iters.push(cljs.core.iter(coll_32454));

var G__32455 = seq__32446_32450;
var G__32456 = chunk__32447_32451;
var G__32457 = count__32448_32452;
var G__32458 = (i__32449_32453 + (1));
seq__32446_32450 = G__32455;
chunk__32447_32451 = G__32456;
count__32448_32452 = G__32457;
i__32449_32453 = G__32458;
continue;
} else {
var temp__4126__auto___32459 = cljs.core.seq(seq__32446_32450);
if(temp__4126__auto___32459){
var seq__32446_32460__$1 = temp__4126__auto___32459;
if(cljs.core.chunked_seq_QMARK_(seq__32446_32460__$1)){
var c__4563__auto___32461 = cljs.core.chunk_first(seq__32446_32460__$1);
var G__32462 = cljs.core.chunk_rest(seq__32446_32460__$1);
var G__32463 = c__4563__auto___32461;
var G__32464 = cljs.core.count(c__4563__auto___32461);
var G__32465 = (0);
seq__32446_32450 = G__32462;
chunk__32447_32451 = G__32463;
count__32448_32452 = G__32464;
i__32449_32453 = G__32465;
continue;
} else {
var coll_32466 = cljs.core.first(seq__32446_32460__$1);
iters.push(cljs.core.iter(coll_32466));

var G__32467 = cljs.core.next(seq__32446_32460__$1);
var G__32468 = null;
var G__32469 = (0);
var G__32470 = (0);
seq__32446_32450 = G__32467;
chunk__32447_32451 = G__32468;
count__32448_32452 = G__32469;
i__32449_32453 = G__32470;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3776__auto__ = cljs.core.seq(coll);
if(or__3776__auto__){
return or__3776__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__32471__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__32471 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__32472__i = 0, G__32472__a = new Array(arguments.length -  2);
while (G__32472__i < G__32472__a.length) {G__32472__a[G__32472__i] = arguments[G__32472__i + 2]; ++G__32472__i;}
  colls = new cljs.core.IndexedSeq(G__32472__a,0);
} 
return G__32471__delegate.call(this,xform,coll,colls);};
G__32471.cljs$lang$maxFixedArity = 2;
G__32471.cljs$lang$applyTo = (function (arglist__32473){
var xform = cljs.core.first(arglist__32473);
arglist__32473 = cljs.core.next(arglist__32473);
var coll = cljs.core.first(arglist__32473);
var colls = cljs.core.rest(arglist__32473);
return G__32471__delegate(xform,coll,colls);
});
G__32471.cljs$core$IFn$_invoke$arity$variadic = G__32471__delegate;
return G__32471;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__32474 = null;
if (arguments.length > 2) {
var G__32475__i = 0, G__32475__a = new Array(arguments.length -  2);
while (G__32475__i < G__32475__a.length) {G__32475__a[G__32475__i] = arguments[G__32475__i + 2]; ++G__32475__i;}
G__32474 = new cljs.core.IndexedSeq(G__32475__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__32474);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__32477 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__32477) : pred.call(null,G__32477));
})())){
var G__32478 = pred;
var G__32479 = cljs.core.next(coll);
pred = G__32478;
coll = G__32479;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3776__auto__ = (function (){var G__32483 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__32483) : pred.call(null,G__32483));
})();
if(cljs.core.truth_(or__3776__auto__)){
return or__3776__auto__;
} else {
var G__32484 = pred;
var G__32485 = cljs.core.next(coll);
pred = G__32484;
coll = G__32485;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__32492 = null;
var G__32492__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__32492__1 = (function (x){
return cljs.core.not((function (){var G__32489 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32489) : f.call(null,G__32489));
})());
});
var G__32492__2 = (function (x,y){
return cljs.core.not((function (){var G__32490 = x;
var G__32491 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32490,G__32491) : f.call(null,G__32490,G__32491));
})());
});
var G__32492__3 = (function() { 
var G__32493__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__32493 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__32494__i = 0, G__32494__a = new Array(arguments.length -  2);
while (G__32494__i < G__32494__a.length) {G__32494__a[G__32494__i] = arguments[G__32494__i + 2]; ++G__32494__i;}
  zs = new cljs.core.IndexedSeq(G__32494__a,0);
} 
return G__32493__delegate.call(this,x,y,zs);};
G__32493.cljs$lang$maxFixedArity = 2;
G__32493.cljs$lang$applyTo = (function (arglist__32495){
var x = cljs.core.first(arglist__32495);
arglist__32495 = cljs.core.next(arglist__32495);
var y = cljs.core.first(arglist__32495);
var zs = cljs.core.rest(arglist__32495);
return G__32493__delegate(x,y,zs);
});
G__32493.cljs$core$IFn$_invoke$arity$variadic = G__32493__delegate;
return G__32493;
})()
;
G__32492 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__32492__0.call(this);
case 1:
return G__32492__1.call(this,x);
case 2:
return G__32492__2.call(this,x,y);
default:
var G__32496 = null;
if (arguments.length > 2) {
var G__32497__i = 0, G__32497__a = new Array(arguments.length -  2);
while (G__32497__i < G__32497__a.length) {G__32497__a[G__32497__i] = arguments[G__32497__i + 2]; ++G__32497__i;}
G__32496 = new cljs.core.IndexedSeq(G__32497__a,0);
}
return G__32492__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32496);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32492.cljs$lang$maxFixedArity = 2;
G__32492.cljs$lang$applyTo = G__32492__3.cljs$lang$applyTo;
G__32492.cljs$core$IFn$_invoke$arity$0 = G__32492__0;
G__32492.cljs$core$IFn$_invoke$arity$1 = G__32492__1;
G__32492.cljs$core$IFn$_invoke$arity$2 = G__32492__2;
G__32492.cljs$core$IFn$_invoke$arity$variadic = G__32492__3.cljs$core$IFn$_invoke$arity$variadic;
return G__32492;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__32498__delegate = function (args){
return x;
};
var G__32498 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__32499__i = 0, G__32499__a = new Array(arguments.length -  0);
while (G__32499__i < G__32499__a.length) {G__32499__a[G__32499__i] = arguments[G__32499__i + 0]; ++G__32499__i;}
  args = new cljs.core.IndexedSeq(G__32499__a,0);
} 
return G__32498__delegate.call(this,args);};
G__32498.cljs$lang$maxFixedArity = 0;
G__32498.cljs$lang$applyTo = (function (arglist__32500){
var args = cljs.core.seq(arglist__32500);
return G__32498__delegate(args);
});
G__32498.cljs$core$IFn$_invoke$arity$variadic = G__32498__delegate;
return G__32498;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__32555 = null;
var G__32555__0 = (function (){
var G__32528 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32528) : f.call(null,G__32528));
});
var G__32555__1 = (function (x){
var G__32529 = (function (){var G__32530 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__32530) : g.call(null,G__32530));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32529) : f.call(null,G__32529));
});
var G__32555__2 = (function (x,y){
var G__32531 = (function (){var G__32532 = x;
var G__32533 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__32532,G__32533) : g.call(null,G__32532,G__32533));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32531) : f.call(null,G__32531));
});
var G__32555__3 = (function (x,y,z){
var G__32534 = (function (){var G__32535 = x;
var G__32536 = y;
var G__32537 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__32535,G__32536,G__32537) : g.call(null,G__32535,G__32536,G__32537));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32534) : f.call(null,G__32534));
});
var G__32555__4 = (function() { 
var G__32556__delegate = function (x,y,z,args){
var G__32538 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32538) : f.call(null,G__32538));
};
var G__32556 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__32557__i = 0, G__32557__a = new Array(arguments.length -  3);
while (G__32557__i < G__32557__a.length) {G__32557__a[G__32557__i] = arguments[G__32557__i + 3]; ++G__32557__i;}
  args = new cljs.core.IndexedSeq(G__32557__a,0);
} 
return G__32556__delegate.call(this,x,y,z,args);};
G__32556.cljs$lang$maxFixedArity = 3;
G__32556.cljs$lang$applyTo = (function (arglist__32558){
var x = cljs.core.first(arglist__32558);
arglist__32558 = cljs.core.next(arglist__32558);
var y = cljs.core.first(arglist__32558);
arglist__32558 = cljs.core.next(arglist__32558);
var z = cljs.core.first(arglist__32558);
var args = cljs.core.rest(arglist__32558);
return G__32556__delegate(x,y,z,args);
});
G__32556.cljs$core$IFn$_invoke$arity$variadic = G__32556__delegate;
return G__32556;
})()
;
G__32555 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__32555__0.call(this);
case 1:
return G__32555__1.call(this,x);
case 2:
return G__32555__2.call(this,x,y);
case 3:
return G__32555__3.call(this,x,y,z);
default:
var G__32559 = null;
if (arguments.length > 3) {
var G__32560__i = 0, G__32560__a = new Array(arguments.length -  3);
while (G__32560__i < G__32560__a.length) {G__32560__a[G__32560__i] = arguments[G__32560__i + 3]; ++G__32560__i;}
G__32559 = new cljs.core.IndexedSeq(G__32560__a,0);
}
return G__32555__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__32559);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32555.cljs$lang$maxFixedArity = 3;
G__32555.cljs$lang$applyTo = G__32555__4.cljs$lang$applyTo;
G__32555.cljs$core$IFn$_invoke$arity$0 = G__32555__0;
G__32555.cljs$core$IFn$_invoke$arity$1 = G__32555__1;
G__32555.cljs$core$IFn$_invoke$arity$2 = G__32555__2;
G__32555.cljs$core$IFn$_invoke$arity$3 = G__32555__3;
G__32555.cljs$core$IFn$_invoke$arity$variadic = G__32555__4.cljs$core$IFn$_invoke$arity$variadic;
return G__32555;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__32561 = null;
var G__32561__0 = (function (){
var G__32539 = (function (){var G__32540 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__32540) : g.call(null,G__32540));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32539) : f.call(null,G__32539));
});
var G__32561__1 = (function (x){
var G__32541 = (function (){var G__32542 = (function (){var G__32543 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__32543) : h.call(null,G__32543));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__32542) : g.call(null,G__32542));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32541) : f.call(null,G__32541));
});
var G__32561__2 = (function (x,y){
var G__32544 = (function (){var G__32545 = (function (){var G__32546 = x;
var G__32547 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__32546,G__32547) : h.call(null,G__32546,G__32547));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__32545) : g.call(null,G__32545));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32544) : f.call(null,G__32544));
});
var G__32561__3 = (function (x,y,z){
var G__32548 = (function (){var G__32549 = (function (){var G__32550 = x;
var G__32551 = y;
var G__32552 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__32550,G__32551,G__32552) : h.call(null,G__32550,G__32551,G__32552));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__32549) : g.call(null,G__32549));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32548) : f.call(null,G__32548));
});
var G__32561__4 = (function() { 
var G__32562__delegate = function (x,y,z,args){
var G__32553 = (function (){var G__32554 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__32554) : g.call(null,G__32554));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32553) : f.call(null,G__32553));
};
var G__32562 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__32563__i = 0, G__32563__a = new Array(arguments.length -  3);
while (G__32563__i < G__32563__a.length) {G__32563__a[G__32563__i] = arguments[G__32563__i + 3]; ++G__32563__i;}
  args = new cljs.core.IndexedSeq(G__32563__a,0);
} 
return G__32562__delegate.call(this,x,y,z,args);};
G__32562.cljs$lang$maxFixedArity = 3;
G__32562.cljs$lang$applyTo = (function (arglist__32564){
var x = cljs.core.first(arglist__32564);
arglist__32564 = cljs.core.next(arglist__32564);
var y = cljs.core.first(arglist__32564);
arglist__32564 = cljs.core.next(arglist__32564);
var z = cljs.core.first(arglist__32564);
var args = cljs.core.rest(arglist__32564);
return G__32562__delegate(x,y,z,args);
});
G__32562.cljs$core$IFn$_invoke$arity$variadic = G__32562__delegate;
return G__32562;
})()
;
G__32561 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__32561__0.call(this);
case 1:
return G__32561__1.call(this,x);
case 2:
return G__32561__2.call(this,x,y);
case 3:
return G__32561__3.call(this,x,y,z);
default:
var G__32565 = null;
if (arguments.length > 3) {
var G__32566__i = 0, G__32566__a = new Array(arguments.length -  3);
while (G__32566__i < G__32566__a.length) {G__32566__a[G__32566__i] = arguments[G__32566__i + 3]; ++G__32566__i;}
G__32565 = new cljs.core.IndexedSeq(G__32566__a,0);
}
return G__32561__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__32565);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32561.cljs$lang$maxFixedArity = 3;
G__32561.cljs$lang$applyTo = G__32561__4.cljs$lang$applyTo;
G__32561.cljs$core$IFn$_invoke$arity$0 = G__32561__0;
G__32561.cljs$core$IFn$_invoke$arity$1 = G__32561__1;
G__32561.cljs$core$IFn$_invoke$arity$2 = G__32561__2;
G__32561.cljs$core$IFn$_invoke$arity$3 = G__32561__3;
G__32561.cljs$core$IFn$_invoke$arity$variadic = G__32561__4.cljs$core$IFn$_invoke$arity$variadic;
return G__32561;
})()
});
var comp__4 = (function() { 
var G__32567__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__32568__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__32569 = cljs.core.first(fs__$2).call(null,ret);
var G__32570 = cljs.core.next(fs__$2);
ret = G__32569;
fs__$2 = G__32570;
continue;
} else {
return ret;
}
break;
}
};
var G__32568 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__32571__i = 0, G__32571__a = new Array(arguments.length -  0);
while (G__32571__i < G__32571__a.length) {G__32571__a[G__32571__i] = arguments[G__32571__i + 0]; ++G__32571__i;}
  args = new cljs.core.IndexedSeq(G__32571__a,0);
} 
return G__32568__delegate.call(this,args);};
G__32568.cljs$lang$maxFixedArity = 0;
G__32568.cljs$lang$applyTo = (function (arglist__32572){
var args = cljs.core.seq(arglist__32572);
return G__32568__delegate(args);
});
G__32568.cljs$core$IFn$_invoke$arity$variadic = G__32568__delegate;
return G__32568;
})()
;
;})(fs__$1))
};
var G__32567 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__32573__i = 0, G__32573__a = new Array(arguments.length -  3);
while (G__32573__i < G__32573__a.length) {G__32573__a[G__32573__i] = arguments[G__32573__i + 3]; ++G__32573__i;}
  fs = new cljs.core.IndexedSeq(G__32573__a,0);
} 
return G__32567__delegate.call(this,f1,f2,f3,fs);};
G__32567.cljs$lang$maxFixedArity = 3;
G__32567.cljs$lang$applyTo = (function (arglist__32574){
var f1 = cljs.core.first(arglist__32574);
arglist__32574 = cljs.core.next(arglist__32574);
var f2 = cljs.core.first(arglist__32574);
arglist__32574 = cljs.core.next(arglist__32574);
var f3 = cljs.core.first(arglist__32574);
var fs = cljs.core.rest(arglist__32574);
return G__32567__delegate(f1,f2,f3,fs);
});
G__32567.cljs$core$IFn$_invoke$arity$variadic = G__32567__delegate;
return G__32567;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__32575 = null;
if (arguments.length > 3) {
var G__32576__i = 0, G__32576__a = new Array(arguments.length -  3);
while (G__32576__i < G__32576__a.length) {G__32576__a[G__32576__i] = arguments[G__32576__i + 3]; ++G__32576__i;}
G__32575 = new cljs.core.IndexedSeq(G__32576__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__32575);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__32661 = null;
var G__32661__0 = (function (){
var G__32619 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32619) : f.call(null,G__32619));
});
var G__32661__1 = (function (x){
var G__32620 = arg1;
var G__32621 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32620,G__32621) : f.call(null,G__32620,G__32621));
});
var G__32661__2 = (function (x,y){
var G__32622 = arg1;
var G__32623 = x;
var G__32624 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__32622,G__32623,G__32624) : f.call(null,G__32622,G__32623,G__32624));
});
var G__32661__3 = (function (x,y,z){
var G__32625 = arg1;
var G__32626 = x;
var G__32627 = y;
var G__32628 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__32625,G__32626,G__32627,G__32628) : f.call(null,G__32625,G__32626,G__32627,G__32628));
});
var G__32661__4 = (function() { 
var G__32662__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__32662 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__32663__i = 0, G__32663__a = new Array(arguments.length -  3);
while (G__32663__i < G__32663__a.length) {G__32663__a[G__32663__i] = arguments[G__32663__i + 3]; ++G__32663__i;}
  args = new cljs.core.IndexedSeq(G__32663__a,0);
} 
return G__32662__delegate.call(this,x,y,z,args);};
G__32662.cljs$lang$maxFixedArity = 3;
G__32662.cljs$lang$applyTo = (function (arglist__32664){
var x = cljs.core.first(arglist__32664);
arglist__32664 = cljs.core.next(arglist__32664);
var y = cljs.core.first(arglist__32664);
arglist__32664 = cljs.core.next(arglist__32664);
var z = cljs.core.first(arglist__32664);
var args = cljs.core.rest(arglist__32664);
return G__32662__delegate(x,y,z,args);
});
G__32662.cljs$core$IFn$_invoke$arity$variadic = G__32662__delegate;
return G__32662;
})()
;
G__32661 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__32661__0.call(this);
case 1:
return G__32661__1.call(this,x);
case 2:
return G__32661__2.call(this,x,y);
case 3:
return G__32661__3.call(this,x,y,z);
default:
var G__32665 = null;
if (arguments.length > 3) {
var G__32666__i = 0, G__32666__a = new Array(arguments.length -  3);
while (G__32666__i < G__32666__a.length) {G__32666__a[G__32666__i] = arguments[G__32666__i + 3]; ++G__32666__i;}
G__32665 = new cljs.core.IndexedSeq(G__32666__a,0);
}
return G__32661__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__32665);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32661.cljs$lang$maxFixedArity = 3;
G__32661.cljs$lang$applyTo = G__32661__4.cljs$lang$applyTo;
G__32661.cljs$core$IFn$_invoke$arity$0 = G__32661__0;
G__32661.cljs$core$IFn$_invoke$arity$1 = G__32661__1;
G__32661.cljs$core$IFn$_invoke$arity$2 = G__32661__2;
G__32661.cljs$core$IFn$_invoke$arity$3 = G__32661__3;
G__32661.cljs$core$IFn$_invoke$arity$variadic = G__32661__4.cljs$core$IFn$_invoke$arity$variadic;
return G__32661;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__32667 = null;
var G__32667__0 = (function (){
var G__32629 = arg1;
var G__32630 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32629,G__32630) : f.call(null,G__32629,G__32630));
});
var G__32667__1 = (function (x){
var G__32631 = arg1;
var G__32632 = arg2;
var G__32633 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__32631,G__32632,G__32633) : f.call(null,G__32631,G__32632,G__32633));
});
var G__32667__2 = (function (x,y){
var G__32634 = arg1;
var G__32635 = arg2;
var G__32636 = x;
var G__32637 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__32634,G__32635,G__32636,G__32637) : f.call(null,G__32634,G__32635,G__32636,G__32637));
});
var G__32667__3 = (function (x,y,z){
var G__32638 = arg1;
var G__32639 = arg2;
var G__32640 = x;
var G__32641 = y;
var G__32642 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__32638,G__32639,G__32640,G__32641,G__32642) : f.call(null,G__32638,G__32639,G__32640,G__32641,G__32642));
});
var G__32667__4 = (function() { 
var G__32668__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__32668 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__32669__i = 0, G__32669__a = new Array(arguments.length -  3);
while (G__32669__i < G__32669__a.length) {G__32669__a[G__32669__i] = arguments[G__32669__i + 3]; ++G__32669__i;}
  args = new cljs.core.IndexedSeq(G__32669__a,0);
} 
return G__32668__delegate.call(this,x,y,z,args);};
G__32668.cljs$lang$maxFixedArity = 3;
G__32668.cljs$lang$applyTo = (function (arglist__32670){
var x = cljs.core.first(arglist__32670);
arglist__32670 = cljs.core.next(arglist__32670);
var y = cljs.core.first(arglist__32670);
arglist__32670 = cljs.core.next(arglist__32670);
var z = cljs.core.first(arglist__32670);
var args = cljs.core.rest(arglist__32670);
return G__32668__delegate(x,y,z,args);
});
G__32668.cljs$core$IFn$_invoke$arity$variadic = G__32668__delegate;
return G__32668;
})()
;
G__32667 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__32667__0.call(this);
case 1:
return G__32667__1.call(this,x);
case 2:
return G__32667__2.call(this,x,y);
case 3:
return G__32667__3.call(this,x,y,z);
default:
var G__32671 = null;
if (arguments.length > 3) {
var G__32672__i = 0, G__32672__a = new Array(arguments.length -  3);
while (G__32672__i < G__32672__a.length) {G__32672__a[G__32672__i] = arguments[G__32672__i + 3]; ++G__32672__i;}
G__32671 = new cljs.core.IndexedSeq(G__32672__a,0);
}
return G__32667__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__32671);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32667.cljs$lang$maxFixedArity = 3;
G__32667.cljs$lang$applyTo = G__32667__4.cljs$lang$applyTo;
G__32667.cljs$core$IFn$_invoke$arity$0 = G__32667__0;
G__32667.cljs$core$IFn$_invoke$arity$1 = G__32667__1;
G__32667.cljs$core$IFn$_invoke$arity$2 = G__32667__2;
G__32667.cljs$core$IFn$_invoke$arity$3 = G__32667__3;
G__32667.cljs$core$IFn$_invoke$arity$variadic = G__32667__4.cljs$core$IFn$_invoke$arity$variadic;
return G__32667;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__32673 = null;
var G__32673__0 = (function (){
var G__32643 = arg1;
var G__32644 = arg2;
var G__32645 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__32643,G__32644,G__32645) : f.call(null,G__32643,G__32644,G__32645));
});
var G__32673__1 = (function (x){
var G__32646 = arg1;
var G__32647 = arg2;
var G__32648 = arg3;
var G__32649 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__32646,G__32647,G__32648,G__32649) : f.call(null,G__32646,G__32647,G__32648,G__32649));
});
var G__32673__2 = (function (x,y){
var G__32650 = arg1;
var G__32651 = arg2;
var G__32652 = arg3;
var G__32653 = x;
var G__32654 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__32650,G__32651,G__32652,G__32653,G__32654) : f.call(null,G__32650,G__32651,G__32652,G__32653,G__32654));
});
var G__32673__3 = (function (x,y,z){
var G__32655 = arg1;
var G__32656 = arg2;
var G__32657 = arg3;
var G__32658 = x;
var G__32659 = y;
var G__32660 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__32655,G__32656,G__32657,G__32658,G__32659,G__32660) : f.call(null,G__32655,G__32656,G__32657,G__32658,G__32659,G__32660));
});
var G__32673__4 = (function() { 
var G__32674__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__32674 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__32675__i = 0, G__32675__a = new Array(arguments.length -  3);
while (G__32675__i < G__32675__a.length) {G__32675__a[G__32675__i] = arguments[G__32675__i + 3]; ++G__32675__i;}
  args = new cljs.core.IndexedSeq(G__32675__a,0);
} 
return G__32674__delegate.call(this,x,y,z,args);};
G__32674.cljs$lang$maxFixedArity = 3;
G__32674.cljs$lang$applyTo = (function (arglist__32676){
var x = cljs.core.first(arglist__32676);
arglist__32676 = cljs.core.next(arglist__32676);
var y = cljs.core.first(arglist__32676);
arglist__32676 = cljs.core.next(arglist__32676);
var z = cljs.core.first(arglist__32676);
var args = cljs.core.rest(arglist__32676);
return G__32674__delegate(x,y,z,args);
});
G__32674.cljs$core$IFn$_invoke$arity$variadic = G__32674__delegate;
return G__32674;
})()
;
G__32673 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__32673__0.call(this);
case 1:
return G__32673__1.call(this,x);
case 2:
return G__32673__2.call(this,x,y);
case 3:
return G__32673__3.call(this,x,y,z);
default:
var G__32677 = null;
if (arguments.length > 3) {
var G__32678__i = 0, G__32678__a = new Array(arguments.length -  3);
while (G__32678__i < G__32678__a.length) {G__32678__a[G__32678__i] = arguments[G__32678__i + 3]; ++G__32678__i;}
G__32677 = new cljs.core.IndexedSeq(G__32678__a,0);
}
return G__32673__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__32677);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32673.cljs$lang$maxFixedArity = 3;
G__32673.cljs$lang$applyTo = G__32673__4.cljs$lang$applyTo;
G__32673.cljs$core$IFn$_invoke$arity$0 = G__32673__0;
G__32673.cljs$core$IFn$_invoke$arity$1 = G__32673__1;
G__32673.cljs$core$IFn$_invoke$arity$2 = G__32673__2;
G__32673.cljs$core$IFn$_invoke$arity$3 = G__32673__3;
G__32673.cljs$core$IFn$_invoke$arity$variadic = G__32673__4.cljs$core$IFn$_invoke$arity$variadic;
return G__32673;
})()
});
var partial__5 = (function() { 
var G__32679__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__32680__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__32680 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__32681__i = 0, G__32681__a = new Array(arguments.length -  0);
while (G__32681__i < G__32681__a.length) {G__32681__a[G__32681__i] = arguments[G__32681__i + 0]; ++G__32681__i;}
  args = new cljs.core.IndexedSeq(G__32681__a,0);
} 
return G__32680__delegate.call(this,args);};
G__32680.cljs$lang$maxFixedArity = 0;
G__32680.cljs$lang$applyTo = (function (arglist__32682){
var args = cljs.core.seq(arglist__32682);
return G__32680__delegate(args);
});
G__32680.cljs$core$IFn$_invoke$arity$variadic = G__32680__delegate;
return G__32680;
})()
;
};
var G__32679 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__32683__i = 0, G__32683__a = new Array(arguments.length -  4);
while (G__32683__i < G__32683__a.length) {G__32683__a[G__32683__i] = arguments[G__32683__i + 4]; ++G__32683__i;}
  more = new cljs.core.IndexedSeq(G__32683__a,0);
} 
return G__32679__delegate.call(this,f,arg1,arg2,arg3,more);};
G__32679.cljs$lang$maxFixedArity = 4;
G__32679.cljs$lang$applyTo = (function (arglist__32684){
var f = cljs.core.first(arglist__32684);
arglist__32684 = cljs.core.next(arglist__32684);
var arg1 = cljs.core.first(arglist__32684);
arglist__32684 = cljs.core.next(arglist__32684);
var arg2 = cljs.core.first(arglist__32684);
arglist__32684 = cljs.core.next(arglist__32684);
var arg3 = cljs.core.first(arglist__32684);
var more = cljs.core.rest(arglist__32684);
return G__32679__delegate(f,arg1,arg2,arg3,more);
});
G__32679.cljs$core$IFn$_invoke$arity$variadic = G__32679__delegate;
return G__32679;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__32685 = null;
if (arguments.length > 4) {
var G__32686__i = 0, G__32686__a = new Array(arguments.length -  4);
while (G__32686__i < G__32686__a.length) {G__32686__a[G__32686__i] = arguments[G__32686__i + 4]; ++G__32686__i;}
G__32685 = new cljs.core.IndexedSeq(G__32686__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__32685);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__32719 = null;
var G__32719__1 = (function (a){
var G__32703 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32703) : f.call(null,G__32703));
});
var G__32719__2 = (function (a,b){
var G__32704 = (((a == null))?x:a);
var G__32705 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32704,G__32705) : f.call(null,G__32704,G__32705));
});
var G__32719__3 = (function (a,b,c){
var G__32706 = (((a == null))?x:a);
var G__32707 = b;
var G__32708 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__32706,G__32707,G__32708) : f.call(null,G__32706,G__32707,G__32708));
});
var G__32719__4 = (function() { 
var G__32720__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__32720 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__32721__i = 0, G__32721__a = new Array(arguments.length -  3);
while (G__32721__i < G__32721__a.length) {G__32721__a[G__32721__i] = arguments[G__32721__i + 3]; ++G__32721__i;}
  ds = new cljs.core.IndexedSeq(G__32721__a,0);
} 
return G__32720__delegate.call(this,a,b,c,ds);};
G__32720.cljs$lang$maxFixedArity = 3;
G__32720.cljs$lang$applyTo = (function (arglist__32722){
var a = cljs.core.first(arglist__32722);
arglist__32722 = cljs.core.next(arglist__32722);
var b = cljs.core.first(arglist__32722);
arglist__32722 = cljs.core.next(arglist__32722);
var c = cljs.core.first(arglist__32722);
var ds = cljs.core.rest(arglist__32722);
return G__32720__delegate(a,b,c,ds);
});
G__32720.cljs$core$IFn$_invoke$arity$variadic = G__32720__delegate;
return G__32720;
})()
;
G__32719 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__32719__1.call(this,a);
case 2:
return G__32719__2.call(this,a,b);
case 3:
return G__32719__3.call(this,a,b,c);
default:
var G__32723 = null;
if (arguments.length > 3) {
var G__32724__i = 0, G__32724__a = new Array(arguments.length -  3);
while (G__32724__i < G__32724__a.length) {G__32724__a[G__32724__i] = arguments[G__32724__i + 3]; ++G__32724__i;}
G__32723 = new cljs.core.IndexedSeq(G__32724__a,0);
}
return G__32719__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__32723);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32719.cljs$lang$maxFixedArity = 3;
G__32719.cljs$lang$applyTo = G__32719__4.cljs$lang$applyTo;
G__32719.cljs$core$IFn$_invoke$arity$1 = G__32719__1;
G__32719.cljs$core$IFn$_invoke$arity$2 = G__32719__2;
G__32719.cljs$core$IFn$_invoke$arity$3 = G__32719__3;
G__32719.cljs$core$IFn$_invoke$arity$variadic = G__32719__4.cljs$core$IFn$_invoke$arity$variadic;
return G__32719;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__32725 = null;
var G__32725__2 = (function (a,b){
var G__32709 = (((a == null))?x:a);
var G__32710 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32709,G__32710) : f.call(null,G__32709,G__32710));
});
var G__32725__3 = (function (a,b,c){
var G__32711 = (((a == null))?x:a);
var G__32712 = (((b == null))?y:b);
var G__32713 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__32711,G__32712,G__32713) : f.call(null,G__32711,G__32712,G__32713));
});
var G__32725__4 = (function() { 
var G__32726__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__32726 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__32727__i = 0, G__32727__a = new Array(arguments.length -  3);
while (G__32727__i < G__32727__a.length) {G__32727__a[G__32727__i] = arguments[G__32727__i + 3]; ++G__32727__i;}
  ds = new cljs.core.IndexedSeq(G__32727__a,0);
} 
return G__32726__delegate.call(this,a,b,c,ds);};
G__32726.cljs$lang$maxFixedArity = 3;
G__32726.cljs$lang$applyTo = (function (arglist__32728){
var a = cljs.core.first(arglist__32728);
arglist__32728 = cljs.core.next(arglist__32728);
var b = cljs.core.first(arglist__32728);
arglist__32728 = cljs.core.next(arglist__32728);
var c = cljs.core.first(arglist__32728);
var ds = cljs.core.rest(arglist__32728);
return G__32726__delegate(a,b,c,ds);
});
G__32726.cljs$core$IFn$_invoke$arity$variadic = G__32726__delegate;
return G__32726;
})()
;
G__32725 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__32725__2.call(this,a,b);
case 3:
return G__32725__3.call(this,a,b,c);
default:
var G__32729 = null;
if (arguments.length > 3) {
var G__32730__i = 0, G__32730__a = new Array(arguments.length -  3);
while (G__32730__i < G__32730__a.length) {G__32730__a[G__32730__i] = arguments[G__32730__i + 3]; ++G__32730__i;}
G__32729 = new cljs.core.IndexedSeq(G__32730__a,0);
}
return G__32725__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__32729);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32725.cljs$lang$maxFixedArity = 3;
G__32725.cljs$lang$applyTo = G__32725__4.cljs$lang$applyTo;
G__32725.cljs$core$IFn$_invoke$arity$2 = G__32725__2;
G__32725.cljs$core$IFn$_invoke$arity$3 = G__32725__3;
G__32725.cljs$core$IFn$_invoke$arity$variadic = G__32725__4.cljs$core$IFn$_invoke$arity$variadic;
return G__32725;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__32731 = null;
var G__32731__2 = (function (a,b){
var G__32714 = (((a == null))?x:a);
var G__32715 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32714,G__32715) : f.call(null,G__32714,G__32715));
});
var G__32731__3 = (function (a,b,c){
var G__32716 = (((a == null))?x:a);
var G__32717 = (((b == null))?y:b);
var G__32718 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__32716,G__32717,G__32718) : f.call(null,G__32716,G__32717,G__32718));
});
var G__32731__4 = (function() { 
var G__32732__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__32732 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__32733__i = 0, G__32733__a = new Array(arguments.length -  3);
while (G__32733__i < G__32733__a.length) {G__32733__a[G__32733__i] = arguments[G__32733__i + 3]; ++G__32733__i;}
  ds = new cljs.core.IndexedSeq(G__32733__a,0);
} 
return G__32732__delegate.call(this,a,b,c,ds);};
G__32732.cljs$lang$maxFixedArity = 3;
G__32732.cljs$lang$applyTo = (function (arglist__32734){
var a = cljs.core.first(arglist__32734);
arglist__32734 = cljs.core.next(arglist__32734);
var b = cljs.core.first(arglist__32734);
arglist__32734 = cljs.core.next(arglist__32734);
var c = cljs.core.first(arglist__32734);
var ds = cljs.core.rest(arglist__32734);
return G__32732__delegate(a,b,c,ds);
});
G__32732.cljs$core$IFn$_invoke$arity$variadic = G__32732__delegate;
return G__32732;
})()
;
G__32731 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__32731__2.call(this,a,b);
case 3:
return G__32731__3.call(this,a,b,c);
default:
var G__32735 = null;
if (arguments.length > 3) {
var G__32736__i = 0, G__32736__a = new Array(arguments.length -  3);
while (G__32736__i < G__32736__a.length) {G__32736__a[G__32736__i] = arguments[G__32736__i + 3]; ++G__32736__i;}
G__32735 = new cljs.core.IndexedSeq(G__32736__a,0);
}
return G__32731__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__32735);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32731.cljs$lang$maxFixedArity = 3;
G__32731.cljs$lang$applyTo = G__32731__4.cljs$lang$applyTo;
G__32731.cljs$core$IFn$_invoke$arity$2 = G__32731__2;
G__32731.cljs$core$IFn$_invoke$arity$3 = G__32731__3;
G__32731.cljs$core$IFn$_invoke$arity$variadic = G__32731__4.cljs$core$IFn$_invoke$arity$variadic;
return G__32731;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__32767 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__32767) : cljs.core.volatile_BANG_.call(null,G__32767));
})();
return ((function (i){
return (function() {
var G__32797 = null;
var G__32797__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__32797__1 = (function (result){
var G__32768 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__32768) : rf.call(null,G__32768));
});
var G__32797__2 = (function (result,input){
var G__32769 = result;
var G__32770 = (function (){var G__32771 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__32772 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32771,G__32772) : f.call(null,G__32771,G__32772));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__32769,G__32770) : rf.call(null,G__32769,G__32770));
});
G__32797 = function(result,input){
switch(arguments.length){
case 0:
return G__32797__0.call(this);
case 1:
return G__32797__1.call(this,result);
case 2:
return G__32797__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32797.cljs$core$IFn$_invoke$arity$0 = G__32797__0;
G__32797.cljs$core$IFn$_invoke$arity$1 = G__32797__1;
G__32797.cljs$core$IFn$_invoke$arity$2 = G__32797__2;
return G__32797;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4663__auto___32798 = size;
var i_32799 = (0);
while(true){
if((i_32799 < n__4663__auto___32798)){
cljs.core.chunk_append(b,(function (){var G__32793 = (idx + i_32799);
var G__32794 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_32799);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32793,G__32794) : f.call(null,G__32793,G__32794));
})());

var G__32800 = (i_32799 + (1));
i_32799 = G__32800;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__32795 = idx;
var G__32796 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32795,G__32796) : f.call(null,G__32795,G__32796));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__32819 = null;
var G__32819__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__32819__1 = (function (result){
var G__32813 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__32813) : rf.call(null,G__32813));
});
var G__32819__2 = (function (result,input){
var v = (function (){var G__32814 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32814) : f.call(null,G__32814));
})();
if((v == null)){
return result;
} else {
var G__32815 = result;
var G__32816 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__32815,G__32816) : rf.call(null,G__32815,G__32816));
}
});
G__32819 = function(result,input){
switch(arguments.length){
case 0:
return G__32819__0.call(this);
case 1:
return G__32819__1.call(this,result);
case 2:
return G__32819__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32819.cljs$core$IFn$_invoke$arity$0 = G__32819__0;
G__32819.cljs$core$IFn$_invoke$arity$1 = G__32819__1;
G__32819.cljs$core$IFn$_invoke$arity$2 = G__32819__2;
return G__32819;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4663__auto___32820 = size;
var i_32821 = (0);
while(true){
if((i_32821 < n__4663__auto___32820)){
var x_32822 = (function (){var G__32817 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_32821);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32817) : f.call(null,G__32817));
})();
if((x_32822 == null)){
} else {
cljs.core.chunk_append(b,x_32822);
}

var G__32823 = (i_32821 + (1));
i_32821 = G__32823;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__32818 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32818) : f.call(null,G__32818));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__32824 = this$__$1;
return goog.getUid(G__32824);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__32825 = cljs.core.seq(self__.watches);
var chunk__32826 = null;
var count__32827 = (0);
var i__32828 = (0);
while(true){
if((i__32828 < count__32827)){
var vec__32829 = chunk__32826.cljs$core$IIndexed$_nth$arity$2(null,i__32828);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32829,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32829,(1),null);
var G__32830_32839 = key;
var G__32831_32840 = this$__$1;
var G__32832_32841 = oldval;
var G__32833_32842 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__32830_32839,G__32831_32840,G__32832_32841,G__32833_32842) : f.call(null,G__32830_32839,G__32831_32840,G__32832_32841,G__32833_32842));

var G__32843 = seq__32825;
var G__32844 = chunk__32826;
var G__32845 = count__32827;
var G__32846 = (i__32828 + (1));
seq__32825 = G__32843;
chunk__32826 = G__32844;
count__32827 = G__32845;
i__32828 = G__32846;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__32825);
if(temp__4126__auto__){
var seq__32825__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__32825__$1)){
var c__4563__auto__ = cljs.core.chunk_first(seq__32825__$1);
var G__32847 = cljs.core.chunk_rest(seq__32825__$1);
var G__32848 = c__4563__auto__;
var G__32849 = cljs.core.count(c__4563__auto__);
var G__32850 = (0);
seq__32825 = G__32847;
chunk__32826 = G__32848;
count__32827 = G__32849;
i__32828 = G__32850;
continue;
} else {
var vec__32834 = cljs.core.first(seq__32825__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32834,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32834,(1),null);
var G__32835_32851 = key;
var G__32836_32852 = this$__$1;
var G__32837_32853 = oldval;
var G__32838_32854 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__32835_32851,G__32836_32852,G__32837_32853,G__32838_32854) : f.call(null,G__32835_32851,G__32836_32852,G__32837_32853,G__32838_32854));

var G__32855 = cljs.core.next(seq__32825__$1);
var G__32856 = null;
var G__32857 = (0);
var G__32858 = (0);
seq__32825 = G__32855;
chunk__32826 = G__32856;
count__32827 = G__32857;
i__32828 = G__32858;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__32862__delegate = function (x,p__32859){
var map__32861 = p__32859;
var map__32861__$1 = ((cljs.core.seq_QMARK_(map__32861))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__32861):map__32861);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__32861__$1,cljs.core.constant$keyword$114);
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__32861__$1,cljs.core.constant$keyword$104);
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__32862 = function (x,var_args){
var p__32859 = null;
if (arguments.length > 1) {
var G__32863__i = 0, G__32863__a = new Array(arguments.length -  1);
while (G__32863__i < G__32863__a.length) {G__32863__a[G__32863__i] = arguments[G__32863__i + 1]; ++G__32863__i;}
  p__32859 = new cljs.core.IndexedSeq(G__32863__a,0);
} 
return G__32862__delegate.call(this,x,p__32859);};
G__32862.cljs$lang$maxFixedArity = 1;
G__32862.cljs$lang$applyTo = (function (arglist__32864){
var x = cljs.core.first(arglist__32864);
var p__32859 = cljs.core.rest(arglist__32864);
return G__32862__delegate(x,p__32859);
});
G__32862.cljs$core$IFn$_invoke$arity$variadic = G__32862__delegate;
return G__32862;
})()
;
atom = function(x,var_args){
var p__32859 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__32865 = null;
if (arguments.length > 1) {
var G__32866__i = 0, G__32866__a = new Array(arguments.length -  1);
while (G__32866__i < G__32866__a.length) {G__32866__a[G__32866__i] = arguments[G__32866__i + 1]; ++G__32866__i;}
G__32865 = new cljs.core.IndexedSeq(G__32866__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__32865);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__32873 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32873) : f.call(null,G__32873));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__32874 = a.state;
var G__32875 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32874,G__32875) : f.call(null,G__32874,G__32875));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__32876 = a.state;
var G__32877 = x;
var G__32878 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__32876,G__32877,G__32878) : f.call(null,G__32876,G__32877,G__32878));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__32879__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__32879 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__32880__i = 0, G__32880__a = new Array(arguments.length -  4);
while (G__32880__i < G__32880__a.length) {G__32880__a[G__32880__i] = arguments[G__32880__i + 4]; ++G__32880__i;}
  more = new cljs.core.IndexedSeq(G__32880__a,0);
} 
return G__32879__delegate.call(this,a,f,x,y,more);};
G__32879.cljs$lang$maxFixedArity = 4;
G__32879.cljs$lang$applyTo = (function (arglist__32881){
var a = cljs.core.first(arglist__32881);
arglist__32881 = cljs.core.next(arglist__32881);
var f = cljs.core.first(arglist__32881);
arglist__32881 = cljs.core.next(arglist__32881);
var x = cljs.core.first(arglist__32881);
arglist__32881 = cljs.core.next(arglist__32881);
var y = cljs.core.first(arglist__32881);
var more = cljs.core.rest(arglist__32881);
return G__32879__delegate(a,f,x,y,more);
});
G__32879.cljs$core$IFn$_invoke$arity$variadic = G__32879__delegate;
return G__32879;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__32882 = null;
if (arguments.length > 4) {
var G__32883__i = 0, G__32883__a = new Array(arguments.length -  4);
while (G__32883__i < G__32883__a.length) {G__32883__a[G__32883__i] = arguments[G__32883__i + 4]; ++G__32883__i;}
G__32882 = new cljs.core.IndexedSeq(G__32883__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__32882);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__32950 = null;
var G__32950__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__32950__1 = (function (result){
var G__32917 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__32917) : rf.call(null,G__32917));
});
var G__32950__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__32918 = i;
var G__32919 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32918,G__32919) : f.call(null,G__32918,G__32919));
})();
if((v == null)){
return result;
} else {
var G__32920 = result;
var G__32921 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__32920,G__32921) : rf.call(null,G__32920,G__32921));
}
});
G__32950 = function(result,input){
switch(arguments.length){
case 0:
return G__32950__0.call(this);
case 1:
return G__32950__1.call(this,result);
case 2:
return G__32950__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32950.cljs$core$IFn$_invoke$arity$0 = G__32950__0;
G__32950.cljs$core$IFn$_invoke$arity$1 = G__32950__1;
G__32950.cljs$core$IFn$_invoke$arity$2 = G__32950__2;
return G__32950;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4663__auto___32951 = size;
var i_32952 = (0);
while(true){
if((i_32952 < n__4663__auto___32951)){
var x_32953 = (function (){var G__32946 = (idx + i_32952);
var G__32947 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_32952);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32946,G__32947) : f.call(null,G__32946,G__32947));
})();
if((x_32953 == null)){
} else {
cljs.core.chunk_append(b,x_32953);
}

var G__32954 = (i_32952 + (1));
i_32952 = G__32954;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__32948 = idx;
var G__32949 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32948,G__32949) : f.call(null,G__32948,G__32949));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__33168 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__33168) : p.call(null,G__33168));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3764__auto__ = (function (){var G__33170 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__33170) : p.call(null,G__33170));
})();
if(cljs.core.truth_(and__3764__auto__)){
var G__33171 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__33171) : p.call(null,G__33171));
} else {
return and__3764__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3764__auto__ = (function (){var G__33173 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__33173) : p.call(null,G__33173));
})();
if(cljs.core.truth_(and__3764__auto__)){
var and__3764__auto____$1 = (function (){var G__33175 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__33175) : p.call(null,G__33175));
})();
if(cljs.core.truth_(and__3764__auto____$1)){
var G__33176 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__33176) : p.call(null,G__33176));
} else {
return and__3764__auto____$1;
}
} else {
return and__3764__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__33345__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__33345 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33346__i = 0, G__33346__a = new Array(arguments.length -  3);
while (G__33346__i < G__33346__a.length) {G__33346__a[G__33346__i] = arguments[G__33346__i + 3]; ++G__33346__i;}
  args = new cljs.core.IndexedSeq(G__33346__a,0);
} 
return G__33345__delegate.call(this,x,y,z,args);};
G__33345.cljs$lang$maxFixedArity = 3;
G__33345.cljs$lang$applyTo = (function (arglist__33347){
var x = cljs.core.first(arglist__33347);
arglist__33347 = cljs.core.next(arglist__33347);
var y = cljs.core.first(arglist__33347);
arglist__33347 = cljs.core.next(arglist__33347);
var z = cljs.core.first(arglist__33347);
var args = cljs.core.rest(arglist__33347);
return G__33345__delegate(x,y,z,args);
});
G__33345.cljs$core$IFn$_invoke$arity$variadic = G__33345__delegate;
return G__33345;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__33348 = null;
if (arguments.length > 3) {
var G__33349__i = 0, G__33349__a = new Array(arguments.length -  3);
while (G__33349__i < G__33349__a.length) {G__33349__a[G__33349__i] = arguments[G__33349__i + 3]; ++G__33349__i;}
G__33348 = new cljs.core.IndexedSeq(G__33349__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33348);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3764__auto__ = (function (){var G__33208 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33208) : p1.call(null,G__33208));
})();
if(cljs.core.truth_(and__3764__auto__)){
var G__33209 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33209) : p2.call(null,G__33209));
} else {
return and__3764__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3764__auto__ = (function (){var G__33211 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33211) : p1.call(null,G__33211));
})();
if(cljs.core.truth_(and__3764__auto__)){
var and__3764__auto____$1 = (function (){var G__33213 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33213) : p1.call(null,G__33213));
})();
if(cljs.core.truth_(and__3764__auto____$1)){
var and__3764__auto____$2 = (function (){var G__33215 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33215) : p2.call(null,G__33215));
})();
if(cljs.core.truth_(and__3764__auto____$2)){
var G__33216 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33216) : p2.call(null,G__33216));
} else {
return and__3764__auto____$2;
}
} else {
return and__3764__auto____$1;
}
} else {
return and__3764__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3764__auto__ = (function (){var G__33218 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33218) : p1.call(null,G__33218));
})();
if(cljs.core.truth_(and__3764__auto__)){
var and__3764__auto____$1 = (function (){var G__33220 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33220) : p1.call(null,G__33220));
})();
if(cljs.core.truth_(and__3764__auto____$1)){
var and__3764__auto____$2 = (function (){var G__33222 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33222) : p1.call(null,G__33222));
})();
if(cljs.core.truth_(and__3764__auto____$2)){
var and__3764__auto____$3 = (function (){var G__33224 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33224) : p2.call(null,G__33224));
})();
if(cljs.core.truth_(and__3764__auto____$3)){
var and__3764__auto____$4 = (function (){var G__33226 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33226) : p2.call(null,G__33226));
})();
if(cljs.core.truth_(and__3764__auto____$4)){
var G__33227 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33227) : p2.call(null,G__33227));
} else {
return and__3764__auto____$4;
}
} else {
return and__3764__auto____$3;
}
} else {
return and__3764__auto____$2;
}
} else {
return and__3764__auto____$1;
}
} else {
return and__3764__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__33350__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__32955_SHARP_){
var and__3764__auto__ = (function (){var G__33232 = p1__32955_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33232) : p1.call(null,G__33232));
})();
if(cljs.core.truth_(and__3764__auto__)){
var G__33233 = p1__32955_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33233) : p2.call(null,G__33233));
} else {
return and__3764__auto__;
}
}),args)));
};
var G__33350 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33351__i = 0, G__33351__a = new Array(arguments.length -  3);
while (G__33351__i < G__33351__a.length) {G__33351__a[G__33351__i] = arguments[G__33351__i + 3]; ++G__33351__i;}
  args = new cljs.core.IndexedSeq(G__33351__a,0);
} 
return G__33350__delegate.call(this,x,y,z,args);};
G__33350.cljs$lang$maxFixedArity = 3;
G__33350.cljs$lang$applyTo = (function (arglist__33352){
var x = cljs.core.first(arglist__33352);
arglist__33352 = cljs.core.next(arglist__33352);
var y = cljs.core.first(arglist__33352);
arglist__33352 = cljs.core.next(arglist__33352);
var z = cljs.core.first(arglist__33352);
var args = cljs.core.rest(arglist__33352);
return G__33350__delegate(x,y,z,args);
});
G__33350.cljs$core$IFn$_invoke$arity$variadic = G__33350__delegate;
return G__33350;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__33353 = null;
if (arguments.length > 3) {
var G__33354__i = 0, G__33354__a = new Array(arguments.length -  3);
while (G__33354__i < G__33354__a.length) {G__33354__a[G__33354__i] = arguments[G__33354__i + 3]; ++G__33354__i;}
G__33353 = new cljs.core.IndexedSeq(G__33354__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33353);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3764__auto__ = (function (){var G__33279 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33279) : p1.call(null,G__33279));
})();
if(cljs.core.truth_(and__3764__auto__)){
var and__3764__auto____$1 = (function (){var G__33281 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33281) : p2.call(null,G__33281));
})();
if(cljs.core.truth_(and__3764__auto____$1)){
var G__33282 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33282) : p3.call(null,G__33282));
} else {
return and__3764__auto____$1;
}
} else {
return and__3764__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3764__auto__ = (function (){var G__33284 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33284) : p1.call(null,G__33284));
})();
if(cljs.core.truth_(and__3764__auto__)){
var and__3764__auto____$1 = (function (){var G__33286 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33286) : p2.call(null,G__33286));
})();
if(cljs.core.truth_(and__3764__auto____$1)){
var and__3764__auto____$2 = (function (){var G__33288 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33288) : p3.call(null,G__33288));
})();
if(cljs.core.truth_(and__3764__auto____$2)){
var and__3764__auto____$3 = (function (){var G__33290 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33290) : p1.call(null,G__33290));
})();
if(cljs.core.truth_(and__3764__auto____$3)){
var and__3764__auto____$4 = (function (){var G__33292 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33292) : p2.call(null,G__33292));
})();
if(cljs.core.truth_(and__3764__auto____$4)){
var G__33293 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33293) : p3.call(null,G__33293));
} else {
return and__3764__auto____$4;
}
} else {
return and__3764__auto____$3;
}
} else {
return and__3764__auto____$2;
}
} else {
return and__3764__auto____$1;
}
} else {
return and__3764__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3764__auto__ = (function (){var G__33295 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33295) : p1.call(null,G__33295));
})();
if(cljs.core.truth_(and__3764__auto__)){
var and__3764__auto____$1 = (function (){var G__33297 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33297) : p2.call(null,G__33297));
})();
if(cljs.core.truth_(and__3764__auto____$1)){
var and__3764__auto____$2 = (function (){var G__33299 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33299) : p3.call(null,G__33299));
})();
if(cljs.core.truth_(and__3764__auto____$2)){
var and__3764__auto____$3 = (function (){var G__33301 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33301) : p1.call(null,G__33301));
})();
if(cljs.core.truth_(and__3764__auto____$3)){
var and__3764__auto____$4 = (function (){var G__33303 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33303) : p2.call(null,G__33303));
})();
if(cljs.core.truth_(and__3764__auto____$4)){
var and__3764__auto____$5 = (function (){var G__33305 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33305) : p3.call(null,G__33305));
})();
if(cljs.core.truth_(and__3764__auto____$5)){
var and__3764__auto____$6 = (function (){var G__33307 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33307) : p1.call(null,G__33307));
})();
if(cljs.core.truth_(and__3764__auto____$6)){
var and__3764__auto____$7 = (function (){var G__33309 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33309) : p2.call(null,G__33309));
})();
if(cljs.core.truth_(and__3764__auto____$7)){
var G__33310 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33310) : p3.call(null,G__33310));
} else {
return and__3764__auto____$7;
}
} else {
return and__3764__auto____$6;
}
} else {
return and__3764__auto____$5;
}
} else {
return and__3764__auto____$4;
}
} else {
return and__3764__auto____$3;
}
} else {
return and__3764__auto____$2;
}
} else {
return and__3764__auto____$1;
}
} else {
return and__3764__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__33355__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__32956_SHARP_){
var and__3764__auto__ = (function (){var G__33317 = p1__32956_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33317) : p1.call(null,G__33317));
})();
if(cljs.core.truth_(and__3764__auto__)){
var and__3764__auto____$1 = (function (){var G__33319 = p1__32956_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33319) : p2.call(null,G__33319));
})();
if(cljs.core.truth_(and__3764__auto____$1)){
var G__33320 = p1__32956_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33320) : p3.call(null,G__33320));
} else {
return and__3764__auto____$1;
}
} else {
return and__3764__auto__;
}
}),args)));
};
var G__33355 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33356__i = 0, G__33356__a = new Array(arguments.length -  3);
while (G__33356__i < G__33356__a.length) {G__33356__a[G__33356__i] = arguments[G__33356__i + 3]; ++G__33356__i;}
  args = new cljs.core.IndexedSeq(G__33356__a,0);
} 
return G__33355__delegate.call(this,x,y,z,args);};
G__33355.cljs$lang$maxFixedArity = 3;
G__33355.cljs$lang$applyTo = (function (arglist__33357){
var x = cljs.core.first(arglist__33357);
arglist__33357 = cljs.core.next(arglist__33357);
var y = cljs.core.first(arglist__33357);
arglist__33357 = cljs.core.next(arglist__33357);
var z = cljs.core.first(arglist__33357);
var args = cljs.core.rest(arglist__33357);
return G__33355__delegate(x,y,z,args);
});
G__33355.cljs$core$IFn$_invoke$arity$variadic = G__33355__delegate;
return G__33355;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__33358 = null;
if (arguments.length > 3) {
var G__33359__i = 0, G__33359__a = new Array(arguments.length -  3);
while (G__33359__i < G__33359__a.length) {G__33359__a[G__33359__i] = arguments[G__33359__i + 3]; ++G__33359__i;}
G__33358 = new cljs.core.IndexedSeq(G__33359__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33358);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__33360__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__32957_SHARP_){
var G__33336 = x;
return (p1__32957_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__32957_SHARP_.cljs$core$IFn$_invoke$arity$1(G__33336) : p1__32957_SHARP_.call(null,G__33336));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__32958_SHARP_){
var and__3764__auto__ = (function (){var G__33338 = x;
return (p1__32958_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__32958_SHARP_.cljs$core$IFn$_invoke$arity$1(G__33338) : p1__32958_SHARP_.call(null,G__33338));
})();
if(cljs.core.truth_(and__3764__auto__)){
var G__33339 = y;
return (p1__32958_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__32958_SHARP_.cljs$core$IFn$_invoke$arity$1(G__33339) : p1__32958_SHARP_.call(null,G__33339));
} else {
return and__3764__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__32959_SHARP_){
var and__3764__auto__ = (function (){var G__33341 = x;
return (p1__32959_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__32959_SHARP_.cljs$core$IFn$_invoke$arity$1(G__33341) : p1__32959_SHARP_.call(null,G__33341));
})();
if(cljs.core.truth_(and__3764__auto__)){
var and__3764__auto____$1 = (function (){var G__33343 = y;
return (p1__32959_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__32959_SHARP_.cljs$core$IFn$_invoke$arity$1(G__33343) : p1__32959_SHARP_.call(null,G__33343));
})();
if(cljs.core.truth_(and__3764__auto____$1)){
var G__33344 = z;
return (p1__32959_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__32959_SHARP_.cljs$core$IFn$_invoke$arity$1(G__33344) : p1__32959_SHARP_.call(null,G__33344));
} else {
return and__3764__auto____$1;
}
} else {
return and__3764__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__33361__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__32960_SHARP_){
return cljs.core.every_QMARK_(p1__32960_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__33361 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33362__i = 0, G__33362__a = new Array(arguments.length -  3);
while (G__33362__i < G__33362__a.length) {G__33362__a[G__33362__i] = arguments[G__33362__i + 3]; ++G__33362__i;}
  args = new cljs.core.IndexedSeq(G__33362__a,0);
} 
return G__33361__delegate.call(this,x,y,z,args);};
G__33361.cljs$lang$maxFixedArity = 3;
G__33361.cljs$lang$applyTo = (function (arglist__33363){
var x = cljs.core.first(arglist__33363);
arglist__33363 = cljs.core.next(arglist__33363);
var y = cljs.core.first(arglist__33363);
arglist__33363 = cljs.core.next(arglist__33363);
var z = cljs.core.first(arglist__33363);
var args = cljs.core.rest(arglist__33363);
return G__33361__delegate(x,y,z,args);
});
G__33361.cljs$core$IFn$_invoke$arity$variadic = G__33361__delegate;
return G__33361;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__33364 = null;
if (arguments.length > 3) {
var G__33365__i = 0, G__33365__a = new Array(arguments.length -  3);
while (G__33365__i < G__33365__a.length) {G__33365__a[G__33365__i] = arguments[G__33365__i + 3]; ++G__33365__i;}
G__33364 = new cljs.core.IndexedSeq(G__33365__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33364);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__33360 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__33366__i = 0, G__33366__a = new Array(arguments.length -  3);
while (G__33366__i < G__33366__a.length) {G__33366__a[G__33366__i] = arguments[G__33366__i + 3]; ++G__33366__i;}
  ps = new cljs.core.IndexedSeq(G__33366__a,0);
} 
return G__33360__delegate.call(this,p1,p2,p3,ps);};
G__33360.cljs$lang$maxFixedArity = 3;
G__33360.cljs$lang$applyTo = (function (arglist__33367){
var p1 = cljs.core.first(arglist__33367);
arglist__33367 = cljs.core.next(arglist__33367);
var p2 = cljs.core.first(arglist__33367);
arglist__33367 = cljs.core.next(arglist__33367);
var p3 = cljs.core.first(arglist__33367);
var ps = cljs.core.rest(arglist__33367);
return G__33360__delegate(p1,p2,p3,ps);
});
G__33360.cljs$core$IFn$_invoke$arity$variadic = G__33360__delegate;
return G__33360;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__33368 = null;
if (arguments.length > 3) {
var G__33369__i = 0, G__33369__a = new Array(arguments.length -  3);
while (G__33369__i < G__33369__a.length) {G__33369__a[G__33369__i] = arguments[G__33369__i + 3]; ++G__33369__i;}
G__33368 = new cljs.core.IndexedSeq(G__33369__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__33368);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__33575 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__33575) : p.call(null,G__33575));
});
var sp1__2 = (function (x,y){
var or__3776__auto__ = (function (){var G__33577 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__33577) : p.call(null,G__33577));
})();
if(cljs.core.truth_(or__3776__auto__)){
return or__3776__auto__;
} else {
var G__33578 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__33578) : p.call(null,G__33578));
}
});
var sp1__3 = (function (x,y,z){
var or__3776__auto__ = (function (){var G__33580 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__33580) : p.call(null,G__33580));
})();
if(cljs.core.truth_(or__3776__auto__)){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (function (){var G__33582 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__33582) : p.call(null,G__33582));
})();
if(cljs.core.truth_(or__3776__auto____$1)){
return or__3776__auto____$1;
} else {
var G__33583 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__33583) : p.call(null,G__33583));
}
}
});
var sp1__4 = (function() { 
var G__33744__delegate = function (x,y,z,args){
var or__3776__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3776__auto__)){
return or__3776__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__33744 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33745__i = 0, G__33745__a = new Array(arguments.length -  3);
while (G__33745__i < G__33745__a.length) {G__33745__a[G__33745__i] = arguments[G__33745__i + 3]; ++G__33745__i;}
  args = new cljs.core.IndexedSeq(G__33745__a,0);
} 
return G__33744__delegate.call(this,x,y,z,args);};
G__33744.cljs$lang$maxFixedArity = 3;
G__33744.cljs$lang$applyTo = (function (arglist__33746){
var x = cljs.core.first(arglist__33746);
arglist__33746 = cljs.core.next(arglist__33746);
var y = cljs.core.first(arglist__33746);
arglist__33746 = cljs.core.next(arglist__33746);
var z = cljs.core.first(arglist__33746);
var args = cljs.core.rest(arglist__33746);
return G__33744__delegate(x,y,z,args);
});
G__33744.cljs$core$IFn$_invoke$arity$variadic = G__33744__delegate;
return G__33744;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__33747 = null;
if (arguments.length > 3) {
var G__33748__i = 0, G__33748__a = new Array(arguments.length -  3);
while (G__33748__i < G__33748__a.length) {G__33748__a[G__33748__i] = arguments[G__33748__i + 3]; ++G__33748__i;}
G__33747 = new cljs.core.IndexedSeq(G__33748__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33747);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3776__auto__ = (function (){var G__33615 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33615) : p1.call(null,G__33615));
})();
if(cljs.core.truth_(or__3776__auto__)){
return or__3776__auto__;
} else {
var G__33616 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33616) : p2.call(null,G__33616));
}
});
var sp2__2 = (function (x,y){
var or__3776__auto__ = (function (){var G__33618 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33618) : p1.call(null,G__33618));
})();
if(cljs.core.truth_(or__3776__auto__)){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (function (){var G__33620 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33620) : p1.call(null,G__33620));
})();
if(cljs.core.truth_(or__3776__auto____$1)){
return or__3776__auto____$1;
} else {
var or__3776__auto____$2 = (function (){var G__33622 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33622) : p2.call(null,G__33622));
})();
if(cljs.core.truth_(or__3776__auto____$2)){
return or__3776__auto____$2;
} else {
var G__33623 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33623) : p2.call(null,G__33623));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3776__auto__ = (function (){var G__33625 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33625) : p1.call(null,G__33625));
})();
if(cljs.core.truth_(or__3776__auto__)){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (function (){var G__33627 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33627) : p1.call(null,G__33627));
})();
if(cljs.core.truth_(or__3776__auto____$1)){
return or__3776__auto____$1;
} else {
var or__3776__auto____$2 = (function (){var G__33629 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33629) : p1.call(null,G__33629));
})();
if(cljs.core.truth_(or__3776__auto____$2)){
return or__3776__auto____$2;
} else {
var or__3776__auto____$3 = (function (){var G__33631 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33631) : p2.call(null,G__33631));
})();
if(cljs.core.truth_(or__3776__auto____$3)){
return or__3776__auto____$3;
} else {
var or__3776__auto____$4 = (function (){var G__33633 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33633) : p2.call(null,G__33633));
})();
if(cljs.core.truth_(or__3776__auto____$4)){
return or__3776__auto____$4;
} else {
var G__33634 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33634) : p2.call(null,G__33634));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__33749__delegate = function (x,y,z,args){
var or__3776__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3776__auto__)){
return or__3776__auto__;
} else {
return cljs.core.some(((function (or__3776__auto__){
return (function (p1__33370_SHARP_){
var or__3776__auto____$1 = (function (){var G__33636 = p1__33370_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33636) : p1.call(null,G__33636));
})();
if(cljs.core.truth_(or__3776__auto____$1)){
return or__3776__auto____$1;
} else {
var G__33637 = p1__33370_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33637) : p2.call(null,G__33637));
}
});})(or__3776__auto__))
,args);
}
};
var G__33749 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33750__i = 0, G__33750__a = new Array(arguments.length -  3);
while (G__33750__i < G__33750__a.length) {G__33750__a[G__33750__i] = arguments[G__33750__i + 3]; ++G__33750__i;}
  args = new cljs.core.IndexedSeq(G__33750__a,0);
} 
return G__33749__delegate.call(this,x,y,z,args);};
G__33749.cljs$lang$maxFixedArity = 3;
G__33749.cljs$lang$applyTo = (function (arglist__33751){
var x = cljs.core.first(arglist__33751);
arglist__33751 = cljs.core.next(arglist__33751);
var y = cljs.core.first(arglist__33751);
arglist__33751 = cljs.core.next(arglist__33751);
var z = cljs.core.first(arglist__33751);
var args = cljs.core.rest(arglist__33751);
return G__33749__delegate(x,y,z,args);
});
G__33749.cljs$core$IFn$_invoke$arity$variadic = G__33749__delegate;
return G__33749;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__33752 = null;
if (arguments.length > 3) {
var G__33753__i = 0, G__33753__a = new Array(arguments.length -  3);
while (G__33753__i < G__33753__a.length) {G__33753__a[G__33753__i] = arguments[G__33753__i + 3]; ++G__33753__i;}
G__33752 = new cljs.core.IndexedSeq(G__33753__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33752);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3776__auto__ = (function (){var G__33683 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33683) : p1.call(null,G__33683));
})();
if(cljs.core.truth_(or__3776__auto__)){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (function (){var G__33685 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33685) : p2.call(null,G__33685));
})();
if(cljs.core.truth_(or__3776__auto____$1)){
return or__3776__auto____$1;
} else {
var G__33686 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33686) : p3.call(null,G__33686));
}
}
});
var sp3__2 = (function (x,y){
var or__3776__auto__ = (function (){var G__33688 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33688) : p1.call(null,G__33688));
})();
if(cljs.core.truth_(or__3776__auto__)){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (function (){var G__33690 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33690) : p2.call(null,G__33690));
})();
if(cljs.core.truth_(or__3776__auto____$1)){
return or__3776__auto____$1;
} else {
var or__3776__auto____$2 = (function (){var G__33692 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33692) : p3.call(null,G__33692));
})();
if(cljs.core.truth_(or__3776__auto____$2)){
return or__3776__auto____$2;
} else {
var or__3776__auto____$3 = (function (){var G__33694 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33694) : p1.call(null,G__33694));
})();
if(cljs.core.truth_(or__3776__auto____$3)){
return or__3776__auto____$3;
} else {
var or__3776__auto____$4 = (function (){var G__33696 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33696) : p2.call(null,G__33696));
})();
if(cljs.core.truth_(or__3776__auto____$4)){
return or__3776__auto____$4;
} else {
var G__33697 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33697) : p3.call(null,G__33697));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3776__auto__ = (function (){var G__33699 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33699) : p1.call(null,G__33699));
})();
if(cljs.core.truth_(or__3776__auto__)){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (function (){var G__33701 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33701) : p2.call(null,G__33701));
})();
if(cljs.core.truth_(or__3776__auto____$1)){
return or__3776__auto____$1;
} else {
var or__3776__auto____$2 = (function (){var G__33703 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33703) : p3.call(null,G__33703));
})();
if(cljs.core.truth_(or__3776__auto____$2)){
return or__3776__auto____$2;
} else {
var or__3776__auto____$3 = (function (){var G__33705 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33705) : p1.call(null,G__33705));
})();
if(cljs.core.truth_(or__3776__auto____$3)){
return or__3776__auto____$3;
} else {
var or__3776__auto____$4 = (function (){var G__33707 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33707) : p2.call(null,G__33707));
})();
if(cljs.core.truth_(or__3776__auto____$4)){
return or__3776__auto____$4;
} else {
var or__3776__auto____$5 = (function (){var G__33709 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33709) : p3.call(null,G__33709));
})();
if(cljs.core.truth_(or__3776__auto____$5)){
return or__3776__auto____$5;
} else {
var or__3776__auto____$6 = (function (){var G__33711 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33711) : p1.call(null,G__33711));
})();
if(cljs.core.truth_(or__3776__auto____$6)){
return or__3776__auto____$6;
} else {
var or__3776__auto____$7 = (function (){var G__33713 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33713) : p2.call(null,G__33713));
})();
if(cljs.core.truth_(or__3776__auto____$7)){
return or__3776__auto____$7;
} else {
var G__33714 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33714) : p3.call(null,G__33714));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__33754__delegate = function (x,y,z,args){
var or__3776__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3776__auto__)){
return or__3776__auto__;
} else {
return cljs.core.some(((function (or__3776__auto__){
return (function (p1__33371_SHARP_){
var or__3776__auto____$1 = (function (){var G__33716 = p1__33371_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33716) : p1.call(null,G__33716));
})();
if(cljs.core.truth_(or__3776__auto____$1)){
return or__3776__auto____$1;
} else {
var or__3776__auto____$2 = (function (){var G__33718 = p1__33371_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33718) : p2.call(null,G__33718));
})();
if(cljs.core.truth_(or__3776__auto____$2)){
return or__3776__auto____$2;
} else {
var G__33719 = p1__33371_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33719) : p3.call(null,G__33719));
}
}
});})(or__3776__auto__))
,args);
}
};
var G__33754 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33755__i = 0, G__33755__a = new Array(arguments.length -  3);
while (G__33755__i < G__33755__a.length) {G__33755__a[G__33755__i] = arguments[G__33755__i + 3]; ++G__33755__i;}
  args = new cljs.core.IndexedSeq(G__33755__a,0);
} 
return G__33754__delegate.call(this,x,y,z,args);};
G__33754.cljs$lang$maxFixedArity = 3;
G__33754.cljs$lang$applyTo = (function (arglist__33756){
var x = cljs.core.first(arglist__33756);
arglist__33756 = cljs.core.next(arglist__33756);
var y = cljs.core.first(arglist__33756);
arglist__33756 = cljs.core.next(arglist__33756);
var z = cljs.core.first(arglist__33756);
var args = cljs.core.rest(arglist__33756);
return G__33754__delegate(x,y,z,args);
});
G__33754.cljs$core$IFn$_invoke$arity$variadic = G__33754__delegate;
return G__33754;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__33757 = null;
if (arguments.length > 3) {
var G__33758__i = 0, G__33758__a = new Array(arguments.length -  3);
while (G__33758__i < G__33758__a.length) {G__33758__a[G__33758__i] = arguments[G__33758__i + 3]; ++G__33758__i;}
G__33757 = new cljs.core.IndexedSeq(G__33758__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33757);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__33759__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__33372_SHARP_){
var G__33735 = x;
return (p1__33372_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33372_SHARP_.cljs$core$IFn$_invoke$arity$1(G__33735) : p1__33372_SHARP_.call(null,G__33735));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__33373_SHARP_){
var or__3776__auto__ = (function (){var G__33737 = x;
return (p1__33373_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33373_SHARP_.cljs$core$IFn$_invoke$arity$1(G__33737) : p1__33373_SHARP_.call(null,G__33737));
})();
if(cljs.core.truth_(or__3776__auto__)){
return or__3776__auto__;
} else {
var G__33738 = y;
return (p1__33373_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33373_SHARP_.cljs$core$IFn$_invoke$arity$1(G__33738) : p1__33373_SHARP_.call(null,G__33738));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__33374_SHARP_){
var or__3776__auto__ = (function (){var G__33740 = x;
return (p1__33374_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33374_SHARP_.cljs$core$IFn$_invoke$arity$1(G__33740) : p1__33374_SHARP_.call(null,G__33740));
})();
if(cljs.core.truth_(or__3776__auto__)){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (function (){var G__33742 = y;
return (p1__33374_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33374_SHARP_.cljs$core$IFn$_invoke$arity$1(G__33742) : p1__33374_SHARP_.call(null,G__33742));
})();
if(cljs.core.truth_(or__3776__auto____$1)){
return or__3776__auto____$1;
} else {
var G__33743 = z;
return (p1__33374_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33374_SHARP_.cljs$core$IFn$_invoke$arity$1(G__33743) : p1__33374_SHARP_.call(null,G__33743));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__33760__delegate = function (x,y,z,args){
var or__3776__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3776__auto__)){
return or__3776__auto__;
} else {
return cljs.core.some(((function (or__3776__auto__,ps__$1){
return (function (p1__33375_SHARP_){
return cljs.core.some(p1__33375_SHARP_,args);
});})(or__3776__auto__,ps__$1))
,ps__$1);
}
};
var G__33760 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33761__i = 0, G__33761__a = new Array(arguments.length -  3);
while (G__33761__i < G__33761__a.length) {G__33761__a[G__33761__i] = arguments[G__33761__i + 3]; ++G__33761__i;}
  args = new cljs.core.IndexedSeq(G__33761__a,0);
} 
return G__33760__delegate.call(this,x,y,z,args);};
G__33760.cljs$lang$maxFixedArity = 3;
G__33760.cljs$lang$applyTo = (function (arglist__33762){
var x = cljs.core.first(arglist__33762);
arglist__33762 = cljs.core.next(arglist__33762);
var y = cljs.core.first(arglist__33762);
arglist__33762 = cljs.core.next(arglist__33762);
var z = cljs.core.first(arglist__33762);
var args = cljs.core.rest(arglist__33762);
return G__33760__delegate(x,y,z,args);
});
G__33760.cljs$core$IFn$_invoke$arity$variadic = G__33760__delegate;
return G__33760;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__33763 = null;
if (arguments.length > 3) {
var G__33764__i = 0, G__33764__a = new Array(arguments.length -  3);
while (G__33764__i < G__33764__a.length) {G__33764__a[G__33764__i] = arguments[G__33764__i + 3]; ++G__33764__i;}
G__33763 = new cljs.core.IndexedSeq(G__33764__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33763);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__33759 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__33765__i = 0, G__33765__a = new Array(arguments.length -  3);
while (G__33765__i < G__33765__a.length) {G__33765__a[G__33765__i] = arguments[G__33765__i + 3]; ++G__33765__i;}
  ps = new cljs.core.IndexedSeq(G__33765__a,0);
} 
return G__33759__delegate.call(this,p1,p2,p3,ps);};
G__33759.cljs$lang$maxFixedArity = 3;
G__33759.cljs$lang$applyTo = (function (arglist__33766){
var p1 = cljs.core.first(arglist__33766);
arglist__33766 = cljs.core.next(arglist__33766);
var p2 = cljs.core.first(arglist__33766);
arglist__33766 = cljs.core.next(arglist__33766);
var p3 = cljs.core.first(arglist__33766);
var ps = cljs.core.rest(arglist__33766);
return G__33759__delegate(p1,p2,p3,ps);
});
G__33759.cljs$core$IFn$_invoke$arity$variadic = G__33759__delegate;
return G__33759;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__33767 = null;
if (arguments.length > 3) {
var G__33768__i = 0, G__33768__a = new Array(arguments.length -  3);
while (G__33768__i < G__33768__a.length) {G__33768__a[G__33768__i] = arguments[G__33768__i + 3]; ++G__33768__i;}
G__33767 = new cljs.core.IndexedSeq(G__33768__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__33767);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__33823 = null;
var G__33823__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__33823__1 = (function (result){
var G__33809 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__33809) : rf.call(null,G__33809));
});
var G__33823__2 = (function (result,input){
var G__33810 = result;
var G__33811 = (function (){var G__33812 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33812) : f.call(null,G__33812));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33810,G__33811) : rf.call(null,G__33810,G__33811));
});
var G__33823__3 = (function() { 
var G__33824__delegate = function (result,input,inputs){
var G__33813 = result;
var G__33814 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33813,G__33814) : rf.call(null,G__33813,G__33814));
};
var G__33824 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__33825__i = 0, G__33825__a = new Array(arguments.length -  2);
while (G__33825__i < G__33825__a.length) {G__33825__a[G__33825__i] = arguments[G__33825__i + 2]; ++G__33825__i;}
  inputs = new cljs.core.IndexedSeq(G__33825__a,0);
} 
return G__33824__delegate.call(this,result,input,inputs);};
G__33824.cljs$lang$maxFixedArity = 2;
G__33824.cljs$lang$applyTo = (function (arglist__33826){
var result = cljs.core.first(arglist__33826);
arglist__33826 = cljs.core.next(arglist__33826);
var input = cljs.core.first(arglist__33826);
var inputs = cljs.core.rest(arglist__33826);
return G__33824__delegate(result,input,inputs);
});
G__33824.cljs$core$IFn$_invoke$arity$variadic = G__33824__delegate;
return G__33824;
})()
;
G__33823 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__33823__0.call(this);
case 1:
return G__33823__1.call(this,result);
case 2:
return G__33823__2.call(this,result,input);
default:
var G__33827 = null;
if (arguments.length > 2) {
var G__33828__i = 0, G__33828__a = new Array(arguments.length -  2);
while (G__33828__i < G__33828__a.length) {G__33828__a[G__33828__i] = arguments[G__33828__i + 2]; ++G__33828__i;}
G__33827 = new cljs.core.IndexedSeq(G__33828__a,0);
}
return G__33823__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__33827);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33823.cljs$lang$maxFixedArity = 2;
G__33823.cljs$lang$applyTo = G__33823__3.cljs$lang$applyTo;
G__33823.cljs$core$IFn$_invoke$arity$0 = G__33823__0;
G__33823.cljs$core$IFn$_invoke$arity$1 = G__33823__1;
G__33823.cljs$core$IFn$_invoke$arity$2 = G__33823__2;
G__33823.cljs$core$IFn$_invoke$arity$variadic = G__33823__3.cljs$core$IFn$_invoke$arity$variadic;
return G__33823;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4663__auto___33829 = size;
var i_33830 = (0);
while(true){
if((i_33830 < n__4663__auto___33829)){
cljs.core.chunk_append(b,(function (){var G__33815 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_33830);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33815) : f.call(null,G__33815));
})());

var G__33831 = (i_33830 + (1));
i_33830 = G__33831;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__33816 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33816) : f.call(null,G__33816));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__33817 = cljs.core.first(s1);
var G__33818 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33817,G__33818) : f.call(null,G__33817,G__33818));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__33819 = cljs.core.first(s1);
var G__33820 = cljs.core.first(s2);
var G__33821 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33819,G__33820,G__33821) : f.call(null,G__33819,G__33820,G__33821));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__33832__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__33769_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__33769_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__33832 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__33833__i = 0, G__33833__a = new Array(arguments.length -  4);
while (G__33833__i < G__33833__a.length) {G__33833__a[G__33833__i] = arguments[G__33833__i + 4]; ++G__33833__i;}
  colls = new cljs.core.IndexedSeq(G__33833__a,0);
} 
return G__33832__delegate.call(this,f,c1,c2,c3,colls);};
G__33832.cljs$lang$maxFixedArity = 4;
G__33832.cljs$lang$applyTo = (function (arglist__33834){
var f = cljs.core.first(arglist__33834);
arglist__33834 = cljs.core.next(arglist__33834);
var c1 = cljs.core.first(arglist__33834);
arglist__33834 = cljs.core.next(arglist__33834);
var c2 = cljs.core.first(arglist__33834);
arglist__33834 = cljs.core.next(arglist__33834);
var c3 = cljs.core.first(arglist__33834);
var colls = cljs.core.rest(arglist__33834);
return G__33832__delegate(f,c1,c2,c3,colls);
});
G__33832.cljs$core$IFn$_invoke$arity$variadic = G__33832__delegate;
return G__33832;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__33835 = null;
if (arguments.length > 4) {
var G__33836__i = 0, G__33836__a = new Array(arguments.length -  4);
while (G__33836__i < G__33836__a.length) {G__33836__a[G__33836__i] = arguments[G__33836__i + 4]; ++G__33836__i;}
G__33835 = new cljs.core.IndexedSeq(G__33836__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__33835);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__33845 = null;
var G__33845__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__33845__1 = (function (result){
var G__33842 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__33842) : rf.call(null,G__33842));
});
var G__33845__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__33843 = result;
var G__33844 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33843,G__33844) : rf.call(null,G__33843,G__33844));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__33845 = function(result,input){
switch(arguments.length){
case 0:
return G__33845__0.call(this);
case 1:
return G__33845__1.call(this,result);
case 2:
return G__33845__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33845.cljs$core$IFn$_invoke$arity$0 = G__33845__0;
G__33845.cljs$core$IFn$_invoke$arity$1 = G__33845__1;
G__33845.cljs$core$IFn$_invoke$arity$2 = G__33845__2;
return G__33845;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__33852 = null;
var G__33852__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__33852__1 = (function (result){
var G__33849 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__33849) : rf.call(null,G__33849));
});
var G__33852__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__33850 = result;
var G__33851 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33850,G__33851) : rf.call(null,G__33850,G__33851));
}
});
G__33852 = function(result,input){
switch(arguments.length){
case 0:
return G__33852__0.call(this);
case 1:
return G__33852__1.call(this,result);
case 2:
return G__33852__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33852.cljs$core$IFn$_invoke$arity$0 = G__33852__0;
G__33852.cljs$core$IFn$_invoke$arity$1 = G__33852__1;
G__33852.cljs$core$IFn$_invoke$arity$2 = G__33852__2;
return G__33852;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__33853 = (n__$1 - (1));
var G__33854 = cljs.core.rest(s);
n__$1 = G__33853;
coll__$1 = G__33854;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__33857 = cljs.core.next(s);
var G__33858 = cljs.core.next(lead);
s = G__33857;
lead = G__33858;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__33871 = null;
var G__33871__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__33871__1 = (function (result){
var G__33865 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__33865) : rf.call(null,G__33865));
});
var G__33871__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3764__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3764__auto__)){
var G__33866 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__33866) : pred.call(null,G__33866));
} else {
return and__3764__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__33867 = result;
var G__33868 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33867,G__33868) : rf.call(null,G__33867,G__33868));
}
});
G__33871 = function(result,input){
switch(arguments.length){
case 0:
return G__33871__0.call(this);
case 1:
return G__33871__1.call(this,result);
case 2:
return G__33871__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33871.cljs$core$IFn$_invoke$arity$0 = G__33871__0;
G__33871.cljs$core$IFn$_invoke$arity$1 = G__33871__1;
G__33871.cljs$core$IFn$_invoke$arity$2 = G__33871__2;
return G__33871;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3764__auto__ = s;
if(and__3764__auto__){
var G__33870 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__33870) : pred__$1.call(null,G__33870));
} else {
return and__3764__auto__;
}
})())){
var G__33872 = pred__$1;
var G__33873 = cljs.core.rest(s);
pred__$1 = G__33872;
coll__$1 = G__33873;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__33882 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33882) : f.call(null,G__33882));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__33885__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__33885 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__33886__i = 0, G__33886__a = new Array(arguments.length -  2);
while (G__33886__i < G__33886__a.length) {G__33886__a[G__33886__i] = arguments[G__33886__i + 2]; ++G__33886__i;}
  colls = new cljs.core.IndexedSeq(G__33886__a,0);
} 
return G__33885__delegate.call(this,c1,c2,colls);};
G__33885.cljs$lang$maxFixedArity = 2;
G__33885.cljs$lang$applyTo = (function (arglist__33887){
var c1 = cljs.core.first(arglist__33887);
arglist__33887 = cljs.core.next(arglist__33887);
var c2 = cljs.core.first(arglist__33887);
var colls = cljs.core.rest(arglist__33887);
return G__33885__delegate(c1,c2,colls);
});
G__33885.cljs$core$IFn$_invoke$arity$variadic = G__33885__delegate;
return G__33885;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__33888 = null;
if (arguments.length > 2) {
var G__33889__i = 0, G__33889__a = new Array(arguments.length -  2);
while (G__33889__i < G__33889__a.length) {G__33889__a[G__33889__i] = arguments[G__33889__i + 2]; ++G__33889__i;}
G__33888 = new cljs.core.IndexedSeq(G__33889__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__33888);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__33904 = null;
var G__33904__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__33904__1 = (function (result){
var G__33897 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__33897) : rf.call(null,G__33897));
});
var G__33904__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__33898 = result;
var G__33899 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33898,G__33899) : rf.call(null,G__33898,G__33899));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__33900 = sepr;
var G__33901 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33900,G__33901) : rf.call(null,G__33900,G__33901));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__33902 = result;
var G__33903 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33902,G__33903) : rf.call(null,G__33902,G__33903));
}
});
G__33904 = function(result,input){
switch(arguments.length){
case 0:
return G__33904__0.call(this);
case 1:
return G__33904__1.call(this,result);
case 2:
return G__33904__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33904.cljs$core$IFn$_invoke$arity$0 = G__33904__0;
G__33904.cljs$core$IFn$_invoke$arity$1 = G__33904__1;
G__33904.cljs$core$IFn$_invoke$arity$2 = G__33904__2;
return G__33904;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__33913__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__33913 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__33914__i = 0, G__33914__a = new Array(arguments.length -  1);
while (G__33914__i < G__33914__a.length) {G__33914__a[G__33914__i] = arguments[G__33914__i + 1]; ++G__33914__i;}
  colls = new cljs.core.IndexedSeq(G__33914__a,0);
} 
return G__33913__delegate.call(this,f,colls);};
G__33913.cljs$lang$maxFixedArity = 1;
G__33913.cljs$lang$applyTo = (function (arglist__33915){
var f = cljs.core.first(arglist__33915);
var colls = cljs.core.rest(arglist__33915);
return G__33913__delegate(f,colls);
});
G__33913.cljs$core$IFn$_invoke$arity$variadic = G__33913__delegate;
return G__33913;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__33916 = null;
if (arguments.length > 1) {
var G__33917__i = 0, G__33917__a = new Array(arguments.length -  1);
while (G__33917__i < G__33917__a.length) {G__33917__a[G__33917__i] = arguments[G__33917__i + 1]; ++G__33917__i;}
G__33916 = new cljs.core.IndexedSeq(G__33917__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__33916);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__33936 = null;
var G__33936__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__33936__1 = (function (result){
var G__33930 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__33930) : rf.call(null,G__33930));
});
var G__33936__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__33931 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__33931) : pred.call(null,G__33931));
})())){
var G__33932 = result;
var G__33933 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33932,G__33933) : rf.call(null,G__33932,G__33933));
} else {
return result;
}
});
G__33936 = function(result,input){
switch(arguments.length){
case 0:
return G__33936__0.call(this);
case 1:
return G__33936__1.call(this,result);
case 2:
return G__33936__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33936.cljs$core$IFn$_invoke$arity$0 = G__33936__0;
G__33936.cljs$core$IFn$_invoke$arity$1 = G__33936__1;
G__33936.cljs$core$IFn$_invoke$arity$2 = G__33936__2;
return G__33936;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4663__auto___33937 = size;
var i_33938 = (0);
while(true){
if((i_33938 < n__4663__auto___33937)){
if(cljs.core.truth_((function (){var G__33934 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_33938);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__33934) : pred.call(null,G__33934));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_33938));
} else {
}

var G__33939 = (i_33938 + (1));
i_33938 = G__33939;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__33935 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__33935) : pred.call(null,G__33935));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__33946 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__33946) : branch_QMARK_.call(null,G__33946));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__33947 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__33947) : children.call(null,G__33947));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__33948_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__33948_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__33951 = to;
if(G__33951){
var bit__4450__auto__ = (G__33951.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4450__auto__) || (G__33951.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__33952 = to;
if(G__33952){
var bit__4450__auto__ = (G__33952.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4450__auto__) || (G__33952.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__33954 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33954) : f.call(null,G__33954));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__33955__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__33955 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__33956__i = 0, G__33956__a = new Array(arguments.length -  4);
while (G__33956__i < G__33956__a.length) {G__33956__a[G__33956__i] = arguments[G__33956__i + 4]; ++G__33956__i;}
  colls = new cljs.core.IndexedSeq(G__33956__a,0);
} 
return G__33955__delegate.call(this,f,c1,c2,c3,colls);};
G__33955.cljs$lang$maxFixedArity = 4;
G__33955.cljs$lang$applyTo = (function (arglist__33957){
var f = cljs.core.first(arglist__33957);
arglist__33957 = cljs.core.next(arglist__33957);
var c1 = cljs.core.first(arglist__33957);
arglist__33957 = cljs.core.next(arglist__33957);
var c2 = cljs.core.first(arglist__33957);
arglist__33957 = cljs.core.next(arglist__33957);
var c3 = cljs.core.first(arglist__33957);
var colls = cljs.core.rest(arglist__33957);
return G__33955__delegate(f,c1,c2,c3,colls);
});
G__33955.cljs$core$IFn$_invoke$arity$variadic = G__33955__delegate;
return G__33955;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__33958 = null;
if (arguments.length > 4) {
var G__33959__i = 0, G__33959__a = new Array(arguments.length -  4);
while (G__33959__i < G__33959__a.length) {G__33959__a[G__33959__i] = arguments[G__33959__i + 4]; ++G__33959__i;}
G__33958 = new cljs.core.IndexedSeq(G__33959__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__33958);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__33961 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__33961) : pred.call(null,G__33961));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__33976 = m__$1;
if(G__33976){
var bit__4457__auto__ = (G__33976.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4457__auto__) || (G__33976.cljs$core$ILookup$)){
return true;
} else {
if((!G__33976.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__33976);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__33976);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__33977 = sentinel;
var G__33978 = m__$2;
var G__33979 = cljs.core.next(ks__$1);
sentinel = G__33977;
m__$1 = G__33978;
ks__$1 = G__33979;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__33980,v){
var vec__33985 = p__33980;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33985,(0),null);
var ks = cljs.core.nthnext(vec__33985,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__33986,f){
var vec__34024 = p__33986;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34024,(0),null);
var ks = cljs.core.nthnext(vec__34024,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__34025 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34025) : f.call(null,G__34025));
})());
}
});
var update_in__4 = (function (m,p__33987,f,a){
var vec__34026 = p__33987;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34026,(0),null);
var ks = cljs.core.nthnext(vec__34026,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__34027 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__34028 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34027,G__34028) : f.call(null,G__34027,G__34028));
})());
}
});
var update_in__5 = (function (m,p__33988,f,a,b){
var vec__34029 = p__33988;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34029,(0),null);
var ks = cljs.core.nthnext(vec__34029,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__34030 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__34031 = a;
var G__34032 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34030,G__34031,G__34032) : f.call(null,G__34030,G__34031,G__34032));
})());
}
});
var update_in__6 = (function (m,p__33989,f,a,b,c){
var vec__34033 = p__33989;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34033,(0),null);
var ks = cljs.core.nthnext(vec__34033,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__34034 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__34035 = a;
var G__34036 = b;
var G__34037 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__34034,G__34035,G__34036,G__34037) : f.call(null,G__34034,G__34035,G__34036,G__34037));
})());
}
});
var update_in__7 = (function() { 
var G__34039__delegate = function (m,p__33990,f,a,b,c,args){
var vec__34038 = p__33990;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34038,(0),null);
var ks = cljs.core.nthnext(vec__34038,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__34039 = function (m,p__33990,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__34040__i = 0, G__34040__a = new Array(arguments.length -  6);
while (G__34040__i < G__34040__a.length) {G__34040__a[G__34040__i] = arguments[G__34040__i + 6]; ++G__34040__i;}
  args = new cljs.core.IndexedSeq(G__34040__a,0);
} 
return G__34039__delegate.call(this,m,p__33990,f,a,b,c,args);};
G__34039.cljs$lang$maxFixedArity = 6;
G__34039.cljs$lang$applyTo = (function (arglist__34041){
var m = cljs.core.first(arglist__34041);
arglist__34041 = cljs.core.next(arglist__34041);
var p__33990 = cljs.core.first(arglist__34041);
arglist__34041 = cljs.core.next(arglist__34041);
var f = cljs.core.first(arglist__34041);
arglist__34041 = cljs.core.next(arglist__34041);
var a = cljs.core.first(arglist__34041);
arglist__34041 = cljs.core.next(arglist__34041);
var b = cljs.core.first(arglist__34041);
arglist__34041 = cljs.core.next(arglist__34041);
var c = cljs.core.first(arglist__34041);
var args = cljs.core.rest(arglist__34041);
return G__34039__delegate(m,p__33990,f,a,b,c,args);
});
G__34039.cljs$core$IFn$_invoke$arity$variadic = G__34039__delegate;
return G__34039;
})()
;
update_in = function(m,p__33990,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__33990,f);
case 4:
return update_in__4.call(this,m,p__33990,f,a);
case 5:
return update_in__5.call(this,m,p__33990,f,a,b);
case 6:
return update_in__6.call(this,m,p__33990,f,a,b,c);
default:
var G__34042 = null;
if (arguments.length > 6) {
var G__34043__i = 0, G__34043__a = new Array(arguments.length -  6);
while (G__34043__i < G__34043__a.length) {G__34043__a[G__34043__i] = arguments[G__34043__i + 6]; ++G__34043__i;}
G__34042 = new cljs.core.IndexedSeq(G__34043__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__33990,f,a,b,c, G__34042);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__34054 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34054) : f.call(null,G__34054));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__34055 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__34056 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34055,G__34056) : f.call(null,G__34055,G__34056));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__34057 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__34058 = x;
var G__34059 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34057,G__34058,G__34059) : f.call(null,G__34057,G__34058,G__34059));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__34060 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__34061 = x;
var G__34062 = y;
var G__34063 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__34060,G__34061,G__34062,G__34063) : f.call(null,G__34060,G__34061,G__34062,G__34063));
})());
});
var update__7 = (function() { 
var G__34064__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__34064 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__34065__i = 0, G__34065__a = new Array(arguments.length -  6);
while (G__34065__i < G__34065__a.length) {G__34065__a[G__34065__i] = arguments[G__34065__i + 6]; ++G__34065__i;}
  more = new cljs.core.IndexedSeq(G__34065__a,0);
} 
return G__34064__delegate.call(this,m,k,f,x,y,z,more);};
G__34064.cljs$lang$maxFixedArity = 6;
G__34064.cljs$lang$applyTo = (function (arglist__34066){
var m = cljs.core.first(arglist__34066);
arglist__34066 = cljs.core.next(arglist__34066);
var k = cljs.core.first(arglist__34066);
arglist__34066 = cljs.core.next(arglist__34066);
var f = cljs.core.first(arglist__34066);
arglist__34066 = cljs.core.next(arglist__34066);
var x = cljs.core.first(arglist__34066);
arglist__34066 = cljs.core.next(arglist__34066);
var y = cljs.core.first(arglist__34066);
arglist__34066 = cljs.core.next(arglist__34066);
var z = cljs.core.first(arglist__34066);
var more = cljs.core.rest(arglist__34066);
return G__34064__delegate(m,k,f,x,y,z,more);
});
G__34064.cljs$core$IFn$_invoke$arity$variadic = G__34064__delegate;
return G__34064;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__34067 = null;
if (arguments.length > 6) {
var G__34068__i = 0, G__34068__a = new Array(arguments.length -  6);
while (G__34068__i < G__34068__a.length) {G__34068__a[G__34068__i] = arguments[G__34068__i + 6]; ++G__34068__i;}
G__34067 = new cljs.core.IndexedSeq(G__34068__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__34067);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__34069 = (ll - (5));
var G__34070 = r;
ll = G__34069;
ret = G__34070;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__34075 = cljs.core.pv_aget(node,(0));
var G__34076 = (level - (5));
node = G__34075;
level = G__34076;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__34077 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__34078 = (level - (5));
node = G__34077;
level = G__34078;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__34088 = init__$2;
var G__34089 = (j + i);
var G__34090 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34088,G__34089,G__34090) : f.call(null,G__34088,G__34089,G__34090));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__34101 = (j + (1));
var G__34102 = init__$3;
j = G__34101;
init__$2 = G__34102;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__34091 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34091) : cljs.core.deref.call(null,G__34091));
} else {
var G__34103 = (i + len);
var G__34104 = init__$2;
i = G__34103;
init__$1 = G__34104;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4197__auto__ = self__.__hash;
if(!((h__4197__auto__ == null))){
return h__4197__auto__;
} else {
var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4197__auto____$1;

return h__4197__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__34092 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__34092) : cljs.core.tv_editable_root.call(null,G__34092));
})(),(function (){var G__34093 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__34093) : cljs.core.tv_editable_tail.call(null,G__34093));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__34094 = init__$2;
var G__34095 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34094,G__34095) : f.call(null,G__34094,G__34095));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__34105 = (j + (1));
var G__34106 = init__$3;
j = G__34105;
init__$2 = G__34106;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__34096 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34096) : cljs.core.deref.call(null,G__34096));
} else {
var G__34107 = (i + len);
var G__34108 = init__$2;
i = G__34107;
init__$1 = G__34108;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__34097 = coll__$1;
var G__34098 = cljs.core.first_array_for_longvec(coll__$1);
var G__34099 = (0);
var G__34100 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__34097,G__34098,G__34099,G__34100) : cljs.core.chunked_seq.call(null,G__34097,G__34098,G__34099,G__34100));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4663__auto___34109 = len;
var i_34110 = (0);
while(true){
if((i_34110 < n__4663__auto___34109)){
(new_tail[i_34110] = (self__.tail[i_34110]));

var G__34111 = (i_34110 + (1));
i_34110 = G__34111;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__34112 = null;
var G__34112__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__34112__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__34112 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__34112__2.call(this,self__,k);
case 3:
return G__34112__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34112.cljs$core$IFn$_invoke$arity$2 = G__34112__2;
G__34112.cljs$core$IFn$_invoke$arity$3 = G__34112__3;
return G__34112;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args34087){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34087)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__34113 = (i + (1));
var G__34114 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__34113;
out = G__34114;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4754__auto__ = this;
return cljs.core.es6_iterator(this__4754__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__34115__i = 0, G__34115__a = new Array(arguments.length -  0);
while (G__34115__i < G__34115__a.length) {G__34115__a[G__34115__i] = arguments[G__34115__i + 0]; ++G__34115__i;}
  args = new cljs.core.IndexedSeq(G__34115__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__34116){
var args = cljs.core.seq(arglist__34116);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__34117 = self__.vec;
var G__34118 = self__.node;
var G__34119 = self__.i;
var G__34120 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__34117,G__34118,G__34119,G__34120) : cljs.core.chunked_seq.call(null,G__34117,G__34118,G__34119,G__34120));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4197__auto__ = self__.__hash;
if(!((h__4197__auto__ == null))){
return h__4197__auto__;
} else {
var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4197__auto____$1;

return h__4197__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__34121 = self__.vec;
var G__34122 = (self__.i + self__.off);
var G__34123 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__34121,G__34122,G__34123) : cljs.core.subvec.call(null,G__34121,G__34122,G__34123));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__34124 = self__.vec;
var G__34125 = (self__.i + self__.off);
var G__34126 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__34124,G__34125,G__34126) : cljs.core.subvec.call(null,G__34124,G__34125,G__34126));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__34127 = self__.vec;
var G__34128 = self__.node;
var G__34129 = self__.i;
var G__34130 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__34127,G__34128,G__34129,G__34130) : cljs.core.chunked_seq.call(null,G__34127,G__34128,G__34129,G__34130));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__34131 = self__.vec;
var G__34132 = cljs.core.unchecked_array_for(self__.vec,end);
var G__34133 = end;
var G__34134 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__34131,G__34132,G__34133,G__34134) : cljs.core.chunked_seq.call(null,G__34131,G__34132,G__34133,G__34134));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__34135 = self__.vec;
var G__34136 = self__.node;
var G__34137 = self__.i;
var G__34138 = self__.off;
var G__34139 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__34135,G__34136,G__34137,G__34138,G__34139) : cljs.core.chunked_seq.call(null,G__34135,G__34136,G__34137,G__34138,G__34139));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__34140 = self__.vec;
var G__34141 = cljs.core.unchecked_array_for(self__.vec,end);
var G__34142 = end;
var G__34143 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__34140,G__34141,G__34142,G__34143) : cljs.core.chunked_seq.call(null,G__34140,G__34141,G__34142,G__34143));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4754__auto__ = this;
return cljs.core.es6_iterator(this__4754__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__34145 = self__.meta;
var G__34146 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__34147 = self__.start;
var G__34148 = (function (){var x__4093__auto__ = self__.end;
var y__4094__auto__ = (v_pos + (1));
return ((x__4093__auto__ > y__4094__auto__) ? x__4093__auto__ : y__4094__auto__);
})();
var G__34149 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__34145,G__34146,G__34147,G__34148,G__34149) : cljs.core.build_subvec.call(null,G__34145,G__34146,G__34147,G__34148,G__34149));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__34150 = self__.meta;
var G__34151 = self__.v;
var G__34152 = self__.start;
var G__34153 = (self__.end - (1));
var G__34154 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__34150,G__34151,G__34152,G__34153,G__34154) : cljs.core.build_subvec.call(null,G__34150,G__34151,G__34152,G__34153,G__34154));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4197__auto__ = self__.__hash;
if(!((h__4197__auto__ == null))){
return h__4197__auto__;
} else {
var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4197__auto____$1;

return h__4197__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__34156 = meta__$1;
var G__34157 = self__.v;
var G__34158 = self__.start;
var G__34159 = self__.end;
var G__34160 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__34156,G__34157,G__34158,G__34159,G__34160) : cljs.core.build_subvec.call(null,G__34156,G__34157,G__34158,G__34159,G__34160));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__34161 = self__.meta;
var G__34162 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__34163 = self__.start;
var G__34164 = (self__.end + (1));
var G__34165 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__34161,G__34162,G__34163,G__34164,G__34165) : cljs.core.build_subvec.call(null,G__34161,G__34162,G__34163,G__34164,G__34165));
});

cljs.core.Subvec.prototype.call = (function() {
var G__34166 = null;
var G__34166__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__34166__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__34166 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__34166__2.call(this,self__,k);
case 3:
return G__34166__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34166.cljs$core$IFn$_invoke$arity$2 = G__34166__2;
G__34166.cljs$core$IFn$_invoke$arity$3 = G__34166__3;
return G__34166;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args34144){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34144)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4754__auto__ = this;
return cljs.core.es6_iterator(this__4754__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__34167 = meta;
var G__34168 = v.v;
var G__34169 = (v.start + start);
var G__34170 = (v.start + end);
var G__34171 = __hash;
meta = G__34167;
v = G__34168;
start = G__34169;
end = G__34170;
__hash = G__34171;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj34178 = {};
return obj34178;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__34186 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__34187 = (level - (5));
node = G__34186;
level = G__34187;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__34191 = null;
var G__34191__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__34191__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__34191 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__34191__2.call(this,self__,k);
case 3:
return G__34191__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34191.cljs$core$IFn$_invoke$arity$2 = G__34191__2;
G__34191.cljs$core$IFn$_invoke$arity$3 = G__34191__3;
return G__34191;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args34188){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34188)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4197__auto__ = self__.__hash;
if(!((h__4197__auto__ == null))){
return h__4197__auto__;
} else {
var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4197__auto____$1;

return h__4197__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4754__auto__ = this;
return cljs.core.es6_iterator(this__4754__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4197__auto__ = self__.__hash;
if(!((h__4197__auto__ == null))){
return h__4197__auto__;
} else {
var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4197__auto____$1;

return h__4197__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3776__auto__ = self__.front;
if(cljs.core.truth_(or__3776__auto__)){
return or__3776__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3776__auto__ = self__.rear;
if(cljs.core.truth_(or__3776__auto__)){
return or__3776__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4754__auto__ = this;
return cljs.core.es6_iterator(this__4754__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__34192 = (i + incr);
i = G__34192;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__34193 = (i + (1));
var G__34194 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__34193;
out = G__34194;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj34198 = {};
return obj34198;
})();
var l = ks.length;
var i_34199 = (0);
while(true){
if((i_34199 < l)){
var k_34200 = (ks[i_34199]);
(new_obj[k_34200] = (obj[k_34200]));

var G__34201 = (i_34199 + (1));
i_34199 = G__34201;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3764__auto__ = (function (){var G__34205 = k;
return goog.isString(G__34205);
})();
if(cljs.core.truth_(and__3764__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3764__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__34206 = init__$1;
var G__34207 = k;
var G__34208 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34206,G__34207,G__34208) : f.call(null,G__34206,G__34207,G__34208));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__34209 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34209) : cljs.core.deref.call(null,G__34209));
} else {
var G__34215 = cljs.core.rest(keys__$1);
var G__34216 = init__$2;
keys__$1 = G__34215;
init__$1 = G__34216;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4197__auto__ = self__.__hash;
if(!((h__4197__auto__ == null))){
return h__4197__auto__;
} else {
var h__4197__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4197__auto____$1;

return h__4197__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3764__auto__ = (function (){var G__34211 = k;
return goog.isString(G__34211);
})();
if(cljs.core.truth_(and__3764__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3764__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__34212 = k;
return goog.isString(G__34212);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3764__auto__ = (function (){var G__34214 = k;
return goog.isString(G__34214);
})();
if(cljs.core.truth_(and__3764__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3764__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__34202_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__34202_SHARP_,(self__.strobj[p1__34202_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__34217 = null;
var G__34217__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__34217__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__34217 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__34217__2.call(this,self__,k);
case 3:
return G__34217__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34217.cljs$core$IFn$_invoke$arity$2 = G__34217__2;
G__34217.cljs$core$IFn$_invoke$arity$3 = G__34217__3;
return G__34217;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args34203){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34203)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj34219 = {};
return obj34219;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__34220 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34220,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34220,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__34221 = (i + (2));
i = G__34221;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__34222 = (i + (2));
i = G__34222;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__34223 = (i + (2));
i = G__34223;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__34224 = (i + (2));
i = G__34224;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__34225 = (i + (2));
i = G__34225;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3776__auto__ = (function (){var G__34229 = k;
return goog.isString(G__34229);
})();
if(cljs.core.truth_(or__3776__auto__)){
return or__3776__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_34230 = (0);
while(true){
if((i_34230 < l)){
(narr[i_34230] = (arr[i_34230]));

var G__34231 = (i_34230 + (1));
i_34230 = G__34231;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4754__auto__ = this;
return cljs.core.es6_iterator(this__4754__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__34233 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__34233) : cljs.core.keys.call(null,G__34233));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__34234 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__34234) : cljs.core.vals.call(null,G__34234));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__34235 = cljs.core.seq(coll);
var chunk__34236 = null;
var count__34237 = (0);
var i__34238 = (0);
while(true){
if((i__34238 < count__34237)){
var vec__34239 = chunk__34236.cljs$core$IIndexed$_nth$arity$2(null,i__34238);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34239,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34239,(1),null);
var G__34240_34253 = v;
var G__34241_34254 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34240_34253,G__34241_34254) : f.call(null,G__34240_34253,G__34241_34254));

var G__34255 = seq__34235;
var G__34256 = chunk__34236;
var G__34257 = count__34237;
var G__34258 = (i__34238 + (1));
seq__34235 = G__34255;
chunk__34236 = G__34256;
count__34237 = G__34257;
i__34238 = G__34258;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__34235);
if(temp__4126__auto__){
var seq__34235__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__34235__$1)){
var c__4563__auto__ = cljs.core.chunk_first(seq__34235__$1);
var G__34259 = cljs.core.chunk_rest(seq__34235__$1);
var G__34260 = c__4563__auto__;
var G__34261 = cljs.core.count(c__4563__auto__);
var G__34262 = (0);
seq__34235 = G__34259;
chunk__34236 = G__34260;
count__34237 = G__34261;
i__34238 = G__34262;
continue;
} else {
var vec__34242 = cljs.core.first(seq__34235__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34242,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34242,(1),null);
var G__34243_34263 = v;
var G__34244_34264 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34243_34263,G__34244_34264) : f.call(null,G__34243_34263,G__34244_34264));

var G__34265 = cljs.core.next(seq__34235__$1);
var G__34266 = null;
var G__34267 = (0);
var G__34268 = (0);
seq__34235 = G__34265;
chunk__34236 = G__34266;
count__34237 = G__34267;
i__34238 = G__34268;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__34245 = init__$1;
var G__34246 = (self__.arr[i]);
var G__34247 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34245,G__34246,G__34247) : f.call(null,G__34245,G__34246,G__34247));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__34248 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34248) : cljs.core.deref.call(null,G__34248));
} else {
var G__34269 = (i + (2));
var G__34270 = init__$2;
i = G__34269;
init__$1 = G__34270;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4197__auto__ = self__.__hash;
if(!((h__4197__auto__ == null))){
return h__4197__auto__;
} else {
var h__4197__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4197__auto____$1;

return h__4197__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__34249 = other;
if(G__34249){
var bit__4450__auto__ = (G__34249.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4450__auto__) || (G__34249.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__34271 = (i + (2));
i = G__34271;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj34251 = {};
return obj34251;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__34272 = (s + (2));
var G__34273 = d;
s = G__34272;
d = G__34273;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__34274 = (s + (2));
var G__34275 = (d + (2));
s = G__34274;
d = G__34275;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__34252 = cljs.core.aclone(self__.arr);
(G__34252[(idx + (1))] = v);

return G__34252;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__34276 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__34277 = cljs.core.next(es);
ret = G__34276;
es = G__34277;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__34278 = null;
var G__34278__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__34278__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__34278 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__34278__2.call(this,self__,k);
case 3:
return G__34278__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34278.cljs$core$IFn$_invoke$arity$2 = G__34278__2;
G__34278.cljs$core$IFn$_invoke$arity$3 = G__34278__3;
return G__34278;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args34232){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34232)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__34279 = (i + (2));
var G__34280 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__34279;
ret = G__34280;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4754__auto__ = this;
return cljs.core.es6_iterator(this__4754__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__34281_34289 = self__.arr;
G__34281_34289.pop();

G__34281_34289.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__34282 = self__.len;
var G__34283 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__34282,G__34283) : cljs.core.array__GT_transient_hash_map.call(null,G__34282,G__34283));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__34284 = o;
if(G__34284){
var bit__4457__auto__ = (G__34284.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4457__auto__) || (G__34284.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__34284.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__34284);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__34284);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__34285 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__34285) : cljs.core.key.call(null,G__34285));
})(),(function (){var G__34286 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__34286) : cljs.core.val.call(null,G__34286));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__34290 = cljs.core.next(es);
var G__34291 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__34287 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__34287) : cljs.core.key.call(null,G__34287));
})(),(function (){var G__34288 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__34288) : cljs.core.val.call(null,G__34288));
})());
es = G__34290;
tcoll__$2 = G__34291;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__34292 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__34293 = (i + (2));
out = G__34292;
i = G__34293;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__34296 = cljs.core.aclone(arr);
(G__34296[i] = a);

return G__34296;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__34297 = cljs.core.aclone(arr);
(G__34297[i] = a);

(G__34297[j] = b);

return G__34297;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__34302 = init__$1;
var G__34303 = k;
var G__34304 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34302,G__34303,G__34304) : f.call(null,G__34302,G__34303,G__34304));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__34305 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34305) : cljs.core.deref.call(null,G__34305));
} else {
var G__34306 = (i + (2));
var G__34307 = init__$2;
i = G__34306;
init__$1 = G__34307;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__34308 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__34308) : cljs.core.create_inode_seq.call(null,G__34308));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_34322 = (0);
var j_34323 = (0);
while(true){
if((i_34322 < (32))){
if((((self__.bitmap >>> i_34322) & (1)) === (0))){
var G__34324 = (i_34322 + (1));
var G__34325 = j_34323;
i_34322 = G__34324;
j_34323 = G__34325;
continue;
} else {
(nodes[i_34322] = ((!(((self__.arr[j_34323]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_34323])),(self__.arr[j_34323]),(self__.arr[(j_34323 + (1))]),added_leaf_QMARK_):(self__.arr[(j_34323 + (1))])));

var G__34326 = (i_34322 + (1));
var G__34327 = (j_34323 + (2));
i_34322 = G__34326;
j_34323 = G__34327;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__34309 = edit__$1;
var G__34310 = (shift + (5));
var G__34311 = key_or_nil;
var G__34312 = val_or_node;
var G__34313 = hash;
var G__34314 = key;
var G__34315 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__34309,G__34310,G__34311,G__34312,G__34313,G__34314,G__34315) : cljs.core.create_node.call(null,G__34309,G__34310,G__34311,G__34312,G__34313,G__34314,G__34315));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_34328 = (0);
var j_34329 = (0);
while(true){
if((i_34328 < (32))){
if((((self__.bitmap >>> i_34328) & (1)) === (0))){
var G__34330 = (i_34328 + (1));
var G__34331 = j_34329;
i_34328 = G__34330;
j_34329 = G__34331;
continue;
} else {
(nodes[i_34328] = ((!(((self__.arr[j_34329]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_34329])),(self__.arr[j_34329]),(self__.arr[(j_34329 + (1))]),added_leaf_QMARK_):(self__.arr[(j_34329 + (1))])));

var G__34332 = (i_34328 + (1));
var G__34333 = (j_34329 + (2));
i_34328 = G__34332;
j_34329 = G__34333;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__34316 = (shift + (5));
var G__34317 = key_or_nil;
var G__34318 = val_or_node;
var G__34319 = hash;
var G__34320 = key;
var G__34321 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__34316,G__34317,G__34318,G__34319,G__34320,G__34321) : cljs.core.create_node.call(null,G__34316,G__34317,G__34318,G__34319,G__34320,G__34321));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__34334 = (i + (1));
var G__34335 = (j + (2));
var G__34336 = (bitmap | ((1) << i));
i = G__34334;
j = G__34335;
bitmap = G__34336;
continue;
} else {
var G__34337 = (i + (1));
var G__34338 = j;
var G__34339 = bitmap;
i = G__34337;
j = G__34338;
bitmap = G__34339;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__34340 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__34340) : cljs.core.create_array_node_seq.call(null,G__34340));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__34341 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34341) : cljs.core.deref.call(null,G__34341));
} else {
var G__34342 = (i + (1));
var G__34343 = init__$2;
i = G__34342;
init__$1 = G__34343;
continue;
}
} else {
var G__34344 = (i + (1));
var G__34345 = init__$1;
i = G__34344;
init__$1 = G__34345;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__34346 = (i + (2));
i = G__34346;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__34347 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__34347) : cljs.core.create_inode_seq.call(null,G__34347));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4197__auto__ = self__.__hash;
if(!((h__4197__auto__ == null))){
return h__4197__auto__;
} else {
var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4197__auto____$1;

return h__4197__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__34348 = self__.nodes;
var G__34349 = (self__.i + (2));
var G__34350 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__34348,G__34349,G__34350) : cljs.core.create_inode_seq.call(null,G__34348,G__34349,G__34350));
} else {
var G__34351 = self__.nodes;
var G__34352 = self__.i;
var G__34353 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__34351,G__34352,G__34353) : cljs.core.create_inode_seq.call(null,G__34351,G__34352,G__34353));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4754__auto__ = this;
return cljs.core.es6_iterator(this__4754__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__34357 = (j + (2));
j = G__34357;
continue;
}
} else {
var G__34358 = (j + (2));
j = G__34358;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4197__auto__ = self__.__hash;
if(!((h__4197__auto__ == null))){
return h__4197__auto__;
} else {
var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4197__auto____$1;

return h__4197__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__34359 = null;
var G__34360 = self__.nodes;
var G__34361 = self__.i;
var G__34362 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__34359,G__34360,G__34361,G__34362) : cljs.core.create_array_node_seq.call(null,G__34359,G__34360,G__34361,G__34362));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4754__auto__ = this;
return cljs.core.es6_iterator(this__4754__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__34367 = (j + (1));
j = G__34367;
continue;
}
} else {
var G__34368 = (j + (1));
j = G__34368;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__34370 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__34370) : cljs.core.keys.call(null,G__34370));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__34371 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__34371) : cljs.core.vals.call(null,G__34371));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__34372 = cljs.core.seq(coll);
var chunk__34373 = null;
var count__34374 = (0);
var i__34375 = (0);
while(true){
if((i__34375 < count__34374)){
var vec__34376 = chunk__34373.cljs$core$IIndexed$_nth$arity$2(null,i__34375);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34376,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34376,(1),null);
var G__34377_34388 = v;
var G__34378_34389 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34377_34388,G__34378_34389) : f.call(null,G__34377_34388,G__34378_34389));

var G__34390 = seq__34372;
var G__34391 = chunk__34373;
var G__34392 = count__34374;
var G__34393 = (i__34375 + (1));
seq__34372 = G__34390;
chunk__34373 = G__34391;
count__34374 = G__34392;
i__34375 = G__34393;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__34372);
if(temp__4126__auto__){
var seq__34372__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__34372__$1)){
var c__4563__auto__ = cljs.core.chunk_first(seq__34372__$1);
var G__34394 = cljs.core.chunk_rest(seq__34372__$1);
var G__34395 = c__4563__auto__;
var G__34396 = cljs.core.count(c__4563__auto__);
var G__34397 = (0);
seq__34372 = G__34394;
chunk__34373 = G__34395;
count__34374 = G__34396;
i__34375 = G__34397;
continue;
} else {
var vec__34379 = cljs.core.first(seq__34372__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34379,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34379,(1),null);
var G__34380_34398 = v;
var G__34381_34399 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34380_34398,G__34381_34399) : f.call(null,G__34380_34398,G__34381_34399));

var G__34400 = cljs.core.next(seq__34372__$1);
var G__34401 = null;
var G__34402 = (0);
var G__34403 = (0);
seq__34372 = G__34400;
chunk__34373 = G__34401;
count__34374 = G__34402;
i__34375 = G__34403;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__34382 = init;
var G__34383 = null;
var G__34384 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34382,G__34383,G__34384) : f.call(null,G__34382,G__34383,G__34384));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__34385 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34385) : cljs.core.deref.call(null,G__34385));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4197__auto__ = self__.__hash;
if(!((h__4197__auto__ == null))){
return h__4197__auto__;
} else {
var h__4197__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4197__auto____$1;

return h__4197__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj34387 = {};
return obj34387;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__34404 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__34405 = cljs.core.next(es);
ret = G__34404;
es = G__34405;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__34406 = null;
var G__34406__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__34406__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__34406 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__34406__2.call(this,self__,k);
case 3:
return G__34406__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34406.cljs$core$IFn$_invoke$arity$2 = G__34406__2;
G__34406.cljs$core$IFn$_invoke$arity$3 = G__34406__3;
return G__34406;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args34369){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34369)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__34407 = (i + (2));
var G__34408 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__34407;
ret = G__34408;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__34409 = (i + (1));
var G__34410 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__34409;
out = G__34410;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4754__auto__ = this;
return cljs.core.es6_iterator(this__4754__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__34411 = o;
if(G__34411){
var bit__4457__auto__ = (G__34411.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4457__auto__) || (G__34411.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__34411.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__34411);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__34411);
}
})()){
return tcoll.assoc_BANG_((function (){var G__34412 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__34412) : cljs.core.key.call(null,G__34412));
})(),(function (){var G__34413 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__34413) : cljs.core.val.call(null,G__34413));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__34416 = cljs.core.next(es);
var G__34417 = tcoll__$1.assoc_BANG_((function (){var G__34414 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__34414) : cljs.core.key.call(null,G__34414));
})(),(function (){var G__34415 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__34415) : cljs.core.val.call(null,G__34415));
})());
es = G__34416;
tcoll__$1 = G__34417;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__34418 = ((ascending_QMARK_)?t.left:t.right);
var G__34419 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__34418;
stack__$1 = G__34419;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4197__auto__ = self__.__hash;
if(!((h__4197__auto__ == null))){
return h__4197__auto__;
} else {
var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4197__auto____$1;

return h__4197__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4754__auto__ = this;
return cljs.core.es6_iterator(this__4754__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__34432 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34432) : cljs.core.deref.call(null,G__34432));
} else {
var init__$2 = (function (){var G__34433 = init__$1;
var G__34434 = node.key;
var G__34435 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34433,G__34434,G__34435) : f.call(null,G__34433,G__34434,G__34435));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__34436 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34436) : cljs.core.deref.call(null,G__34436));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__34437 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34437) : cljs.core.deref.call(null,G__34437));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4197__auto__ = self__.__hash;
if(!((h__4197__auto__ == null))){
return h__4197__auto__;
} else {
var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4197__auto____$1;

return h__4197__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__34439 = null;
var G__34439__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__34439__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__34439 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__34439__2.call(this,self__,k);
case 3:
return G__34439__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34439.cljs$core$IFn$_invoke$arity$2 = G__34439__2;
G__34439.cljs$core$IFn$_invoke$arity$3 = G__34439__3;
return G__34439;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args34438){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34438)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4754__auto__ = this;
return cljs.core.es6_iterator(this__4754__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4197__auto__ = self__.__hash;
if(!((h__4197__auto__ == null))){
return h__4197__auto__;
} else {
var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4197__auto____$1;

return h__4197__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__34441 = null;
var G__34441__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__34441__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__34441 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__34441__2.call(this,self__,k);
case 3:
return G__34441__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34441.cljs$core$IFn$_invoke$arity$2 = G__34441__2;
G__34441.cljs$core$IFn$_invoke$arity$3 = G__34441__3;
return G__34441;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args34440){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34440)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4754__auto__ = this;
return cljs.core.es6_iterator(this__4754__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__34454 = k;
var G__34455 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__34454,G__34455) : comp.call(null,G__34454,G__34455));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__34474 = k;
var G__34475 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__34474,G__34475) : comp.call(null,G__34474,G__34475));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__34486 = k;
var G__34487 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__34486,G__34487) : comp.call(null,G__34486,G__34487));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__34489 = cljs.core.seq(coll);
var chunk__34490 = null;
var count__34491 = (0);
var i__34492 = (0);
while(true){
if((i__34492 < count__34491)){
var vec__34493 = chunk__34490.cljs$core$IIndexed$_nth$arity$2(null,i__34492);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34493,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34493,(1),null);
var G__34494_34506 = v;
var G__34495_34507 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34494_34506,G__34495_34507) : f.call(null,G__34494_34506,G__34495_34507));

var G__34508 = seq__34489;
var G__34509 = chunk__34490;
var G__34510 = count__34491;
var G__34511 = (i__34492 + (1));
seq__34489 = G__34508;
chunk__34490 = G__34509;
count__34491 = G__34510;
i__34492 = G__34511;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__34489);
if(temp__4126__auto__){
var seq__34489__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__34489__$1)){
var c__4563__auto__ = cljs.core.chunk_first(seq__34489__$1);
var G__34512 = cljs.core.chunk_rest(seq__34489__$1);
var G__34513 = c__4563__auto__;
var G__34514 = cljs.core.count(c__4563__auto__);
var G__34515 = (0);
seq__34489 = G__34512;
chunk__34490 = G__34513;
count__34491 = G__34514;
i__34492 = G__34515;
continue;
} else {
var vec__34496 = cljs.core.first(seq__34489__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34496,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34496,(1),null);
var G__34497_34516 = v;
var G__34498_34517 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34497_34516,G__34498_34517) : f.call(null,G__34497_34516,G__34498_34517));

var G__34518 = cljs.core.next(seq__34489__$1);
var G__34519 = null;
var G__34520 = (0);
var G__34521 = (0);
seq__34489 = G__34518;
chunk__34490 = G__34519;
count__34491 = G__34520;
i__34492 = G__34521;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__34499 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__34499) : cljs.core.keys.call(null,G__34499));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__34500 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__34500) : cljs.core.vals.call(null,G__34500));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__34501 = k;
var G__34502 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__34501,G__34502) : self__.comp.call(null,G__34501,G__34502));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__34522 = t.left;
t = G__34522;
continue;
} else {
var G__34523 = t.right;
t = G__34523;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4197__auto__ = self__.__hash;
if(!((h__4197__auto__ == null))){
return h__4197__auto__;
} else {
var h__4197__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4197__auto____$1;

return h__4197__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__34524 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__34525 = cljs.core.next(es);
ret = G__34524;
es = G__34525;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__34526 = null;
var G__34526__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__34526__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__34526 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__34526__2.call(this,self__,k);
case 3:
return G__34526__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34526.cljs$core$IFn$_invoke$arity$2 = G__34526__2;
G__34526.cljs$core$IFn$_invoke$arity$3 = G__34526__3;
return G__34526;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args34488){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34488)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__34503 = k;
var G__34504 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__34503,G__34504) : self__.comp.call(null,G__34503,G__34504));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__34527 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__34528 = t.left;
stack = G__34527;
t = G__34528;
continue;
} else {
var G__34529 = stack;
var G__34530 = t.right;
stack = G__34529;
t = G__34530;
continue;
}
} else {
if((c > (0))){
var G__34531 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__34532 = t.right;
stack = G__34531;
t = G__34532;
continue;
} else {
var G__34533 = stack;
var G__34534 = t.left;
stack = G__34533;
t = G__34534;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__34505 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__34505) : cljs.core.key.call(null,G__34505));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4754__auto__ = this;
return cljs.core.es6_iterator(this__4754__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__34535 = cljs.core.nnext(in$);
var G__34536 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__34535;
out = G__34536;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__34537__i = 0, G__34537__a = new Array(arguments.length -  0);
while (G__34537__i < G__34537__a.length) {G__34537__a[G__34537__i] = arguments[G__34537__i + 0]; ++G__34537__i;}
  keyvals = new cljs.core.IndexedSeq(G__34537__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__34538){
var keyvals = cljs.core.seq(arglist__34538);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__34539__i = 0, G__34539__a = new Array(arguments.length -  0);
while (G__34539__i < G__34539__a.length) {G__34539__a[G__34539__i] = arguments[G__34539__i + 0]; ++G__34539__i;}
  keyvals = new cljs.core.IndexedSeq(G__34539__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__34540){
var keyvals = cljs.core.seq(arglist__34540);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj34544 = {};
return obj34544;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__34545 = cljs.core.nnext(kvs);
kvs = G__34545;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__34546__i = 0, G__34546__a = new Array(arguments.length -  0);
while (G__34546__i < G__34546__a.length) {G__34546__a[G__34546__i] = arguments[G__34546__i + 0]; ++G__34546__i;}
  keyvals = new cljs.core.IndexedSeq(G__34546__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__34547){
var keyvals = cljs.core.seq(arglist__34547);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__34548 = cljs.core.nnext(in$);
var G__34549 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__34548;
out = G__34549;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__34550__i = 0, G__34550__a = new Array(arguments.length -  0);
while (G__34550__i < G__34550__a.length) {G__34550__a[G__34550__i] = arguments[G__34550__i + 0]; ++G__34550__i;}
  keyvals = new cljs.core.IndexedSeq(G__34550__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__34551){
var keyvals = cljs.core.seq(arglist__34551);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__34552 = cljs.core.nnext(in$);
var G__34553 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__34552;
out = G__34553;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__34554__i = 0, G__34554__a = new Array(arguments.length -  1);
while (G__34554__i < G__34554__a.length) {G__34554__a[G__34554__i] = arguments[G__34554__i + 1]; ++G__34554__i;}
  keyvals = new cljs.core.IndexedSeq(G__34554__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__34555){
var comparator = cljs.core.first(arglist__34555);
var keyvals = cljs.core.rest(arglist__34555);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__34556 = self__.mseq;
if(G__34556){
var bit__4457__auto__ = (G__34556.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4457__auto__) || (G__34556.cljs$core$INext$)){
return true;
} else {
if((!G__34556.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__34556);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__34556);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__34557 = self__.mseq;
if(G__34557){
var bit__4457__auto__ = (G__34557.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4457__auto__) || (G__34557.cljs$core$INext$)){
return true;
} else {
if((!G__34557.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__34557);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__34557);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4754__auto__ = this;
return cljs.core.es6_iterator(this__4754__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__34558 = self__.mseq;
if(G__34558){
var bit__4457__auto__ = (G__34558.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4457__auto__) || (G__34558.cljs$core$INext$)){
return true;
} else {
if((!G__34558.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__34558);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__34558);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__34559 = self__.mseq;
if(G__34559){
var bit__4457__auto__ = (G__34559.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4457__auto__) || (G__34559.cljs$core$INext$)){
return true;
} else {
if((!G__34559.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__34559);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__34559);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4754__auto__ = this;
return cljs.core.es6_iterator(this__4754__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__34560_SHARP_,p2__34561_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3776__auto__ = p1__34560_SHARP_;
if(cljs.core.truth_(or__3776__auto__)){
return or__3776__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__34561_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__34562__i = 0, G__34562__a = new Array(arguments.length -  0);
while (G__34562__i < G__34562__a.length) {G__34562__a[G__34562__i] = arguments[G__34562__i + 0]; ++G__34562__i;}
  maps = new cljs.core.IndexedSeq(G__34562__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__34563){
var maps = cljs.core.seq(arglist__34563);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__34566 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__34567 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34566,G__34567) : f.call(null,G__34566,G__34567));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3776__auto__ = m1;
if(cljs.core.truth_(or__3776__auto__)){
return or__3776__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__34568__i = 0, G__34568__a = new Array(arguments.length -  1);
while (G__34568__i < G__34568__a.length) {G__34568__a[G__34568__i] = arguments[G__34568__i + 1]; ++G__34568__i;}
  maps = new cljs.core.IndexedSeq(G__34568__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__34569){
var f = cljs.core.first(arglist__34569);
var maps = cljs.core.rest(arglist__34569);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,cljs.core.constant$keyword$115);
var G__34570 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.constant$keyword$115))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__34571 = cljs.core.next(keys);
ret = G__34570;
keys = G__34571;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__34574 = cljs.core.seq(coll);
var chunk__34575 = null;
var count__34576 = (0);
var i__34577 = (0);
while(true){
if((i__34577 < count__34576)){
var vec__34578 = chunk__34575.cljs$core$IIndexed$_nth$arity$2(null,i__34577);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34578,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34578,(1),null);
var G__34579_34584 = v;
var G__34580_34585 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34579_34584,G__34580_34585) : f.call(null,G__34579_34584,G__34580_34585));

var G__34586 = seq__34574;
var G__34587 = chunk__34575;
var G__34588 = count__34576;
var G__34589 = (i__34577 + (1));
seq__34574 = G__34586;
chunk__34575 = G__34587;
count__34576 = G__34588;
i__34577 = G__34589;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__34574);
if(temp__4126__auto__){
var seq__34574__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__34574__$1)){
var c__4563__auto__ = cljs.core.chunk_first(seq__34574__$1);
var G__34590 = cljs.core.chunk_rest(seq__34574__$1);
var G__34591 = c__4563__auto__;
var G__34592 = cljs.core.count(c__4563__auto__);
var G__34593 = (0);
seq__34574 = G__34590;
chunk__34575 = G__34591;
count__34576 = G__34592;
i__34577 = G__34593;
continue;
} else {
var vec__34581 = cljs.core.first(seq__34574__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34581,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34581,(1),null);
var G__34582_34594 = v;
var G__34583_34595 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34582_34594,G__34583_34595) : f.call(null,G__34582_34594,G__34583_34595));

var G__34596 = cljs.core.next(seq__34574__$1);
var G__34597 = null;
var G__34598 = (0);
var G__34599 = (0);
seq__34574 = G__34596;
chunk__34575 = G__34597;
count__34576 = G__34598;
i__34577 = G__34599;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4197__auto__ = self__.__hash;
if(!((h__4197__auto__ == null))){
return h__4197__auto__;
} else {
var h__4197__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4197__auto____$1;

return h__4197__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__34572_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__34572_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__34600 = null;
var G__34600__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__34600__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__34600 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__34600__2.call(this,self__,k);
case 3:
return G__34600__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34600.cljs$core$IFn$_invoke$arity$2 = G__34600__2;
G__34600.cljs$core$IFn$_invoke$arity$3 = G__34600__3;
return G__34600;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args34573){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34573)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__34601 = (i + (1));
var G__34602 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__34601;
out = G__34602;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__34603 = (i + (1));
var G__34604 = cljs.core._conj_BANG_(out,(items[i]));
i = G__34603;
out = G__34604;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4754__auto__ = this;
return cljs.core.es6_iterator(this__4754__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__34606 = null;
var G__34606__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__34606__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__34606 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__34606__2.call(this,self__,k);
case 3:
return G__34606__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34606.cljs$core$IFn$_invoke$arity$2 = G__34606__2;
G__34606.cljs$core$IFn$_invoke$arity$3 = G__34606__3;
return G__34606;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args34605){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34605)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__34609 = cljs.core.seq(coll);
var chunk__34610 = null;
var count__34611 = (0);
var i__34612 = (0);
while(true){
if((i__34612 < count__34611)){
var vec__34613 = chunk__34610.cljs$core$IIndexed$_nth$arity$2(null,i__34612);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34613,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34613,(1),null);
var G__34614_34619 = v;
var G__34615_34620 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34614_34619,G__34615_34620) : f.call(null,G__34614_34619,G__34615_34620));

var G__34621 = seq__34609;
var G__34622 = chunk__34610;
var G__34623 = count__34611;
var G__34624 = (i__34612 + (1));
seq__34609 = G__34621;
chunk__34610 = G__34622;
count__34611 = G__34623;
i__34612 = G__34624;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__34609);
if(temp__4126__auto__){
var seq__34609__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__34609__$1)){
var c__4563__auto__ = cljs.core.chunk_first(seq__34609__$1);
var G__34625 = cljs.core.chunk_rest(seq__34609__$1);
var G__34626 = c__4563__auto__;
var G__34627 = cljs.core.count(c__4563__auto__);
var G__34628 = (0);
seq__34609 = G__34625;
chunk__34610 = G__34626;
count__34611 = G__34627;
i__34612 = G__34628;
continue;
} else {
var vec__34616 = cljs.core.first(seq__34609__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34616,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34616,(1),null);
var G__34617_34629 = v;
var G__34618_34630 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34617_34629,G__34618_34630) : f.call(null,G__34617_34629,G__34618_34630));

var G__34631 = cljs.core.next(seq__34609__$1);
var G__34632 = null;
var G__34633 = (0);
var G__34634 = (0);
seq__34609 = G__34631;
chunk__34610 = G__34632;
count__34611 = G__34633;
i__34612 = G__34634;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4197__auto__ = self__.__hash;
if(!((h__4197__auto__ == null))){
return h__4197__auto__;
} else {
var h__4197__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4197__auto____$1;

return h__4197__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__34607_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__34607_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__34635 = null;
var G__34635__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__34635__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__34635 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__34635__2.call(this,self__,k);
case 3:
return G__34635__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34635.cljs$core$IFn$_invoke$arity$2 = G__34635__2;
G__34635.cljs$core$IFn$_invoke$arity$3 = G__34635__3;
return G__34635;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args34608){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34608)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4754__auto__ = this;
return cljs.core.es6_iterator(this__4754__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4657__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4657__auto__.length)){
var G__34636 = (i + (1));
var G__34637 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__34636;
res = G__34637;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__34638 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__34639 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__34638;
out = G__34639;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__34640__delegate = function (keys){
return cljs.core.set(keys);
};
var G__34640 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__34641__i = 0, G__34641__a = new Array(arguments.length -  0);
while (G__34641__i < G__34641__a.length) {G__34641__a[G__34641__i] = arguments[G__34641__i + 0]; ++G__34641__i;}
  keys = new cljs.core.IndexedSeq(G__34641__a,0);
} 
return G__34640__delegate.call(this,keys);};
G__34640.cljs$lang$maxFixedArity = 0;
G__34640.cljs$lang$applyTo = (function (arglist__34642){
var keys = cljs.core.seq(arglist__34642);
return G__34640__delegate(keys);
});
G__34640.cljs$core$IFn$_invoke$arity$variadic = G__34640__delegate;
return G__34640;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__34643 = null;
if (arguments.length > 0) {
var G__34644__i = 0, G__34644__a = new Array(arguments.length -  0);
while (G__34644__i < G__34644__a.length) {G__34644__a[G__34644__i] = arguments[G__34644__i + 0]; ++G__34644__i;}
G__34643 = new cljs.core.IndexedSeq(G__34644__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__34643);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__34645__i = 0, G__34645__a = new Array(arguments.length -  0);
while (G__34645__i < G__34645__a.length) {G__34645__a[G__34645__i] = arguments[G__34645__i + 0]; ++G__34645__i;}
  keys = new cljs.core.IndexedSeq(G__34645__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__34646){
var keys = cljs.core.seq(arglist__34646);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__34647__i = 0, G__34647__a = new Array(arguments.length -  1);
while (G__34647__i < G__34647__a.length) {G__34647__a[G__34647__i] = arguments[G__34647__i + 1]; ++G__34647__i;}
  keys = new cljs.core.IndexedSeq(G__34647__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__34648){
var comparator = cljs.core.first(arglist__34648);
var keys = cljs.core.rest(arglist__34648);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__34649_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__34649_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__34649_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__34650_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__34650_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__34650_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__34671 = null;
var G__34671__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34671__1 = (function (result){
var G__34661 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34661) : rf.call(null,G__34661));
});
var G__34671__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__34662 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34662) : cljs.core.deref.call(null,G__34662));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__34663 = result;
var G__34664 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34663,G__34664) : rf.call(null,G__34663,G__34664));
}
});
G__34671 = function(result,input){
switch(arguments.length){
case 0:
return G__34671__0.call(this);
case 1:
return G__34671__1.call(this,result);
case 2:
return G__34671__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34671.cljs$core$IFn$_invoke$arity$0 = G__34671__0;
G__34671.cljs$core$IFn$_invoke$arity$1 = G__34671__1;
G__34671.cljs$core$IFn$_invoke$arity$2 = G__34671__2;
return G__34671;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__34669,seen__$1){
while(true){
var vec__34670 = p__34669;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34670,(0),null);
var xs__$1 = vec__34670;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__34672 = cljs.core.rest(s);
var G__34673 = seen__$1;
p__34669 = G__34672;
seen__$1 = G__34673;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__34674 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__34675 = cljs.core.next(s__$1);
ret = G__34674;
s__$1 = G__34675;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__34677 = x;
if(G__34677){
var bit__4450__auto__ = (G__34677.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4450__auto__) || (G__34677.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__34678 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__34679 = cljs.core.next(ks);
var G__34680 = cljs.core.next(vs);
map = G__34678;
ks = G__34679;
vs = G__34680;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__34691 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__34691) : k.call(null,G__34691));
})() > (function (){var G__34692 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__34692) : k.call(null,G__34692));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__34693__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__34681_SHARP_,p2__34682_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__34681_SHARP_,p2__34682_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__34693 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__34694__i = 0, G__34694__a = new Array(arguments.length -  3);
while (G__34694__i < G__34694__a.length) {G__34694__a[G__34694__i] = arguments[G__34694__i + 3]; ++G__34694__i;}
  more = new cljs.core.IndexedSeq(G__34694__a,0);
} 
return G__34693__delegate.call(this,k,x,y,more);};
G__34693.cljs$lang$maxFixedArity = 3;
G__34693.cljs$lang$applyTo = (function (arglist__34695){
var k = cljs.core.first(arglist__34695);
arglist__34695 = cljs.core.next(arglist__34695);
var x = cljs.core.first(arglist__34695);
arglist__34695 = cljs.core.next(arglist__34695);
var y = cljs.core.first(arglist__34695);
var more = cljs.core.rest(arglist__34695);
return G__34693__delegate(k,x,y,more);
});
G__34693.cljs$core$IFn$_invoke$arity$variadic = G__34693__delegate;
return G__34693;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__34696 = null;
if (arguments.length > 3) {
var G__34697__i = 0, G__34697__a = new Array(arguments.length -  3);
while (G__34697__i < G__34697__a.length) {G__34697__a[G__34697__i] = arguments[G__34697__i + 3]; ++G__34697__i;}
G__34696 = new cljs.core.IndexedSeq(G__34697__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__34696);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__34708 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__34708) : k.call(null,G__34708));
})() < (function (){var G__34709 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__34709) : k.call(null,G__34709));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__34710__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__34698_SHARP_,p2__34699_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__34698_SHARP_,p2__34699_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__34710 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__34711__i = 0, G__34711__a = new Array(arguments.length -  3);
while (G__34711__i < G__34711__a.length) {G__34711__a[G__34711__i] = arguments[G__34711__i + 3]; ++G__34711__i;}
  more = new cljs.core.IndexedSeq(G__34711__a,0);
} 
return G__34710__delegate.call(this,k,x,y,more);};
G__34710.cljs$lang$maxFixedArity = 3;
G__34710.cljs$lang$applyTo = (function (arglist__34712){
var k = cljs.core.first(arglist__34712);
arglist__34712 = cljs.core.next(arglist__34712);
var x = cljs.core.first(arglist__34712);
arglist__34712 = cljs.core.next(arglist__34712);
var y = cljs.core.first(arglist__34712);
var more = cljs.core.rest(arglist__34712);
return G__34710__delegate(k,x,y,more);
});
G__34710.cljs$core$IFn$_invoke$arity$variadic = G__34710__delegate;
return G__34710;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__34713 = null;
if (arguments.length > 3) {
var G__34714__i = 0, G__34714__a = new Array(arguments.length -  3);
while (G__34714__i < G__34714__a.length) {G__34714__a[G__34714__i] = arguments[G__34714__i + 3]; ++G__34714__i;}
G__34713 = new cljs.core.IndexedSeq(G__34714__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__34713);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__34731 = null;
var G__34731__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34731__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__34726 = result;
var G__34727 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34726,G__34727) : rf.call(null,G__34726,G__34727));
})());
})());
var G__34728 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34728) : rf.call(null,G__34728));
});
var G__34731__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__34729 = result;
var G__34730 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34729,G__34730) : rf.call(null,G__34729,G__34730));
} else {
return result;
}
});
G__34731 = function(result,input){
switch(arguments.length){
case 0:
return G__34731__0.call(this);
case 1:
return G__34731__1.call(this,result);
case 2:
return G__34731__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34731.cljs$core$IFn$_invoke$arity$0 = G__34731__0;
G__34731.cljs$core$IFn$_invoke$arity$1 = G__34731__1;
G__34731.cljs$core$IFn$_invoke$arity$2 = G__34731__2;
return G__34731;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__34744 = null;
var G__34744__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34744__1 = (function (result){
var G__34739 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34739) : rf.call(null,G__34739));
});
var G__34744__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__34740 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__34740) : pred.call(null,G__34740));
})())){
var G__34741 = result;
var G__34742 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34741,G__34742) : rf.call(null,G__34741,G__34742));
} else {
return cljs.core.reduced(result);
}
});
G__34744 = function(result,input){
switch(arguments.length){
case 0:
return G__34744__0.call(this);
case 1:
return G__34744__1.call(this,result);
case 2:
return G__34744__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34744.cljs$core$IFn$_invoke$arity$0 = G__34744__0;
G__34744.cljs$core$IFn$_invoke$arity$1 = G__34744__1;
G__34744.cljs$core$IFn$_invoke$arity$2 = G__34744__2;
return G__34744;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__34743 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__34743) : pred.call(null,G__34743));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__34749 = (function (){var G__34751 = cljs.core._entry_key(sc,e);
var G__34752 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__34751,G__34752) : comp.call(null,G__34751,G__34752));
})();
var G__34750 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__34749,G__34750) : test.call(null,G__34749,G__34750));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__34756 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34756,(0),null);
var s = vec__34756;
if(cljs.core.truth_((function (){var G__34757 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__34757) : include.call(null,G__34757));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__34758 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34758,(0),null);
var s = vec__34758;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__34762 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34762,(0),null);
var s = vec__34762;
if(cljs.core.truth_((function (){var G__34763 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__34763) : include.call(null,G__34763));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__34764 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34764,(0),null);
var s = vec__34764;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__34765 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__34765) : Math.ceil.call(null,G__34765));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4197__auto__ = self__.__hash;
if(!((h__4197__auto__ == null))){
return h__4197__auto__;
} else {
var h__4197__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4197__auto____$1;

return h__4197__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__34766 = ret;
var G__34767 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34766,G__34767) : f.call(null,G__34766,G__34767));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__34768 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34768) : cljs.core.deref.call(null,G__34768));
} else {
var G__34769 = (i + self__.step);
var G__34770 = ret__$1;
i = G__34769;
ret = G__34770;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4754__auto__ = this;
return cljs.core.es6_iterator(this__4754__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__34788 = null;
var G__34788__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34788__1 = (function (result){
var G__34785 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34785) : rf.call(null,G__34785));
});
var G__34788__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__34786 = result;
var G__34787 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34786,G__34787) : rf.call(null,G__34786,G__34787));
} else {
return result;
}
});
G__34788 = function(result,input){
switch(arguments.length){
case 0:
return G__34788__0.call(this);
case 1:
return G__34788__1.call(this,result);
case 2:
return G__34788__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34788.cljs$core$IFn$_invoke$arity$0 = G__34788__0;
G__34788.cljs$core$IFn$_invoke$arity$1 = G__34788__1;
G__34788.cljs$core$IFn$_invoke$arity$2 = G__34788__2;
return G__34788;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$116);
return ((function (a,pa){
return (function() {
var G__34810 = null;
var G__34810__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34810__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__34801 = result;
var G__34802 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34801,G__34802) : rf.call(null,G__34801,G__34802));
})());
})());
var G__34803 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34803) : rf.call(null,G__34803));
});
var G__34810__2 = (function (result,input){
var pval = (function (){var G__34804 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34804) : cljs.core.deref.call(null,G__34804));
})();
var val = (function (){var G__34805 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34805) : f.call(null,G__34805));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,cljs.core.constant$keyword$116)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__34806 = result;
var G__34807 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34806,G__34807) : rf.call(null,G__34806,G__34807));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__34810 = function(result,input){
switch(arguments.length){
case 0:
return G__34810__0.call(this);
case 1:
return G__34810__1.call(this,result);
case 2:
return G__34810__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34810.cljs$core$IFn$_invoke$arity$0 = G__34810__0;
G__34810.cljs$core$IFn$_invoke$arity$1 = G__34810__1;
G__34810.cljs$core$IFn$_invoke$arity$2 = G__34810__2;
return G__34810;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__34808 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34808) : f.call(null,G__34808));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__34789_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__34809 = p1__34789_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34809) : f.call(null,G__34809));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__34819 = init;
var G__34820 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34819,G__34820) : f.call(null,G__34819,G__34820));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__34915 = null;
var G__34915__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__34915__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__34873 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34873) : f.call(null,G__34873));
})()],null));
});
var G__34915__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__34874 = x;
var G__34875 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34874,G__34875) : f.call(null,G__34874,G__34875));
})()],null));
});
var G__34915__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__34876 = x;
var G__34877 = y;
var G__34878 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34876,G__34877,G__34878) : f.call(null,G__34876,G__34877,G__34878));
})()],null));
});
var G__34915__4 = (function() { 
var G__34916__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__34916 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34917__i = 0, G__34917__a = new Array(arguments.length -  3);
while (G__34917__i < G__34917__a.length) {G__34917__a[G__34917__i] = arguments[G__34917__i + 3]; ++G__34917__i;}
  args = new cljs.core.IndexedSeq(G__34917__a,0);
} 
return G__34916__delegate.call(this,x,y,z,args);};
G__34916.cljs$lang$maxFixedArity = 3;
G__34916.cljs$lang$applyTo = (function (arglist__34918){
var x = cljs.core.first(arglist__34918);
arglist__34918 = cljs.core.next(arglist__34918);
var y = cljs.core.first(arglist__34918);
arglist__34918 = cljs.core.next(arglist__34918);
var z = cljs.core.first(arglist__34918);
var args = cljs.core.rest(arglist__34918);
return G__34916__delegate(x,y,z,args);
});
G__34916.cljs$core$IFn$_invoke$arity$variadic = G__34916__delegate;
return G__34916;
})()
;
G__34915 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__34915__0.call(this);
case 1:
return G__34915__1.call(this,x);
case 2:
return G__34915__2.call(this,x,y);
case 3:
return G__34915__3.call(this,x,y,z);
default:
var G__34919 = null;
if (arguments.length > 3) {
var G__34920__i = 0, G__34920__a = new Array(arguments.length -  3);
while (G__34920__i < G__34920__a.length) {G__34920__a[G__34920__i] = arguments[G__34920__i + 3]; ++G__34920__i;}
G__34919 = new cljs.core.IndexedSeq(G__34920__a,0);
}
return G__34915__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34919);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34915.cljs$lang$maxFixedArity = 3;
G__34915.cljs$lang$applyTo = G__34915__4.cljs$lang$applyTo;
G__34915.cljs$core$IFn$_invoke$arity$0 = G__34915__0;
G__34915.cljs$core$IFn$_invoke$arity$1 = G__34915__1;
G__34915.cljs$core$IFn$_invoke$arity$2 = G__34915__2;
G__34915.cljs$core$IFn$_invoke$arity$3 = G__34915__3;
G__34915.cljs$core$IFn$_invoke$arity$variadic = G__34915__4.cljs$core$IFn$_invoke$arity$variadic;
return G__34915;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__34921 = null;
var G__34921__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__34921__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__34879 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34879) : f.call(null,G__34879));
})(),(function (){var G__34880 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__34880) : g.call(null,G__34880));
})()],null));
});
var G__34921__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__34881 = x;
var G__34882 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34881,G__34882) : f.call(null,G__34881,G__34882));
})(),(function (){var G__34883 = x;
var G__34884 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__34883,G__34884) : g.call(null,G__34883,G__34884));
})()],null));
});
var G__34921__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__34885 = x;
var G__34886 = y;
var G__34887 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34885,G__34886,G__34887) : f.call(null,G__34885,G__34886,G__34887));
})(),(function (){var G__34888 = x;
var G__34889 = y;
var G__34890 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__34888,G__34889,G__34890) : g.call(null,G__34888,G__34889,G__34890));
})()],null));
});
var G__34921__4 = (function() { 
var G__34922__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__34922 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34923__i = 0, G__34923__a = new Array(arguments.length -  3);
while (G__34923__i < G__34923__a.length) {G__34923__a[G__34923__i] = arguments[G__34923__i + 3]; ++G__34923__i;}
  args = new cljs.core.IndexedSeq(G__34923__a,0);
} 
return G__34922__delegate.call(this,x,y,z,args);};
G__34922.cljs$lang$maxFixedArity = 3;
G__34922.cljs$lang$applyTo = (function (arglist__34924){
var x = cljs.core.first(arglist__34924);
arglist__34924 = cljs.core.next(arglist__34924);
var y = cljs.core.first(arglist__34924);
arglist__34924 = cljs.core.next(arglist__34924);
var z = cljs.core.first(arglist__34924);
var args = cljs.core.rest(arglist__34924);
return G__34922__delegate(x,y,z,args);
});
G__34922.cljs$core$IFn$_invoke$arity$variadic = G__34922__delegate;
return G__34922;
})()
;
G__34921 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__34921__0.call(this);
case 1:
return G__34921__1.call(this,x);
case 2:
return G__34921__2.call(this,x,y);
case 3:
return G__34921__3.call(this,x,y,z);
default:
var G__34925 = null;
if (arguments.length > 3) {
var G__34926__i = 0, G__34926__a = new Array(arguments.length -  3);
while (G__34926__i < G__34926__a.length) {G__34926__a[G__34926__i] = arguments[G__34926__i + 3]; ++G__34926__i;}
G__34925 = new cljs.core.IndexedSeq(G__34926__a,0);
}
return G__34921__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34925);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34921.cljs$lang$maxFixedArity = 3;
G__34921.cljs$lang$applyTo = G__34921__4.cljs$lang$applyTo;
G__34921.cljs$core$IFn$_invoke$arity$0 = G__34921__0;
G__34921.cljs$core$IFn$_invoke$arity$1 = G__34921__1;
G__34921.cljs$core$IFn$_invoke$arity$2 = G__34921__2;
G__34921.cljs$core$IFn$_invoke$arity$3 = G__34921__3;
G__34921.cljs$core$IFn$_invoke$arity$variadic = G__34921__4.cljs$core$IFn$_invoke$arity$variadic;
return G__34921;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__34927 = null;
var G__34927__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__34927__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__34891 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34891) : f.call(null,G__34891));
})(),(function (){var G__34892 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__34892) : g.call(null,G__34892));
})(),(function (){var G__34893 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__34893) : h.call(null,G__34893));
})()],null));
});
var G__34927__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__34894 = x;
var G__34895 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34894,G__34895) : f.call(null,G__34894,G__34895));
})(),(function (){var G__34896 = x;
var G__34897 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__34896,G__34897) : g.call(null,G__34896,G__34897));
})(),(function (){var G__34898 = x;
var G__34899 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__34898,G__34899) : h.call(null,G__34898,G__34899));
})()],null));
});
var G__34927__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__34900 = x;
var G__34901 = y;
var G__34902 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34900,G__34901,G__34902) : f.call(null,G__34900,G__34901,G__34902));
})(),(function (){var G__34903 = x;
var G__34904 = y;
var G__34905 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__34903,G__34904,G__34905) : g.call(null,G__34903,G__34904,G__34905));
})(),(function (){var G__34906 = x;
var G__34907 = y;
var G__34908 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__34906,G__34907,G__34908) : h.call(null,G__34906,G__34907,G__34908));
})()],null));
});
var G__34927__4 = (function() { 
var G__34928__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__34928 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34929__i = 0, G__34929__a = new Array(arguments.length -  3);
while (G__34929__i < G__34929__a.length) {G__34929__a[G__34929__i] = arguments[G__34929__i + 3]; ++G__34929__i;}
  args = new cljs.core.IndexedSeq(G__34929__a,0);
} 
return G__34928__delegate.call(this,x,y,z,args);};
G__34928.cljs$lang$maxFixedArity = 3;
G__34928.cljs$lang$applyTo = (function (arglist__34930){
var x = cljs.core.first(arglist__34930);
arglist__34930 = cljs.core.next(arglist__34930);
var y = cljs.core.first(arglist__34930);
arglist__34930 = cljs.core.next(arglist__34930);
var z = cljs.core.first(arglist__34930);
var args = cljs.core.rest(arglist__34930);
return G__34928__delegate(x,y,z,args);
});
G__34928.cljs$core$IFn$_invoke$arity$variadic = G__34928__delegate;
return G__34928;
})()
;
G__34927 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__34927__0.call(this);
case 1:
return G__34927__1.call(this,x);
case 2:
return G__34927__2.call(this,x,y);
case 3:
return G__34927__3.call(this,x,y,z);
default:
var G__34931 = null;
if (arguments.length > 3) {
var G__34932__i = 0, G__34932__a = new Array(arguments.length -  3);
while (G__34932__i < G__34932__a.length) {G__34932__a[G__34932__i] = arguments[G__34932__i + 3]; ++G__34932__i;}
G__34931 = new cljs.core.IndexedSeq(G__34932__a,0);
}
return G__34927__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34931);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34927.cljs$lang$maxFixedArity = 3;
G__34927.cljs$lang$applyTo = G__34927__4.cljs$lang$applyTo;
G__34927.cljs$core$IFn$_invoke$arity$0 = G__34927__0;
G__34927.cljs$core$IFn$_invoke$arity$1 = G__34927__1;
G__34927.cljs$core$IFn$_invoke$arity$2 = G__34927__2;
G__34927.cljs$core$IFn$_invoke$arity$3 = G__34927__3;
G__34927.cljs$core$IFn$_invoke$arity$variadic = G__34927__4.cljs$core$IFn$_invoke$arity$variadic;
return G__34927;
})()
});
var juxt__4 = (function() { 
var G__34933__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__34934 = null;
var G__34934__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__34821_SHARP_,p2__34822_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__34821_SHARP_,(function (){return (p2__34822_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__34822_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__34822_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__34934__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__34823_SHARP_,p2__34824_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__34823_SHARP_,(function (){var G__34909 = x;
return (p2__34824_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__34824_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34909) : p2__34824_SHARP_.call(null,G__34909));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__34934__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__34825_SHARP_,p2__34826_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__34825_SHARP_,(function (){var G__34910 = x;
var G__34911 = y;
return (p2__34826_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__34826_SHARP_.cljs$core$IFn$_invoke$arity$2(G__34910,G__34911) : p2__34826_SHARP_.call(null,G__34910,G__34911));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__34934__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__34827_SHARP_,p2__34828_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__34827_SHARP_,(function (){var G__34912 = x;
var G__34913 = y;
var G__34914 = z;
return (p2__34828_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__34828_SHARP_.cljs$core$IFn$_invoke$arity$3(G__34912,G__34913,G__34914) : p2__34828_SHARP_.call(null,G__34912,G__34913,G__34914));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__34934__4 = (function() { 
var G__34935__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__34829_SHARP_,p2__34830_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__34829_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__34830_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__34935 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34936__i = 0, G__34936__a = new Array(arguments.length -  3);
while (G__34936__i < G__34936__a.length) {G__34936__a[G__34936__i] = arguments[G__34936__i + 3]; ++G__34936__i;}
  args = new cljs.core.IndexedSeq(G__34936__a,0);
} 
return G__34935__delegate.call(this,x,y,z,args);};
G__34935.cljs$lang$maxFixedArity = 3;
G__34935.cljs$lang$applyTo = (function (arglist__34937){
var x = cljs.core.first(arglist__34937);
arglist__34937 = cljs.core.next(arglist__34937);
var y = cljs.core.first(arglist__34937);
arglist__34937 = cljs.core.next(arglist__34937);
var z = cljs.core.first(arglist__34937);
var args = cljs.core.rest(arglist__34937);
return G__34935__delegate(x,y,z,args);
});
G__34935.cljs$core$IFn$_invoke$arity$variadic = G__34935__delegate;
return G__34935;
})()
;
G__34934 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__34934__0.call(this);
case 1:
return G__34934__1.call(this,x);
case 2:
return G__34934__2.call(this,x,y);
case 3:
return G__34934__3.call(this,x,y,z);
default:
var G__34938 = null;
if (arguments.length > 3) {
var G__34939__i = 0, G__34939__a = new Array(arguments.length -  3);
while (G__34939__i < G__34939__a.length) {G__34939__a[G__34939__i] = arguments[G__34939__i + 3]; ++G__34939__i;}
G__34938 = new cljs.core.IndexedSeq(G__34939__a,0);
}
return G__34934__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34938);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34934.cljs$lang$maxFixedArity = 3;
G__34934.cljs$lang$applyTo = G__34934__4.cljs$lang$applyTo;
G__34934.cljs$core$IFn$_invoke$arity$0 = G__34934__0;
G__34934.cljs$core$IFn$_invoke$arity$1 = G__34934__1;
G__34934.cljs$core$IFn$_invoke$arity$2 = G__34934__2;
G__34934.cljs$core$IFn$_invoke$arity$3 = G__34934__3;
G__34934.cljs$core$IFn$_invoke$arity$variadic = G__34934__4.cljs$core$IFn$_invoke$arity$variadic;
return G__34934;
})()
;})(fs__$1))
};
var G__34933 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__34940__i = 0, G__34940__a = new Array(arguments.length -  3);
while (G__34940__i < G__34940__a.length) {G__34940__a[G__34940__i] = arguments[G__34940__i + 3]; ++G__34940__i;}
  fs = new cljs.core.IndexedSeq(G__34940__a,0);
} 
return G__34933__delegate.call(this,f,g,h,fs);};
G__34933.cljs$lang$maxFixedArity = 3;
G__34933.cljs$lang$applyTo = (function (arglist__34941){
var f = cljs.core.first(arglist__34941);
arglist__34941 = cljs.core.next(arglist__34941);
var g = cljs.core.first(arglist__34941);
arglist__34941 = cljs.core.next(arglist__34941);
var h = cljs.core.first(arglist__34941);
var fs = cljs.core.rest(arglist__34941);
return G__34933__delegate(f,g,h,fs);
});
G__34933.cljs$core$IFn$_invoke$arity$variadic = G__34933__delegate;
return G__34933;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__34942 = null;
if (arguments.length > 3) {
var G__34943__i = 0, G__34943__a = new Array(arguments.length -  3);
while (G__34943__i < G__34943__a.length) {G__34943__a[G__34943__i] = arguments[G__34943__i + 3]; ++G__34943__i;}
G__34942 = new cljs.core.IndexedSeq(G__34943__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__34942);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__34944 = cljs.core.next(coll);
coll = G__34944;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__34945 = (n - (1));
var G__34946 = cljs.core.next(coll);
n = G__34945;
coll = G__34946;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__34950 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34950,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34950,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34950,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_34958 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__34959_34965 = cljs.core.first(coll);
var G__34960_34966 = writer;
var G__34961_34967 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__34959_34965,G__34960_34966,G__34961_34967) : print_one.call(null,G__34959_34965,G__34960_34966,G__34961_34967));
} else {
}

var coll_34968__$1 = cljs.core.next(coll);
var n_34969 = (cljs.core.constant$keyword$106.cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_34968__$1) && (((n_34969 == null)) || (!((n_34969 === (0)))))){
cljs.core._write(writer,sep);

var G__34962_34970 = cljs.core.first(coll_34968__$1);
var G__34963_34971 = writer;
var G__34964_34972 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__34962_34970,G__34963_34971,G__34964_34972) : print_one.call(null,G__34962_34970,G__34963_34971,G__34964_34972));

var G__34973 = cljs.core.next(coll_34968__$1);
var G__34974 = (n_34969 - (1));
coll_34968__$1 = G__34973;
n_34969 = G__34974;
continue;
} else {
if((cljs.core.seq(coll_34968__$1)) && ((n_34969 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_34958;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__34979 = cljs.core.seq(ss);
var chunk__34980 = null;
var count__34981 = (0);
var i__34982 = (0);
while(true){
if((i__34982 < count__34981)){
var s = chunk__34980.cljs$core$IIndexed$_nth$arity$2(null,i__34982);
cljs.core._write(writer,s);

var G__34983 = seq__34979;
var G__34984 = chunk__34980;
var G__34985 = count__34981;
var G__34986 = (i__34982 + (1));
seq__34979 = G__34983;
chunk__34980 = G__34984;
count__34981 = G__34985;
i__34982 = G__34986;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__34979);
if(temp__4126__auto__){
var seq__34979__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__34979__$1)){
var c__4563__auto__ = cljs.core.chunk_first(seq__34979__$1);
var G__34987 = cljs.core.chunk_rest(seq__34979__$1);
var G__34988 = c__4563__auto__;
var G__34989 = cljs.core.count(c__4563__auto__);
var G__34990 = (0);
seq__34979 = G__34987;
chunk__34980 = G__34988;
count__34981 = G__34989;
i__34982 = G__34990;
continue;
} else {
var s = cljs.core.first(seq__34979__$1);
cljs.core._write(writer,s);

var G__34991 = cljs.core.next(seq__34979__$1);
var G__34992 = null;
var G__34993 = (0);
var G__34994 = (0);
seq__34979 = G__34991;
chunk__34980 = G__34992;
count__34981 = G__34993;
i__34982 = G__34994;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__34995__i = 0, G__34995__a = new Array(arguments.length -  1);
while (G__34995__i < G__34995__a.length) {G__34995__a[G__34995__i] = arguments[G__34995__i + 1]; ++G__34995__i;}
  ss = new cljs.core.IndexedSeq(G__34995__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__34996){
var writer = cljs.core.first(arglist__34996);
var ss = cljs.core.rest(arglist__34996);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj34998 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj34998;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__35001 = "[\\\\\"\b\f\n\r\t]";
var G__35002 = "g";
return RegExp(G__35001,G__35002);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3764__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$104);
if(cljs.core.truth_(and__3764__auto__)){
var and__3764__auto____$1 = (function (){var G__35016 = obj;
if(G__35016){
var bit__4457__auto__ = (G__35016.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4457__auto__) || (G__35016.cljs$core$IMeta$)){
return true;
} else {
if((!G__35016.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__35016);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__35016);
}
})();
if(and__3764__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3764__auto____$1;
}
} else {
return and__3764__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__35017 = obj;
if(G__35017){
var bit__4450__auto__ = (G__35017.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4450__auto__) || (G__35017.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__35018 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__35019 = pr_writer;
var G__35020 = writer;
var G__35021 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__35018,G__35019,G__35020,G__35021) : cljs.core.print_map.call(null,G__35018,G__35019,G__35020,G__35021));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__35022 = obj;
return goog.isString(G__35022);
})())){
if(cljs.core.truth_(cljs.core.constant$keyword$103.cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__35024 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__35024;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__35023 = obj;
if(G__35023){
var bit__4457__auto__ = (G__35023.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4457__auto__) || (G__35023.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__35023.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__35023);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__35023);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__35029 = cljs.core.seq(cljs.core.next(objs));
var chunk__35030 = null;
var count__35031 = (0);
var i__35032 = (0);
while(true){
if((i__35032 < count__35031)){
var obj = chunk__35030.cljs$core$IIndexed$_nth$arity$2(null,i__35032);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__35033 = seq__35029;
var G__35034 = chunk__35030;
var G__35035 = count__35031;
var G__35036 = (i__35032 + (1));
seq__35029 = G__35033;
chunk__35030 = G__35034;
count__35031 = G__35035;
i__35032 = G__35036;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__35029);
if(temp__4126__auto__){
var seq__35029__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__35029__$1)){
var c__4563__auto__ = cljs.core.chunk_first(seq__35029__$1);
var G__35037 = cljs.core.chunk_rest(seq__35029__$1);
var G__35038 = c__4563__auto__;
var G__35039 = cljs.core.count(c__4563__auto__);
var G__35040 = (0);
seq__35029 = G__35037;
chunk__35030 = G__35038;
count__35031 = G__35039;
i__35032 = G__35040;
continue;
} else {
var obj = cljs.core.first(seq__35029__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__35041 = cljs.core.next(seq__35029__$1);
var G__35042 = null;
var G__35043 = (0);
var G__35044 = (0);
seq__35029 = G__35041;
chunk__35030 = G__35042;
count__35031 = G__35043;
i__35032 = G__35044;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$102))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__35045__i = 0, G__35045__a = new Array(arguments.length -  0);
while (G__35045__i < G__35045__a.length) {G__35045__a[G__35045__i] = arguments[G__35045__i + 0]; ++G__35045__i;}
  objs = new cljs.core.IndexedSeq(G__35045__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__35046){
var objs = cljs.core.seq(arglist__35046);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__35047__i = 0, G__35047__a = new Array(arguments.length -  0);
while (G__35047__i < G__35047__a.length) {G__35047__a[G__35047__i] = arguments[G__35047__i + 0]; ++G__35047__i;}
  objs = new cljs.core.IndexedSeq(G__35047__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__35048){
var objs = cljs.core.seq(arglist__35048);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__35049__i = 0, G__35049__a = new Array(arguments.length -  0);
while (G__35049__i < G__35049__a.length) {G__35049__a[G__35049__i] = arguments[G__35049__i + 0]; ++G__35049__i;}
  objs = new cljs.core.IndexedSeq(G__35049__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__35050){
var objs = cljs.core.seq(arglist__35050);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$103,false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__35051__i = 0, G__35051__a = new Array(arguments.length -  0);
while (G__35051__i < G__35051__a.length) {G__35051__a[G__35051__i] = arguments[G__35051__i + 0]; ++G__35051__i;}
  objs = new cljs.core.IndexedSeq(G__35051__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__35052){
var objs = cljs.core.seq(arglist__35052);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$103,false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__35053__i = 0, G__35053__a = new Array(arguments.length -  0);
while (G__35053__i < G__35053__a.length) {G__35053__a[G__35053__i] = arguments[G__35053__i + 0]; ++G__35053__i;}
  objs = new cljs.core.IndexedSeq(G__35053__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__35054){
var objs = cljs.core.seq(arglist__35054);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$103,false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__35055__i = 0, G__35055__a = new Array(arguments.length -  0);
while (G__35055__i < G__35055__a.length) {G__35055__a[G__35055__i] = arguments[G__35055__i + 0]; ++G__35055__i;}
  objs = new cljs.core.IndexedSeq(G__35055__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__35056){
var objs = cljs.core.seq(arglist__35056);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$103,false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__35057__i = 0, G__35057__a = new Array(arguments.length -  0);
while (G__35057__i < G__35057__a.length) {G__35057__a[G__35057__i] = arguments[G__35057__i + 0]; ++G__35057__i;}
  objs = new cljs.core.IndexedSeq(G__35057__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__35058){
var objs = cljs.core.seq(arglist__35058);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__35059__i = 0, G__35059__a = new Array(arguments.length -  0);
while (G__35059__i < G__35059__a.length) {G__35059__a[G__35059__i] = arguments[G__35059__i + 0]; ++G__35059__i;}
  objs = new cljs.core.IndexedSeq(G__35059__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__35060){
var objs = cljs.core.seq(arglist__35060);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__35067_35073 = cljs.core.key(e);
var G__35068_35074 = w;
var G__35069_35075 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__35067_35073,G__35068_35074,G__35069_35075) : print_one.call(null,G__35067_35073,G__35068_35074,G__35069_35075));

cljs.core._write(w," ");

var G__35070 = cljs.core.val(e);
var G__35071 = w;
var G__35072 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__35070,G__35071,G__35072) : print_one.call(null,G__35070,G__35071,G__35072));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__35076__i = 0, G__35076__a = new Array(arguments.length -  2);
while (G__35076__i < G__35076__a.length) {G__35076__a[G__35076__i] = arguments[G__35076__i + 2]; ++G__35076__i;}
  args = new cljs.core.IndexedSeq(G__35076__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__35077){
var iref = cljs.core.first(arglist__35077);
arglist__35077 = cljs.core.next(arglist__35077);
var f = cljs.core.first(arglist__35077);
var args = cljs.core.rest(arglist__35077);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__35080 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__35080) : cljs.core.atom.call(null,G__35080));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__35082 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35082) : cljs.core.deref.call(null,G__35082));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__35083_SHARP_,p2__35084_SHARP_){
var ret = (function (){var G__35087 = p1__35083_SHARP_;
var G__35088 = p2__35084_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35087,G__35088) : rf.call(null,G__35087,G__35088));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__35091 = null;
var G__35091__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35091__1 = (function (result){
var G__35090 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35090) : rf.call(null,G__35090));
});
var G__35091__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__35091 = function(result,input){
switch(arguments.length){
case 0:
return G__35091__0.call(this);
case 1:
return G__35091__1.call(this,result);
case 2:
return G__35091__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35091.cljs$core$IFn$_invoke$arity$0 = G__35091__0;
G__35091.cljs$core$IFn$_invoke$arity$1 = G__35091__1;
G__35091.cljs$core$IFn$_invoke$arity$2 = G__35091__2;
return G__35091;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$116);
return ((function (pa){
return (function() {
var G__35100 = null;
var G__35100__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35100__1 = (function (result){
var G__35096 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35096) : rf.call(null,G__35096));
});
var G__35100__2 = (function (result,input){
var prior = (function (){var G__35097 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35097) : cljs.core.deref.call(null,G__35097));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__35098 = result;
var G__35099 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35098,G__35099) : rf.call(null,G__35098,G__35099));
}
});
G__35100 = function(result,input){
switch(arguments.length){
case 0:
return G__35100__0.call(this);
case 1:
return G__35100__1.call(this,result);
case 2:
return G__35100__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35100.cljs$core$IFn$_invoke$arity$0 = G__35100__0;
G__35100.cljs$core$IFn$_invoke$arity$1 = G__35100__1;
G__35100.cljs$core$IFn$_invoke$arity$2 = G__35100__2;
return G__35100;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4754__auto__ = this;
return cljs.core.es6_iterator(this__4754__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__35102_SHARP_,p2__35101_SHARP_){
var G__35104 = p2__35101_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__35104) : proc.call(null,G__35104));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj35106 = {};
return obj35106;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3764__auto__ = x;
if(and__3764__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3764__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4420__auto__ = (((x == null))?null:x);
return (function (){var or__3776__auto__ = (cljs.core._clj__GT_js[(function (){var G__35110 = x__4420__auto__;
return goog.typeOf(G__35110);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3764__auto__ = x;
if(and__3764__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3764__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4420__auto__ = (((x == null))?null:x);
return (function (){var or__3776__auto__ = (cljs.core._key__GT_js[(function (){var G__35114 = x__4420__auto__;
return goog.typeOf(G__35114);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__35117 = k;
if(G__35117){
var bit__4457__auto__ = null;
if(cljs.core.truth_((function (){var or__3776__auto__ = bit__4457__auto__;
if(cljs.core.truth_(or__3776__auto__)){
return or__3776__auto__;
} else {
return G__35117.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__35117.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__35117);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__35117);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__35118 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__35118) : cljs.core.clj__GT_js.call(null,G__35118));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__35134 = x;
if(G__35134){
var bit__4457__auto__ = null;
if(cljs.core.truth_((function (){var or__3776__auto__ = bit__4457__auto__;
if(cljs.core.truth_(or__3776__auto__)){
return or__3776__auto__;
} else {
return G__35134.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__35134.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__35134);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__35134);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj35136 = {};
return obj35136;
})();
var seq__35137_35147 = cljs.core.seq(x);
var chunk__35138_35148 = null;
var count__35139_35149 = (0);
var i__35140_35150 = (0);
while(true){
if((i__35140_35150 < count__35139_35149)){
var vec__35141_35151 = chunk__35138_35148.cljs$core$IIndexed$_nth$arity$2(null,i__35140_35150);
var k_35152 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35141_35151,(0),null);
var v_35153 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35141_35151,(1),null);
(m[cljs.core.key__GT_js(k_35152)] = clj__GT_js(v_35153));

var G__35154 = seq__35137_35147;
var G__35155 = chunk__35138_35148;
var G__35156 = count__35139_35149;
var G__35157 = (i__35140_35150 + (1));
seq__35137_35147 = G__35154;
chunk__35138_35148 = G__35155;
count__35139_35149 = G__35156;
i__35140_35150 = G__35157;
continue;
} else {
var temp__4126__auto___35158 = cljs.core.seq(seq__35137_35147);
if(temp__4126__auto___35158){
var seq__35137_35159__$1 = temp__4126__auto___35158;
if(cljs.core.chunked_seq_QMARK_(seq__35137_35159__$1)){
var c__4563__auto___35160 = cljs.core.chunk_first(seq__35137_35159__$1);
var G__35161 = cljs.core.chunk_rest(seq__35137_35159__$1);
var G__35162 = c__4563__auto___35160;
var G__35163 = cljs.core.count(c__4563__auto___35160);
var G__35164 = (0);
seq__35137_35147 = G__35161;
chunk__35138_35148 = G__35162;
count__35139_35149 = G__35163;
i__35140_35150 = G__35164;
continue;
} else {
var vec__35142_35165 = cljs.core.first(seq__35137_35159__$1);
var k_35166 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35142_35165,(0),null);
var v_35167 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35142_35165,(1),null);
(m[cljs.core.key__GT_js(k_35166)] = clj__GT_js(v_35167));

var G__35168 = cljs.core.next(seq__35137_35159__$1);
var G__35169 = null;
var G__35170 = (0);
var G__35171 = (0);
seq__35137_35147 = G__35168;
chunk__35138_35148 = G__35169;
count__35139_35149 = G__35170;
i__35140_35150 = G__35171;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__35143_35172 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__35144_35173 = null;
var count__35145_35174 = (0);
var i__35146_35175 = (0);
while(true){
if((i__35146_35175 < count__35145_35174)){
var x_35176__$1 = chunk__35144_35173.cljs$core$IIndexed$_nth$arity$2(null,i__35146_35175);
arr.push(x_35176__$1);

var G__35177 = seq__35143_35172;
var G__35178 = chunk__35144_35173;
var G__35179 = count__35145_35174;
var G__35180 = (i__35146_35175 + (1));
seq__35143_35172 = G__35177;
chunk__35144_35173 = G__35178;
count__35145_35174 = G__35179;
i__35146_35175 = G__35180;
continue;
} else {
var temp__4126__auto___35181 = cljs.core.seq(seq__35143_35172);
if(temp__4126__auto___35181){
var seq__35143_35182__$1 = temp__4126__auto___35181;
if(cljs.core.chunked_seq_QMARK_(seq__35143_35182__$1)){
var c__4563__auto___35183 = cljs.core.chunk_first(seq__35143_35182__$1);
var G__35184 = cljs.core.chunk_rest(seq__35143_35182__$1);
var G__35185 = c__4563__auto___35183;
var G__35186 = cljs.core.count(c__4563__auto___35183);
var G__35187 = (0);
seq__35143_35172 = G__35184;
chunk__35144_35173 = G__35185;
count__35145_35174 = G__35186;
i__35146_35175 = G__35187;
continue;
} else {
var x_35188__$1 = cljs.core.first(seq__35143_35182__$1);
arr.push(x_35188__$1);

var G__35189 = cljs.core.next(seq__35143_35182__$1);
var G__35190 = null;
var G__35191 = (0);
var G__35192 = (0);
seq__35143_35172 = G__35189;
chunk__35144_35173 = G__35190;
count__35145_35174 = G__35191;
i__35146_35175 = G__35192;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj35194 = {};
return obj35194;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3764__auto__ = x;
if(and__3764__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3764__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4420__auto__ = (((x == null))?null:x);
return (function (){var or__3776__auto__ = (cljs.core._js__GT_clj[(function (){var G__35198 = x__4420__auto__;
return goog.typeOf(G__35198);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$117,false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__35255__delegate = function (x,opts){
var map__35228 = opts;
var map__35228__$1 = ((cljs.core.seq_QMARK_(map__35228))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__35228):map__35228);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__35228__$1,cljs.core.constant$keyword$117);
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__35228,map__35228__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__35244 = x__$1;
if(G__35244){
var bit__4457__auto__ = null;
if(cljs.core.truth_((function (){var or__3776__auto__ = bit__4457__auto__;
if(cljs.core.truth_(or__3776__auto__)){
return or__3776__auto__;
} else {
return G__35244.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__35244.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__35244);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__35244);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4532__auto__ = ((function (map__35228,map__35228__$1,keywordize_keys,keyfn){
return (function iter__35245(s__35246){
return (new cljs.core.LazySeq(null,((function (map__35228,map__35228__$1,keywordize_keys,keyfn){
return (function (){
var s__35246__$1 = s__35246;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__35246__$1);
if(temp__4126__auto__){
var s__35246__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__35246__$2)){
var c__4530__auto__ = cljs.core.chunk_first(s__35246__$2);
var size__4531__auto__ = cljs.core.count(c__4530__auto__);
var b__35248 = cljs.core.chunk_buffer(size__4531__auto__);
if((function (){var i__35247 = (0);
while(true){
if((i__35247 < size__4531__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4530__auto__,i__35247);
cljs.core.chunk_append(b__35248,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__35253 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__35253) : keyfn.call(null,G__35253));
})(),thisfn((x__$1[k]))], null));

var G__35256 = (i__35247 + (1));
i__35247 = G__35256;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__35248),iter__35245(cljs.core.chunk_rest(s__35246__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__35248),null);
}
} else {
var k = cljs.core.first(s__35246__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__35254 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__35254) : keyfn.call(null,G__35254));
})(),thisfn((x__$1[k]))], null),iter__35245(cljs.core.rest(s__35246__$2)));
}
} else {
return null;
}
break;
}
});})(map__35228,map__35228__$1,keywordize_keys,keyfn))
,null,null));
});})(map__35228,map__35228__$1,keywordize_keys,keyfn))
;
return iter__4532__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__35228,map__35228__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__35255 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__35257__i = 0, G__35257__a = new Array(arguments.length -  1);
while (G__35257__i < G__35257__a.length) {G__35257__a[G__35257__i] = arguments[G__35257__i + 1]; ++G__35257__i;}
  opts = new cljs.core.IndexedSeq(G__35257__a,0);
} 
return G__35255__delegate.call(this,x,opts);};
G__35255.cljs$lang$maxFixedArity = 1;
G__35255.cljs$lang$applyTo = (function (arglist__35258){
var x = cljs.core.first(arglist__35258);
var opts = cljs.core.rest(arglist__35258);
return G__35255__delegate(x,opts);
});
G__35255.cljs$core$IFn$_invoke$arity$variadic = G__35255__delegate;
return G__35255;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__35259 = null;
if (arguments.length > 1) {
var G__35260__i = 0, G__35260__a = new Array(arguments.length -  1);
while (G__35260__i < G__35260__a.length) {G__35260__a[G__35260__i] = arguments[G__35260__i + 1]; ++G__35260__i;}
G__35259 = new cljs.core.IndexedSeq(G__35260__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__35259);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__35263 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__35263) : cljs.core.atom.call(null,G__35263));
})();
return ((function (mem){
return (function() { 
var G__35265__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__35264 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35264) : cljs.core.deref.call(null,G__35264));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__35265 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__35266__i = 0, G__35266__a = new Array(arguments.length -  0);
while (G__35266__i < G__35266__a.length) {G__35266__a[G__35266__i] = arguments[G__35266__i + 0]; ++G__35266__i;}
  args = new cljs.core.IndexedSeq(G__35266__a,0);
} 
return G__35265__delegate.call(this,args);};
G__35265.cljs$lang$maxFixedArity = 0;
G__35265.cljs$lang$applyTo = (function (arglist__35267){
var args = cljs.core.seq(arglist__35267);
return G__35265__delegate(args);
});
G__35265.cljs$core$IFn$_invoke$arity$variadic = G__35265__delegate;
return G__35265;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__35269 = ret;
f = G__35269;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__35270__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__35270 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__35271__i = 0, G__35271__a = new Array(arguments.length -  1);
while (G__35271__i < G__35271__a.length) {G__35271__a[G__35271__i] = arguments[G__35271__i + 1]; ++G__35271__i;}
  args = new cljs.core.IndexedSeq(G__35271__a,0);
} 
return G__35270__delegate.call(this,f,args);};
G__35270.cljs$lang$maxFixedArity = 1;
G__35270.cljs$lang$applyTo = (function (arglist__35272){
var f = cljs.core.first(arglist__35272);
var args = cljs.core.rest(arglist__35272);
return G__35270__delegate(f,args);
});
G__35270.cljs$core$IFn$_invoke$arity$variadic = G__35270__delegate;
return G__35270;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__35273 = null;
if (arguments.length > 1) {
var G__35274__i = 0, G__35274__a = new Array(arguments.length -  1);
while (G__35274__i < G__35274__a.length) {G__35274__a[G__35274__i] = arguments[G__35274__i + 1]; ++G__35274__i;}
G__35273 = new cljs.core.IndexedSeq(G__35274__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__35273);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__35277 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__35277) : Math.floor.call(null,G__35277));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__35279 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35279) : f.call(null,G__35279));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$118,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$119,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$120,cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__35281 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__35281) : cljs.core.atom.call(null,G__35281));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__35282__i = 0, G__35282__a = new Array(arguments.length -  1);
while (G__35282__i < G__35282__a.length) {G__35282__a[G__35282__i] = arguments[G__35282__i + 1]; ++G__35282__i;}
  args = new cljs.core.IndexedSeq(G__35282__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__35283){
var f = cljs.core.first(arglist__35283);
var args = cljs.core.rest(arglist__35283);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__35348 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35348) : cljs.core.deref.call(null,G__35348));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3776__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = cljs.core.contains_QMARK_(cljs.core.constant$keyword$120.cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
var and__3764__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3764__auto__){
var and__3764__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3764__auto____$1){
var and__3764__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3764__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__35373 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__35371 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__35371) : child.call(null,G__35371));
})(),(function (){var G__35372 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__35372) : parent.call(null,G__35372));
})());
var G__35374 = (i + (1));
ret = G__35373;
i = G__35374;
continue;
}
break;
}
} else {
return and__3764__auto____$2;
}
} else {
return and__3764__auto____$1;
}
} else {
return and__3764__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__35378 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35378) : cljs.core.deref.call(null,G__35378));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$118.cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__35382 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35382) : cljs.core.deref.call(null,G__35382));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$120.cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__35386 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35386) : cljs.core.deref.call(null,G__35386));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$119.cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){

var tp = cljs.core.constant$keyword$118.cljs$core$IFn$_invoke$arity$1(h);
var td = cljs.core.constant$keyword$119.cljs$core$IFn$_invoke$arity$1(h);
var ta = cljs.core.constant$keyword$120.cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__35395 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__35395) : targets.call(null,G__35395));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__35396 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__35396) : sources.call(null,G__35396));
})()));
});})(tp,td,ta))
;
var or__3776__auto__ = ((cljs.core.contains_QMARK_((function (){var G__35400 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__35400) : tp.call(null,G__35400));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__35401 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__35401) : ta.call(null,G__35401));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__35402 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__35402) : ta.call(null,G__35402));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$118,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.constant$keyword$118.cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),cljs.core.constant$keyword$120,tf(cljs.core.constant$keyword$120.cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),cljs.core.constant$keyword$119,tf(cljs.core.constant$keyword$119.cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3776__auto__)){
return or__3776__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = cljs.core.constant$keyword$118.cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__35409 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__35409) : parentMap.call(null,G__35409));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__35410 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__35410) : parentMap.call(null,G__35410));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__35403_SHARP_){
return cljs.core.cons(cljs.core.first(p1__35403_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__35403_SHARP_),cljs.core.second(p1__35403_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__35411 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__35411) : parentMap.call(null,G__35411));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__35404_SHARP_,p2__35405_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__35404_SHARP_,p2__35405_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__35414 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35414) : cljs.core.deref.call(null,G__35414));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__35415 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35415) : cljs.core.deref.call(null,G__35415));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__35431 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35431) : cljs.core.deref.call(null,G__35431));
})().call(null,x);
var or__3776__auto__ = (cljs.core.truth_((function (){var and__3764__auto__ = xprefs;
if(cljs.core.truth_(and__3764__auto__)){
var G__35433 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__35433) : xprefs.call(null,G__35433));
} else {
return and__3764__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3776__auto__)){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__35434 = cljs.core.rest(ps);
ps = G__35434;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3776__auto____$1)){
return or__3776__auto____$1;
} else {
var or__3776__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__35435 = cljs.core.rest(ps);
ps = G__35435;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3776__auto____$2)){
return or__3776__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3776__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3776__auto__)){
return or__3776__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__35449){
var vec__35450 = p__35449;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35450,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35450,(1),null);
var e = vec__35450;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__35451 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35451) : cljs.core.deref.call(null,G__35451));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3776__auto__ = (be == null);
if(or__3776__auto__){
return or__3776__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__35452 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35452) : cljs.core.deref.call(null,G__35452));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__35453 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35453) : cljs.core.deref.call(null,G__35453));
})(),(function (){var G__35454 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35454) : cljs.core.deref.call(null,G__35454));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj35456 = {};
return obj35456;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3764__auto__ = mf;
if(and__3764__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3764__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4420__auto__ = (((mf == null))?null:mf);
return (function (){var or__3776__auto__ = (cljs.core._reset[(function (){var G__35460 = x__4420__auto__;
return goog.typeOf(G__35460);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._reset["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3764__auto__ = mf;
if(and__3764__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3764__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4420__auto__ = (((mf == null))?null:mf);
return (function (){var or__3776__auto__ = (cljs.core._add_method[(function (){var G__35464 = x__4420__auto__;
return goog.typeOf(G__35464);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._add_method["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3764__auto__ = mf;
if(and__3764__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3764__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4420__auto__ = (((mf == null))?null:mf);
return (function (){var or__3776__auto__ = (cljs.core._remove_method[(function (){var G__35468 = x__4420__auto__;
return goog.typeOf(G__35468);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3764__auto__ = mf;
if(and__3764__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3764__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4420__auto__ = (((mf == null))?null:mf);
return (function (){var or__3776__auto__ = (cljs.core._prefer_method[(function (){var G__35472 = x__4420__auto__;
return goog.typeOf(G__35472);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3764__auto__ = mf;
if(and__3764__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3764__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4420__auto__ = (((mf == null))?null:mf);
return (function (){var or__3776__auto__ = (cljs.core._get_method[(function (){var G__35476 = x__4420__auto__;
return goog.typeOf(G__35476);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._get_method["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3764__auto__ = mf;
if(and__3764__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3764__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4420__auto__ = (((mf == null))?null:mf);
return (function (){var or__3776__auto__ = (cljs.core._methods[(function (){var G__35480 = x__4420__auto__;
return goog.typeOf(G__35480);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._methods["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3764__auto__ = mf;
if(and__3764__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3764__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4420__auto__ = (((mf == null))?null:mf);
return (function (){var or__3776__auto__ = (cljs.core._prefers[(function (){var G__35484 = x__4420__auto__;
return goog.typeOf(G__35484);
})()]);
if(or__3776__auto__){
return or__3776__auto__;
} else {
var or__3776__auto____$1 = (cljs.core._prefers["_"]);
if(or__3776__auto____$1){
return or__3776__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__35486 = this$__$1;
return goog.getUid(G__35486);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__35487 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35487) : cljs.core.deref.call(null,G__35487));
})(),(function (){var G__35488 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35488) : cljs.core.deref.call(null,G__35488));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__35489 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35489) : cljs.core.deref.call(null,G__35489));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__35490 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35490) : cljs.core.deref.call(null,G__35490));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__35491 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35491) : cljs.core.deref.call(null,G__35491));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__35492 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35492) : cljs.core.deref.call(null,G__35492));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__36333 = null;
var G__36333__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__36333__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35493 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__35493) : self__.dispatch_fn.call(null,G__35493));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35494 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__35494) : target_fn.call(null,G__35494));
});
var G__36333__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35495 = a;
var G__35496 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__35495,G__35496) : self__.dispatch_fn.call(null,G__35495,G__35496));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35497 = a;
var G__35498 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__35497,G__35498) : target_fn.call(null,G__35497,G__35498));
});
var G__36333__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35499 = a;
var G__35500 = b;
var G__35501 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__35499,G__35500,G__35501) : self__.dispatch_fn.call(null,G__35499,G__35500,G__35501));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35502 = a;
var G__35503 = b;
var G__35504 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__35502,G__35503,G__35504) : target_fn.call(null,G__35502,G__35503,G__35504));
});
var G__36333__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35505 = a;
var G__35506 = b;
var G__35507 = c;
var G__35508 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__35505,G__35506,G__35507,G__35508) : self__.dispatch_fn.call(null,G__35505,G__35506,G__35507,G__35508));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35509 = a;
var G__35510 = b;
var G__35511 = c;
var G__35512 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__35509,G__35510,G__35511,G__35512) : target_fn.call(null,G__35509,G__35510,G__35511,G__35512));
});
var G__36333__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35513 = a;
var G__35514 = b;
var G__35515 = c;
var G__35516 = d;
var G__35517 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__35513,G__35514,G__35515,G__35516,G__35517) : self__.dispatch_fn.call(null,G__35513,G__35514,G__35515,G__35516,G__35517));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35518 = a;
var G__35519 = b;
var G__35520 = c;
var G__35521 = d;
var G__35522 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__35518,G__35519,G__35520,G__35521,G__35522) : target_fn.call(null,G__35518,G__35519,G__35520,G__35521,G__35522));
});
var G__36333__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35523 = a;
var G__35524 = b;
var G__35525 = c;
var G__35526 = d;
var G__35527 = e;
var G__35528 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__35523,G__35524,G__35525,G__35526,G__35527,G__35528) : self__.dispatch_fn.call(null,G__35523,G__35524,G__35525,G__35526,G__35527,G__35528));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35529 = a;
var G__35530 = b;
var G__35531 = c;
var G__35532 = d;
var G__35533 = e;
var G__35534 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__35529,G__35530,G__35531,G__35532,G__35533,G__35534) : target_fn.call(null,G__35529,G__35530,G__35531,G__35532,G__35533,G__35534));
});
var G__36333__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35535 = a;
var G__35536 = b;
var G__35537 = c;
var G__35538 = d;
var G__35539 = e;
var G__35540 = f;
var G__35541 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__35535,G__35536,G__35537,G__35538,G__35539,G__35540,G__35541) : self__.dispatch_fn.call(null,G__35535,G__35536,G__35537,G__35538,G__35539,G__35540,G__35541));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35542 = a;
var G__35543 = b;
var G__35544 = c;
var G__35545 = d;
var G__35546 = e;
var G__35547 = f;
var G__35548 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__35542,G__35543,G__35544,G__35545,G__35546,G__35547,G__35548) : target_fn.call(null,G__35542,G__35543,G__35544,G__35545,G__35546,G__35547,G__35548));
});
var G__36333__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35549 = a;
var G__35550 = b;
var G__35551 = c;
var G__35552 = d;
var G__35553 = e;
var G__35554 = f;
var G__35555 = g;
var G__35556 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__35549,G__35550,G__35551,G__35552,G__35553,G__35554,G__35555,G__35556) : self__.dispatch_fn.call(null,G__35549,G__35550,G__35551,G__35552,G__35553,G__35554,G__35555,G__35556));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35557 = a;
var G__35558 = b;
var G__35559 = c;
var G__35560 = d;
var G__35561 = e;
var G__35562 = f;
var G__35563 = g;
var G__35564 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__35557,G__35558,G__35559,G__35560,G__35561,G__35562,G__35563,G__35564) : target_fn.call(null,G__35557,G__35558,G__35559,G__35560,G__35561,G__35562,G__35563,G__35564));
});
var G__36333__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35565 = a;
var G__35566 = b;
var G__35567 = c;
var G__35568 = d;
var G__35569 = e;
var G__35570 = f;
var G__35571 = g;
var G__35572 = h;
var G__35573 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__35565,G__35566,G__35567,G__35568,G__35569,G__35570,G__35571,G__35572,G__35573) : self__.dispatch_fn.call(null,G__35565,G__35566,G__35567,G__35568,G__35569,G__35570,G__35571,G__35572,G__35573));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35574 = a;
var G__35575 = b;
var G__35576 = c;
var G__35577 = d;
var G__35578 = e;
var G__35579 = f;
var G__35580 = g;
var G__35581 = h;
var G__35582 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__35574,G__35575,G__35576,G__35577,G__35578,G__35579,G__35580,G__35581,G__35582) : target_fn.call(null,G__35574,G__35575,G__35576,G__35577,G__35578,G__35579,G__35580,G__35581,G__35582));
});
var G__36333__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35583 = a;
var G__35584 = b;
var G__35585 = c;
var G__35586 = d;
var G__35587 = e;
var G__35588 = f;
var G__35589 = g;
var G__35590 = h;
var G__35591 = i;
var G__35592 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__35583,G__35584,G__35585,G__35586,G__35587,G__35588,G__35589,G__35590,G__35591,G__35592) : self__.dispatch_fn.call(null,G__35583,G__35584,G__35585,G__35586,G__35587,G__35588,G__35589,G__35590,G__35591,G__35592));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35593 = a;
var G__35594 = b;
var G__35595 = c;
var G__35596 = d;
var G__35597 = e;
var G__35598 = f;
var G__35599 = g;
var G__35600 = h;
var G__35601 = i;
var G__35602 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__35593,G__35594,G__35595,G__35596,G__35597,G__35598,G__35599,G__35600,G__35601,G__35602) : target_fn.call(null,G__35593,G__35594,G__35595,G__35596,G__35597,G__35598,G__35599,G__35600,G__35601,G__35602));
});
var G__36333__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35603 = a;
var G__35604 = b;
var G__35605 = c;
var G__35606 = d;
var G__35607 = e;
var G__35608 = f;
var G__35609 = g;
var G__35610 = h;
var G__35611 = i;
var G__35612 = j;
var G__35613 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__35603,G__35604,G__35605,G__35606,G__35607,G__35608,G__35609,G__35610,G__35611,G__35612,G__35613) : self__.dispatch_fn.call(null,G__35603,G__35604,G__35605,G__35606,G__35607,G__35608,G__35609,G__35610,G__35611,G__35612,G__35613));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35614 = a;
var G__35615 = b;
var G__35616 = c;
var G__35617 = d;
var G__35618 = e;
var G__35619 = f;
var G__35620 = g;
var G__35621 = h;
var G__35622 = i;
var G__35623 = j;
var G__35624 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__35614,G__35615,G__35616,G__35617,G__35618,G__35619,G__35620,G__35621,G__35622,G__35623,G__35624) : target_fn.call(null,G__35614,G__35615,G__35616,G__35617,G__35618,G__35619,G__35620,G__35621,G__35622,G__35623,G__35624));
});
var G__36333__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35625 = a;
var G__35626 = b;
var G__35627 = c;
var G__35628 = d;
var G__35629 = e;
var G__35630 = f;
var G__35631 = g;
var G__35632 = h;
var G__35633 = i;
var G__35634 = j;
var G__35635 = k;
var G__35636 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__35625,G__35626,G__35627,G__35628,G__35629,G__35630,G__35631,G__35632,G__35633,G__35634,G__35635,G__35636) : self__.dispatch_fn.call(null,G__35625,G__35626,G__35627,G__35628,G__35629,G__35630,G__35631,G__35632,G__35633,G__35634,G__35635,G__35636));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35637 = a;
var G__35638 = b;
var G__35639 = c;
var G__35640 = d;
var G__35641 = e;
var G__35642 = f;
var G__35643 = g;
var G__35644 = h;
var G__35645 = i;
var G__35646 = j;
var G__35647 = k;
var G__35648 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__35637,G__35638,G__35639,G__35640,G__35641,G__35642,G__35643,G__35644,G__35645,G__35646,G__35647,G__35648) : target_fn.call(null,G__35637,G__35638,G__35639,G__35640,G__35641,G__35642,G__35643,G__35644,G__35645,G__35646,G__35647,G__35648));
});
var G__36333__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35649 = a;
var G__35650 = b;
var G__35651 = c;
var G__35652 = d;
var G__35653 = e;
var G__35654 = f;
var G__35655 = g;
var G__35656 = h;
var G__35657 = i;
var G__35658 = j;
var G__35659 = k;
var G__35660 = l;
var G__35661 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__35649,G__35650,G__35651,G__35652,G__35653,G__35654,G__35655,G__35656,G__35657,G__35658,G__35659,G__35660,G__35661) : self__.dispatch_fn.call(null,G__35649,G__35650,G__35651,G__35652,G__35653,G__35654,G__35655,G__35656,G__35657,G__35658,G__35659,G__35660,G__35661));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35662 = a;
var G__35663 = b;
var G__35664 = c;
var G__35665 = d;
var G__35666 = e;
var G__35667 = f;
var G__35668 = g;
var G__35669 = h;
var G__35670 = i;
var G__35671 = j;
var G__35672 = k;
var G__35673 = l;
var G__35674 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__35662,G__35663,G__35664,G__35665,G__35666,G__35667,G__35668,G__35669,G__35670,G__35671,G__35672,G__35673,G__35674) : target_fn.call(null,G__35662,G__35663,G__35664,G__35665,G__35666,G__35667,G__35668,G__35669,G__35670,G__35671,G__35672,G__35673,G__35674));
});
var G__36333__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35675 = a;
var G__35676 = b;
var G__35677 = c;
var G__35678 = d;
var G__35679 = e;
var G__35680 = f;
var G__35681 = g;
var G__35682 = h;
var G__35683 = i;
var G__35684 = j;
var G__35685 = k;
var G__35686 = l;
var G__35687 = m;
var G__35688 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__35675,G__35676,G__35677,G__35678,G__35679,G__35680,G__35681,G__35682,G__35683,G__35684,G__35685,G__35686,G__35687,G__35688) : self__.dispatch_fn.call(null,G__35675,G__35676,G__35677,G__35678,G__35679,G__35680,G__35681,G__35682,G__35683,G__35684,G__35685,G__35686,G__35687,G__35688));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35689 = a;
var G__35690 = b;
var G__35691 = c;
var G__35692 = d;
var G__35693 = e;
var G__35694 = f;
var G__35695 = g;
var G__35696 = h;
var G__35697 = i;
var G__35698 = j;
var G__35699 = k;
var G__35700 = l;
var G__35701 = m;
var G__35702 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__35689,G__35690,G__35691,G__35692,G__35693,G__35694,G__35695,G__35696,G__35697,G__35698,G__35699,G__35700,G__35701,G__35702) : target_fn.call(null,G__35689,G__35690,G__35691,G__35692,G__35693,G__35694,G__35695,G__35696,G__35697,G__35698,G__35699,G__35700,G__35701,G__35702));
});
var G__36333__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35703 = a;
var G__35704 = b;
var G__35705 = c;
var G__35706 = d;
var G__35707 = e;
var G__35708 = f;
var G__35709 = g;
var G__35710 = h;
var G__35711 = i;
var G__35712 = j;
var G__35713 = k;
var G__35714 = l;
var G__35715 = m;
var G__35716 = n;
var G__35717 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__35703,G__35704,G__35705,G__35706,G__35707,G__35708,G__35709,G__35710,G__35711,G__35712,G__35713,G__35714,G__35715,G__35716,G__35717) : self__.dispatch_fn.call(null,G__35703,G__35704,G__35705,G__35706,G__35707,G__35708,G__35709,G__35710,G__35711,G__35712,G__35713,G__35714,G__35715,G__35716,G__35717));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35718 = a;
var G__35719 = b;
var G__35720 = c;
var G__35721 = d;
var G__35722 = e;
var G__35723 = f;
var G__35724 = g;
var G__35725 = h;
var G__35726 = i;
var G__35727 = j;
var G__35728 = k;
var G__35729 = l;
var G__35730 = m;
var G__35731 = n;
var G__35732 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__35718,G__35719,G__35720,G__35721,G__35722,G__35723,G__35724,G__35725,G__35726,G__35727,G__35728,G__35729,G__35730,G__35731,G__35732) : target_fn.call(null,G__35718,G__35719,G__35720,G__35721,G__35722,G__35723,G__35724,G__35725,G__35726,G__35727,G__35728,G__35729,G__35730,G__35731,G__35732));
});
var G__36333__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35733 = a;
var G__35734 = b;
var G__35735 = c;
var G__35736 = d;
var G__35737 = e;
var G__35738 = f;
var G__35739 = g;
var G__35740 = h;
var G__35741 = i;
var G__35742 = j;
var G__35743 = k;
var G__35744 = l;
var G__35745 = m;
var G__35746 = n;
var G__35747 = o;
var G__35748 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__35733,G__35734,G__35735,G__35736,G__35737,G__35738,G__35739,G__35740,G__35741,G__35742,G__35743,G__35744,G__35745,G__35746,G__35747,G__35748) : self__.dispatch_fn.call(null,G__35733,G__35734,G__35735,G__35736,G__35737,G__35738,G__35739,G__35740,G__35741,G__35742,G__35743,G__35744,G__35745,G__35746,G__35747,G__35748));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35749 = a;
var G__35750 = b;
var G__35751 = c;
var G__35752 = d;
var G__35753 = e;
var G__35754 = f;
var G__35755 = g;
var G__35756 = h;
var G__35757 = i;
var G__35758 = j;
var G__35759 = k;
var G__35760 = l;
var G__35761 = m;
var G__35762 = n;
var G__35763 = o;
var G__35764 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__35749,G__35750,G__35751,G__35752,G__35753,G__35754,G__35755,G__35756,G__35757,G__35758,G__35759,G__35760,G__35761,G__35762,G__35763,G__35764) : target_fn.call(null,G__35749,G__35750,G__35751,G__35752,G__35753,G__35754,G__35755,G__35756,G__35757,G__35758,G__35759,G__35760,G__35761,G__35762,G__35763,G__35764));
});
var G__36333__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35765 = a;
var G__35766 = b;
var G__35767 = c;
var G__35768 = d;
var G__35769 = e;
var G__35770 = f;
var G__35771 = g;
var G__35772 = h;
var G__35773 = i;
var G__35774 = j;
var G__35775 = k;
var G__35776 = l;
var G__35777 = m;
var G__35778 = n;
var G__35779 = o;
var G__35780 = p;
var G__35781 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__35765,G__35766,G__35767,G__35768,G__35769,G__35770,G__35771,G__35772,G__35773,G__35774,G__35775,G__35776,G__35777,G__35778,G__35779,G__35780,G__35781) : self__.dispatch_fn.call(null,G__35765,G__35766,G__35767,G__35768,G__35769,G__35770,G__35771,G__35772,G__35773,G__35774,G__35775,G__35776,G__35777,G__35778,G__35779,G__35780,G__35781));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35782 = a;
var G__35783 = b;
var G__35784 = c;
var G__35785 = d;
var G__35786 = e;
var G__35787 = f;
var G__35788 = g;
var G__35789 = h;
var G__35790 = i;
var G__35791 = j;
var G__35792 = k;
var G__35793 = l;
var G__35794 = m;
var G__35795 = n;
var G__35796 = o;
var G__35797 = p;
var G__35798 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__35782,G__35783,G__35784,G__35785,G__35786,G__35787,G__35788,G__35789,G__35790,G__35791,G__35792,G__35793,G__35794,G__35795,G__35796,G__35797,G__35798) : target_fn.call(null,G__35782,G__35783,G__35784,G__35785,G__35786,G__35787,G__35788,G__35789,G__35790,G__35791,G__35792,G__35793,G__35794,G__35795,G__35796,G__35797,G__35798));
});
var G__36333__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35799 = a;
var G__35800 = b;
var G__35801 = c;
var G__35802 = d;
var G__35803 = e;
var G__35804 = f;
var G__35805 = g;
var G__35806 = h;
var G__35807 = i;
var G__35808 = j;
var G__35809 = k;
var G__35810 = l;
var G__35811 = m;
var G__35812 = n;
var G__35813 = o;
var G__35814 = p;
var G__35815 = q;
var G__35816 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__35799,G__35800,G__35801,G__35802,G__35803,G__35804,G__35805,G__35806,G__35807,G__35808,G__35809,G__35810,G__35811,G__35812,G__35813,G__35814,G__35815,G__35816) : self__.dispatch_fn.call(null,G__35799,G__35800,G__35801,G__35802,G__35803,G__35804,G__35805,G__35806,G__35807,G__35808,G__35809,G__35810,G__35811,G__35812,G__35813,G__35814,G__35815,G__35816));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35817 = a;
var G__35818 = b;
var G__35819 = c;
var G__35820 = d;
var G__35821 = e;
var G__35822 = f;
var G__35823 = g;
var G__35824 = h;
var G__35825 = i;
var G__35826 = j;
var G__35827 = k;
var G__35828 = l;
var G__35829 = m;
var G__35830 = n;
var G__35831 = o;
var G__35832 = p;
var G__35833 = q;
var G__35834 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__35817,G__35818,G__35819,G__35820,G__35821,G__35822,G__35823,G__35824,G__35825,G__35826,G__35827,G__35828,G__35829,G__35830,G__35831,G__35832,G__35833,G__35834) : target_fn.call(null,G__35817,G__35818,G__35819,G__35820,G__35821,G__35822,G__35823,G__35824,G__35825,G__35826,G__35827,G__35828,G__35829,G__35830,G__35831,G__35832,G__35833,G__35834));
});
var G__36333__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35835 = a;
var G__35836 = b;
var G__35837 = c;
var G__35838 = d;
var G__35839 = e;
var G__35840 = f;
var G__35841 = g;
var G__35842 = h;
var G__35843 = i;
var G__35844 = j;
var G__35845 = k;
var G__35846 = l;
var G__35847 = m;
var G__35848 = n;
var G__35849 = o;
var G__35850 = p;
var G__35851 = q;
var G__35852 = r;
var G__35853 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__35835,G__35836,G__35837,G__35838,G__35839,G__35840,G__35841,G__35842,G__35843,G__35844,G__35845,G__35846,G__35847,G__35848,G__35849,G__35850,G__35851,G__35852,G__35853) : self__.dispatch_fn.call(null,G__35835,G__35836,G__35837,G__35838,G__35839,G__35840,G__35841,G__35842,G__35843,G__35844,G__35845,G__35846,G__35847,G__35848,G__35849,G__35850,G__35851,G__35852,G__35853));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35854 = a;
var G__35855 = b;
var G__35856 = c;
var G__35857 = d;
var G__35858 = e;
var G__35859 = f;
var G__35860 = g;
var G__35861 = h;
var G__35862 = i;
var G__35863 = j;
var G__35864 = k;
var G__35865 = l;
var G__35866 = m;
var G__35867 = n;
var G__35868 = o;
var G__35869 = p;
var G__35870 = q;
var G__35871 = r;
var G__35872 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__35854,G__35855,G__35856,G__35857,G__35858,G__35859,G__35860,G__35861,G__35862,G__35863,G__35864,G__35865,G__35866,G__35867,G__35868,G__35869,G__35870,G__35871,G__35872) : target_fn.call(null,G__35854,G__35855,G__35856,G__35857,G__35858,G__35859,G__35860,G__35861,G__35862,G__35863,G__35864,G__35865,G__35866,G__35867,G__35868,G__35869,G__35870,G__35871,G__35872));
});
var G__36333__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35873 = a;
var G__35874 = b;
var G__35875 = c;
var G__35876 = d;
var G__35877 = e;
var G__35878 = f;
var G__35879 = g;
var G__35880 = h;
var G__35881 = i;
var G__35882 = j;
var G__35883 = k;
var G__35884 = l;
var G__35885 = m;
var G__35886 = n;
var G__35887 = o;
var G__35888 = p;
var G__35889 = q;
var G__35890 = r;
var G__35891 = s;
var G__35892 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__35873,G__35874,G__35875,G__35876,G__35877,G__35878,G__35879,G__35880,G__35881,G__35882,G__35883,G__35884,G__35885,G__35886,G__35887,G__35888,G__35889,G__35890,G__35891,G__35892) : self__.dispatch_fn.call(null,G__35873,G__35874,G__35875,G__35876,G__35877,G__35878,G__35879,G__35880,G__35881,G__35882,G__35883,G__35884,G__35885,G__35886,G__35887,G__35888,G__35889,G__35890,G__35891,G__35892));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35893 = a;
var G__35894 = b;
var G__35895 = c;
var G__35896 = d;
var G__35897 = e;
var G__35898 = f;
var G__35899 = g;
var G__35900 = h;
var G__35901 = i;
var G__35902 = j;
var G__35903 = k;
var G__35904 = l;
var G__35905 = m;
var G__35906 = n;
var G__35907 = o;
var G__35908 = p;
var G__35909 = q;
var G__35910 = r;
var G__35911 = s;
var G__35912 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__35893,G__35894,G__35895,G__35896,G__35897,G__35898,G__35899,G__35900,G__35901,G__35902,G__35903,G__35904,G__35905,G__35906,G__35907,G__35908,G__35909,G__35910,G__35911,G__35912) : target_fn.call(null,G__35893,G__35894,G__35895,G__35896,G__35897,G__35898,G__35899,G__35900,G__35901,G__35902,G__35903,G__35904,G__35905,G__35906,G__35907,G__35908,G__35909,G__35910,G__35911,G__35912));
});
var G__36333__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__36333 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__36333__1.call(this,self__);
case 2:
return G__36333__2.call(this,self__,a);
case 3:
return G__36333__3.call(this,self__,a,b);
case 4:
return G__36333__4.call(this,self__,a,b,c);
case 5:
return G__36333__5.call(this,self__,a,b,c,d);
case 6:
return G__36333__6.call(this,self__,a,b,c,d,e);
case 7:
return G__36333__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__36333__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__36333__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__36333__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__36333__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__36333__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__36333__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__36333__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__36333__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__36333__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__36333__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__36333__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__36333__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__36333__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__36333__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__36333__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36333.cljs$core$IFn$_invoke$arity$1 = G__36333__1;
G__36333.cljs$core$IFn$_invoke$arity$2 = G__36333__2;
G__36333.cljs$core$IFn$_invoke$arity$3 = G__36333__3;
G__36333.cljs$core$IFn$_invoke$arity$4 = G__36333__4;
G__36333.cljs$core$IFn$_invoke$arity$5 = G__36333__5;
G__36333.cljs$core$IFn$_invoke$arity$6 = G__36333__6;
G__36333.cljs$core$IFn$_invoke$arity$7 = G__36333__7;
G__36333.cljs$core$IFn$_invoke$arity$8 = G__36333__8;
G__36333.cljs$core$IFn$_invoke$arity$9 = G__36333__9;
G__36333.cljs$core$IFn$_invoke$arity$10 = G__36333__10;
G__36333.cljs$core$IFn$_invoke$arity$11 = G__36333__11;
G__36333.cljs$core$IFn$_invoke$arity$12 = G__36333__12;
G__36333.cljs$core$IFn$_invoke$arity$13 = G__36333__13;
G__36333.cljs$core$IFn$_invoke$arity$14 = G__36333__14;
G__36333.cljs$core$IFn$_invoke$arity$15 = G__36333__15;
G__36333.cljs$core$IFn$_invoke$arity$16 = G__36333__16;
G__36333.cljs$core$IFn$_invoke$arity$17 = G__36333__17;
G__36333.cljs$core$IFn$_invoke$arity$18 = G__36333__18;
G__36333.cljs$core$IFn$_invoke$arity$19 = G__36333__19;
G__36333.cljs$core$IFn$_invoke$arity$20 = G__36333__20;
G__36333.cljs$core$IFn$_invoke$arity$21 = G__36333__21;
G__36333.cljs$core$IFn$_invoke$arity$22 = G__36333__22;
return G__36333;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args35485){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35485)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35913 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__35913) : self__.dispatch_fn.call(null,G__35913));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35914 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__35914) : target_fn.call(null,G__35914));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35915 = a;
var G__35916 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__35915,G__35916) : self__.dispatch_fn.call(null,G__35915,G__35916));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35917 = a;
var G__35918 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__35917,G__35918) : target_fn.call(null,G__35917,G__35918));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35919 = a;
var G__35920 = b;
var G__35921 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__35919,G__35920,G__35921) : self__.dispatch_fn.call(null,G__35919,G__35920,G__35921));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35922 = a;
var G__35923 = b;
var G__35924 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__35922,G__35923,G__35924) : target_fn.call(null,G__35922,G__35923,G__35924));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35925 = a;
var G__35926 = b;
var G__35927 = c;
var G__35928 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__35925,G__35926,G__35927,G__35928) : self__.dispatch_fn.call(null,G__35925,G__35926,G__35927,G__35928));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35929 = a;
var G__35930 = b;
var G__35931 = c;
var G__35932 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__35929,G__35930,G__35931,G__35932) : target_fn.call(null,G__35929,G__35930,G__35931,G__35932));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35933 = a;
var G__35934 = b;
var G__35935 = c;
var G__35936 = d;
var G__35937 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__35933,G__35934,G__35935,G__35936,G__35937) : self__.dispatch_fn.call(null,G__35933,G__35934,G__35935,G__35936,G__35937));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35938 = a;
var G__35939 = b;
var G__35940 = c;
var G__35941 = d;
var G__35942 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__35938,G__35939,G__35940,G__35941,G__35942) : target_fn.call(null,G__35938,G__35939,G__35940,G__35941,G__35942));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35943 = a;
var G__35944 = b;
var G__35945 = c;
var G__35946 = d;
var G__35947 = e;
var G__35948 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__35943,G__35944,G__35945,G__35946,G__35947,G__35948) : self__.dispatch_fn.call(null,G__35943,G__35944,G__35945,G__35946,G__35947,G__35948));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35949 = a;
var G__35950 = b;
var G__35951 = c;
var G__35952 = d;
var G__35953 = e;
var G__35954 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__35949,G__35950,G__35951,G__35952,G__35953,G__35954) : target_fn.call(null,G__35949,G__35950,G__35951,G__35952,G__35953,G__35954));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35955 = a;
var G__35956 = b;
var G__35957 = c;
var G__35958 = d;
var G__35959 = e;
var G__35960 = f;
var G__35961 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__35955,G__35956,G__35957,G__35958,G__35959,G__35960,G__35961) : self__.dispatch_fn.call(null,G__35955,G__35956,G__35957,G__35958,G__35959,G__35960,G__35961));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35962 = a;
var G__35963 = b;
var G__35964 = c;
var G__35965 = d;
var G__35966 = e;
var G__35967 = f;
var G__35968 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__35962,G__35963,G__35964,G__35965,G__35966,G__35967,G__35968) : target_fn.call(null,G__35962,G__35963,G__35964,G__35965,G__35966,G__35967,G__35968));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35969 = a;
var G__35970 = b;
var G__35971 = c;
var G__35972 = d;
var G__35973 = e;
var G__35974 = f;
var G__35975 = g;
var G__35976 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__35969,G__35970,G__35971,G__35972,G__35973,G__35974,G__35975,G__35976) : self__.dispatch_fn.call(null,G__35969,G__35970,G__35971,G__35972,G__35973,G__35974,G__35975,G__35976));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35977 = a;
var G__35978 = b;
var G__35979 = c;
var G__35980 = d;
var G__35981 = e;
var G__35982 = f;
var G__35983 = g;
var G__35984 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__35977,G__35978,G__35979,G__35980,G__35981,G__35982,G__35983,G__35984) : target_fn.call(null,G__35977,G__35978,G__35979,G__35980,G__35981,G__35982,G__35983,G__35984));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35985 = a;
var G__35986 = b;
var G__35987 = c;
var G__35988 = d;
var G__35989 = e;
var G__35990 = f;
var G__35991 = g;
var G__35992 = h;
var G__35993 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__35985,G__35986,G__35987,G__35988,G__35989,G__35990,G__35991,G__35992,G__35993) : self__.dispatch_fn.call(null,G__35985,G__35986,G__35987,G__35988,G__35989,G__35990,G__35991,G__35992,G__35993));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35994 = a;
var G__35995 = b;
var G__35996 = c;
var G__35997 = d;
var G__35998 = e;
var G__35999 = f;
var G__36000 = g;
var G__36001 = h;
var G__36002 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__35994,G__35995,G__35996,G__35997,G__35998,G__35999,G__36000,G__36001,G__36002) : target_fn.call(null,G__35994,G__35995,G__35996,G__35997,G__35998,G__35999,G__36000,G__36001,G__36002));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36003 = a;
var G__36004 = b;
var G__36005 = c;
var G__36006 = d;
var G__36007 = e;
var G__36008 = f;
var G__36009 = g;
var G__36010 = h;
var G__36011 = i;
var G__36012 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__36003,G__36004,G__36005,G__36006,G__36007,G__36008,G__36009,G__36010,G__36011,G__36012) : self__.dispatch_fn.call(null,G__36003,G__36004,G__36005,G__36006,G__36007,G__36008,G__36009,G__36010,G__36011,G__36012));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36013 = a;
var G__36014 = b;
var G__36015 = c;
var G__36016 = d;
var G__36017 = e;
var G__36018 = f;
var G__36019 = g;
var G__36020 = h;
var G__36021 = i;
var G__36022 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__36013,G__36014,G__36015,G__36016,G__36017,G__36018,G__36019,G__36020,G__36021,G__36022) : target_fn.call(null,G__36013,G__36014,G__36015,G__36016,G__36017,G__36018,G__36019,G__36020,G__36021,G__36022));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36023 = a;
var G__36024 = b;
var G__36025 = c;
var G__36026 = d;
var G__36027 = e;
var G__36028 = f;
var G__36029 = g;
var G__36030 = h;
var G__36031 = i;
var G__36032 = j;
var G__36033 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__36023,G__36024,G__36025,G__36026,G__36027,G__36028,G__36029,G__36030,G__36031,G__36032,G__36033) : self__.dispatch_fn.call(null,G__36023,G__36024,G__36025,G__36026,G__36027,G__36028,G__36029,G__36030,G__36031,G__36032,G__36033));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36034 = a;
var G__36035 = b;
var G__36036 = c;
var G__36037 = d;
var G__36038 = e;
var G__36039 = f;
var G__36040 = g;
var G__36041 = h;
var G__36042 = i;
var G__36043 = j;
var G__36044 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__36034,G__36035,G__36036,G__36037,G__36038,G__36039,G__36040,G__36041,G__36042,G__36043,G__36044) : target_fn.call(null,G__36034,G__36035,G__36036,G__36037,G__36038,G__36039,G__36040,G__36041,G__36042,G__36043,G__36044));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36045 = a;
var G__36046 = b;
var G__36047 = c;
var G__36048 = d;
var G__36049 = e;
var G__36050 = f;
var G__36051 = g;
var G__36052 = h;
var G__36053 = i;
var G__36054 = j;
var G__36055 = k;
var G__36056 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__36045,G__36046,G__36047,G__36048,G__36049,G__36050,G__36051,G__36052,G__36053,G__36054,G__36055,G__36056) : self__.dispatch_fn.call(null,G__36045,G__36046,G__36047,G__36048,G__36049,G__36050,G__36051,G__36052,G__36053,G__36054,G__36055,G__36056));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36057 = a;
var G__36058 = b;
var G__36059 = c;
var G__36060 = d;
var G__36061 = e;
var G__36062 = f;
var G__36063 = g;
var G__36064 = h;
var G__36065 = i;
var G__36066 = j;
var G__36067 = k;
var G__36068 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__36057,G__36058,G__36059,G__36060,G__36061,G__36062,G__36063,G__36064,G__36065,G__36066,G__36067,G__36068) : target_fn.call(null,G__36057,G__36058,G__36059,G__36060,G__36061,G__36062,G__36063,G__36064,G__36065,G__36066,G__36067,G__36068));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36069 = a;
var G__36070 = b;
var G__36071 = c;
var G__36072 = d;
var G__36073 = e;
var G__36074 = f;
var G__36075 = g;
var G__36076 = h;
var G__36077 = i;
var G__36078 = j;
var G__36079 = k;
var G__36080 = l;
var G__36081 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__36069,G__36070,G__36071,G__36072,G__36073,G__36074,G__36075,G__36076,G__36077,G__36078,G__36079,G__36080,G__36081) : self__.dispatch_fn.call(null,G__36069,G__36070,G__36071,G__36072,G__36073,G__36074,G__36075,G__36076,G__36077,G__36078,G__36079,G__36080,G__36081));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36082 = a;
var G__36083 = b;
var G__36084 = c;
var G__36085 = d;
var G__36086 = e;
var G__36087 = f;
var G__36088 = g;
var G__36089 = h;
var G__36090 = i;
var G__36091 = j;
var G__36092 = k;
var G__36093 = l;
var G__36094 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__36082,G__36083,G__36084,G__36085,G__36086,G__36087,G__36088,G__36089,G__36090,G__36091,G__36092,G__36093,G__36094) : target_fn.call(null,G__36082,G__36083,G__36084,G__36085,G__36086,G__36087,G__36088,G__36089,G__36090,G__36091,G__36092,G__36093,G__36094));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36095 = a;
var G__36096 = b;
var G__36097 = c;
var G__36098 = d;
var G__36099 = e;
var G__36100 = f;
var G__36101 = g;
var G__36102 = h;
var G__36103 = i;
var G__36104 = j;
var G__36105 = k;
var G__36106 = l;
var G__36107 = m;
var G__36108 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__36095,G__36096,G__36097,G__36098,G__36099,G__36100,G__36101,G__36102,G__36103,G__36104,G__36105,G__36106,G__36107,G__36108) : self__.dispatch_fn.call(null,G__36095,G__36096,G__36097,G__36098,G__36099,G__36100,G__36101,G__36102,G__36103,G__36104,G__36105,G__36106,G__36107,G__36108));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36109 = a;
var G__36110 = b;
var G__36111 = c;
var G__36112 = d;
var G__36113 = e;
var G__36114 = f;
var G__36115 = g;
var G__36116 = h;
var G__36117 = i;
var G__36118 = j;
var G__36119 = k;
var G__36120 = l;
var G__36121 = m;
var G__36122 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__36109,G__36110,G__36111,G__36112,G__36113,G__36114,G__36115,G__36116,G__36117,G__36118,G__36119,G__36120,G__36121,G__36122) : target_fn.call(null,G__36109,G__36110,G__36111,G__36112,G__36113,G__36114,G__36115,G__36116,G__36117,G__36118,G__36119,G__36120,G__36121,G__36122));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36123 = a;
var G__36124 = b;
var G__36125 = c;
var G__36126 = d;
var G__36127 = e;
var G__36128 = f;
var G__36129 = g;
var G__36130 = h;
var G__36131 = i;
var G__36132 = j;
var G__36133 = k;
var G__36134 = l;
var G__36135 = m;
var G__36136 = n;
var G__36137 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__36123,G__36124,G__36125,G__36126,G__36127,G__36128,G__36129,G__36130,G__36131,G__36132,G__36133,G__36134,G__36135,G__36136,G__36137) : self__.dispatch_fn.call(null,G__36123,G__36124,G__36125,G__36126,G__36127,G__36128,G__36129,G__36130,G__36131,G__36132,G__36133,G__36134,G__36135,G__36136,G__36137));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36138 = a;
var G__36139 = b;
var G__36140 = c;
var G__36141 = d;
var G__36142 = e;
var G__36143 = f;
var G__36144 = g;
var G__36145 = h;
var G__36146 = i;
var G__36147 = j;
var G__36148 = k;
var G__36149 = l;
var G__36150 = m;
var G__36151 = n;
var G__36152 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__36138,G__36139,G__36140,G__36141,G__36142,G__36143,G__36144,G__36145,G__36146,G__36147,G__36148,G__36149,G__36150,G__36151,G__36152) : target_fn.call(null,G__36138,G__36139,G__36140,G__36141,G__36142,G__36143,G__36144,G__36145,G__36146,G__36147,G__36148,G__36149,G__36150,G__36151,G__36152));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36153 = a;
var G__36154 = b;
var G__36155 = c;
var G__36156 = d;
var G__36157 = e;
var G__36158 = f;
var G__36159 = g;
var G__36160 = h;
var G__36161 = i;
var G__36162 = j;
var G__36163 = k;
var G__36164 = l;
var G__36165 = m;
var G__36166 = n;
var G__36167 = o;
var G__36168 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__36153,G__36154,G__36155,G__36156,G__36157,G__36158,G__36159,G__36160,G__36161,G__36162,G__36163,G__36164,G__36165,G__36166,G__36167,G__36168) : self__.dispatch_fn.call(null,G__36153,G__36154,G__36155,G__36156,G__36157,G__36158,G__36159,G__36160,G__36161,G__36162,G__36163,G__36164,G__36165,G__36166,G__36167,G__36168));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36169 = a;
var G__36170 = b;
var G__36171 = c;
var G__36172 = d;
var G__36173 = e;
var G__36174 = f;
var G__36175 = g;
var G__36176 = h;
var G__36177 = i;
var G__36178 = j;
var G__36179 = k;
var G__36180 = l;
var G__36181 = m;
var G__36182 = n;
var G__36183 = o;
var G__36184 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__36169,G__36170,G__36171,G__36172,G__36173,G__36174,G__36175,G__36176,G__36177,G__36178,G__36179,G__36180,G__36181,G__36182,G__36183,G__36184) : target_fn.call(null,G__36169,G__36170,G__36171,G__36172,G__36173,G__36174,G__36175,G__36176,G__36177,G__36178,G__36179,G__36180,G__36181,G__36182,G__36183,G__36184));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36185 = a;
var G__36186 = b;
var G__36187 = c;
var G__36188 = d;
var G__36189 = e;
var G__36190 = f;
var G__36191 = g;
var G__36192 = h;
var G__36193 = i;
var G__36194 = j;
var G__36195 = k;
var G__36196 = l;
var G__36197 = m;
var G__36198 = n;
var G__36199 = o;
var G__36200 = p;
var G__36201 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__36185,G__36186,G__36187,G__36188,G__36189,G__36190,G__36191,G__36192,G__36193,G__36194,G__36195,G__36196,G__36197,G__36198,G__36199,G__36200,G__36201) : self__.dispatch_fn.call(null,G__36185,G__36186,G__36187,G__36188,G__36189,G__36190,G__36191,G__36192,G__36193,G__36194,G__36195,G__36196,G__36197,G__36198,G__36199,G__36200,G__36201));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36202 = a;
var G__36203 = b;
var G__36204 = c;
var G__36205 = d;
var G__36206 = e;
var G__36207 = f;
var G__36208 = g;
var G__36209 = h;
var G__36210 = i;
var G__36211 = j;
var G__36212 = k;
var G__36213 = l;
var G__36214 = m;
var G__36215 = n;
var G__36216 = o;
var G__36217 = p;
var G__36218 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__36202,G__36203,G__36204,G__36205,G__36206,G__36207,G__36208,G__36209,G__36210,G__36211,G__36212,G__36213,G__36214,G__36215,G__36216,G__36217,G__36218) : target_fn.call(null,G__36202,G__36203,G__36204,G__36205,G__36206,G__36207,G__36208,G__36209,G__36210,G__36211,G__36212,G__36213,G__36214,G__36215,G__36216,G__36217,G__36218));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36219 = a;
var G__36220 = b;
var G__36221 = c;
var G__36222 = d;
var G__36223 = e;
var G__36224 = f;
var G__36225 = g;
var G__36226 = h;
var G__36227 = i;
var G__36228 = j;
var G__36229 = k;
var G__36230 = l;
var G__36231 = m;
var G__36232 = n;
var G__36233 = o;
var G__36234 = p;
var G__36235 = q;
var G__36236 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__36219,G__36220,G__36221,G__36222,G__36223,G__36224,G__36225,G__36226,G__36227,G__36228,G__36229,G__36230,G__36231,G__36232,G__36233,G__36234,G__36235,G__36236) : self__.dispatch_fn.call(null,G__36219,G__36220,G__36221,G__36222,G__36223,G__36224,G__36225,G__36226,G__36227,G__36228,G__36229,G__36230,G__36231,G__36232,G__36233,G__36234,G__36235,G__36236));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36237 = a;
var G__36238 = b;
var G__36239 = c;
var G__36240 = d;
var G__36241 = e;
var G__36242 = f;
var G__36243 = g;
var G__36244 = h;
var G__36245 = i;
var G__36246 = j;
var G__36247 = k;
var G__36248 = l;
var G__36249 = m;
var G__36250 = n;
var G__36251 = o;
var G__36252 = p;
var G__36253 = q;
var G__36254 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__36237,G__36238,G__36239,G__36240,G__36241,G__36242,G__36243,G__36244,G__36245,G__36246,G__36247,G__36248,G__36249,G__36250,G__36251,G__36252,G__36253,G__36254) : target_fn.call(null,G__36237,G__36238,G__36239,G__36240,G__36241,G__36242,G__36243,G__36244,G__36245,G__36246,G__36247,G__36248,G__36249,G__36250,G__36251,G__36252,G__36253,G__36254));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36255 = a;
var G__36256 = b;
var G__36257 = c;
var G__36258 = d;
var G__36259 = e;
var G__36260 = f;
var G__36261 = g;
var G__36262 = h;
var G__36263 = i;
var G__36264 = j;
var G__36265 = k;
var G__36266 = l;
var G__36267 = m;
var G__36268 = n;
var G__36269 = o;
var G__36270 = p;
var G__36271 = q;
var G__36272 = r;
var G__36273 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__36255,G__36256,G__36257,G__36258,G__36259,G__36260,G__36261,G__36262,G__36263,G__36264,G__36265,G__36266,G__36267,G__36268,G__36269,G__36270,G__36271,G__36272,G__36273) : self__.dispatch_fn.call(null,G__36255,G__36256,G__36257,G__36258,G__36259,G__36260,G__36261,G__36262,G__36263,G__36264,G__36265,G__36266,G__36267,G__36268,G__36269,G__36270,G__36271,G__36272,G__36273));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36274 = a;
var G__36275 = b;
var G__36276 = c;
var G__36277 = d;
var G__36278 = e;
var G__36279 = f;
var G__36280 = g;
var G__36281 = h;
var G__36282 = i;
var G__36283 = j;
var G__36284 = k;
var G__36285 = l;
var G__36286 = m;
var G__36287 = n;
var G__36288 = o;
var G__36289 = p;
var G__36290 = q;
var G__36291 = r;
var G__36292 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__36274,G__36275,G__36276,G__36277,G__36278,G__36279,G__36280,G__36281,G__36282,G__36283,G__36284,G__36285,G__36286,G__36287,G__36288,G__36289,G__36290,G__36291,G__36292) : target_fn.call(null,G__36274,G__36275,G__36276,G__36277,G__36278,G__36279,G__36280,G__36281,G__36282,G__36283,G__36284,G__36285,G__36286,G__36287,G__36288,G__36289,G__36290,G__36291,G__36292));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36293 = a;
var G__36294 = b;
var G__36295 = c;
var G__36296 = d;
var G__36297 = e;
var G__36298 = f;
var G__36299 = g;
var G__36300 = h;
var G__36301 = i;
var G__36302 = j;
var G__36303 = k;
var G__36304 = l;
var G__36305 = m;
var G__36306 = n;
var G__36307 = o;
var G__36308 = p;
var G__36309 = q;
var G__36310 = r;
var G__36311 = s;
var G__36312 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__36293,G__36294,G__36295,G__36296,G__36297,G__36298,G__36299,G__36300,G__36301,G__36302,G__36303,G__36304,G__36305,G__36306,G__36307,G__36308,G__36309,G__36310,G__36311,G__36312) : self__.dispatch_fn.call(null,G__36293,G__36294,G__36295,G__36296,G__36297,G__36298,G__36299,G__36300,G__36301,G__36302,G__36303,G__36304,G__36305,G__36306,G__36307,G__36308,G__36309,G__36310,G__36311,G__36312));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36313 = a;
var G__36314 = b;
var G__36315 = c;
var G__36316 = d;
var G__36317 = e;
var G__36318 = f;
var G__36319 = g;
var G__36320 = h;
var G__36321 = i;
var G__36322 = j;
var G__36323 = k;
var G__36324 = l;
var G__36325 = m;
var G__36326 = n;
var G__36327 = o;
var G__36328 = p;
var G__36329 = q;
var G__36330 = r;
var G__36331 = s;
var G__36332 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__36313,G__36314,G__36315,G__36316,G__36317,G__36318,G__36319,G__36320,G__36321,G__36322,G__36323,G__36324,G__36325,G__36326,G__36327,G__36328,G__36329,G__36330,G__36331,G__36332) : target_fn.call(null,G__36313,G__36314,G__36315,G__36316,G__36317,G__36318,G__36319,G__36320,G__36321,G__36322,G__36323,G__36324,G__36325,G__36326,G__36327,G__36328,G__36329,G__36330,G__36331,G__36332));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__36334 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__36334);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4363__auto__,writer__4364__auto__,opt__4365__auto__){
return cljs.core._write(writer__4364__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__36339 = msg;
return Error(G__36339);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__36344 = x;
var G__36345 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__36344,G__36345) : pred.call(null,G__36344,G__36345));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__36346 = y;
var G__36347 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__36346,G__36347) : pred.call(null,G__36346,G__36347));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return cljs.core.constant$keyword$121;
} else {
return cljs.core.constant$keyword$122;
}
});
